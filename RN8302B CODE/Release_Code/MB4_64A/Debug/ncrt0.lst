* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Fri Apr 22 17:19:33 2016  PAGE 001

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

     1                                  ;***************************************************************************
     2                                  ; C Compiler for R8C/Tiny, M16C/60,30,20,10
     3                                  ; Copyright(C) 1999(2000-2006). Renesas Technology Corp.
     4                                  ; and Renesas Solutions Corp., All rights reserved.
     5                                  ;
     6                                  ; ncrt0.a30 : Startup Program for M16C family
     7                                  ;       
     8                                  ; $Date: 2006/11/22 04:13:23 $
     9                                  ; $Revision: 1.1.4.1 $
    10                                  ;***************************************************************************
    11                                  
    12                                  ;---------------------------------------------------------------------
    13                                  ; include files
    14                                  ;---------------------------------------------------------------------
    15                                  		.list		OFF
    16                                  		.list		ON
    17                                  
    18                                  ;---------------------------------------------------------------------
    19                                  ; BankSelect definition for 4M mode
    20                                  ;---------------------------------------------------------------------
    21                                  ;		.glb		__BankSelect
    22                                  ;__BankSelect	.equ	0BH
    23                                  
    24                                  ;=====================================================================
    25                                  ; Interrupt section start
    26                                  ;---------------------------------------------------------------------
    27                                  		.insf		start,S,0   ;;question1 Ask Renesas mw recorded 2009-12-03
    28                                  		.glb		start
    29                                  		.section	interrupt
    30  00000                           start:
    31                                  ;---------------------------------------------------------------------
    32                                  ; after reset,this program will start
    33                                  ;---------------------------------------------------------------------
    34  00000  EB400000r                		ldc			#istack_top,isp			;set istack pointer
    35  00004  C7020A00              S  		mov.b		#02h,0ah
    36  00008  B70400                Z  		mov.b		#00h,04h				;set processer mode 
    37  0000B  B70A00                Z  		mov.b		#00h,0ah
    38                                  .if __STACKSIZE__ != 0
    39  0000E  EB308000                 		ldc			#0080h,flg
    40  00012  EB500000r                		ldc			#stack_top,sp			;set stack pointer 
    41                                  .else
    42                                  .endif
    43  00016  EB600004                 		ldc			#data_SE_top,sb			;set sb register 
    44  0001A  EB200F00                 		ldintb		#__VECTOR_ADR__
               EB1000FD 
    45                                  
    46  00022  EB64                         fset     i    ; mw added 2009-12-23
    47                                  ;=====================================================================
    48                                  ; NEAR area initialize.
    49                                  ;---------------------------------------------------------------------
    50                                  ; bss zero clear
    51                                  ;---------------------------------------------------------------------
    52                                  ;---------------------------------------------------------------------
    53                                  		.glb      _PowerUpProcese  ; mw added 2009-12-23
    54  00024  FD000000r             A  		jsr.a     _PowerUpProcese  ; mw added 2009-12-23
    55                                  		
    56                                  		.glb      _DemandPowerUpShift   ; mw added 2009-12-23
    57  00028  FD000000r             A  		jsr.a     _DemandPowerUpShift	  ; mw added 2009-12-23 
    58                                  ;---------------------------------------------------------------------
    59                                  		N_BZERO		bss_SE_top,bss_SE
    60  0002C  B4                1 M Z  		mov.b		#00H,R0L
    61  0002D  AA0000r           1 M S  		mov.w		#(bss_SE_top & 0FFFFH),A1
* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Fri Apr 22 17:19:33 2016  PAGE 002

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

    62  00030  75C30000r         1 M    		mov.w		#sizeof bss_SE,R3
    63  00034  7CEA              1 M    		sstr.b
    64                           1 M    		.endm
    65                                  		N_BZERO		bss_SO_top,bss_SO
    66  00036  B4                1 M Z  		mov.b		#00H,R0L
    67  00037  AA0000r           1 M S  		mov.w		#(bss_SO_top & 0FFFFH),A1
    68  0003A  75C30000r         1 M    		mov.w		#sizeof bss_SO,R3
    69  0003E  7CEA              1 M    		sstr.b
    70                           1 M    		.endm
    71                                  		N_BZERO		bss_NE_top,bss_NE
    72  00040  B4                1 M Z  		mov.b		#00H,R0L
    73  00041  AA0000r           1 M S  		mov.w		#(bss_NE_top & 0FFFFH),A1
    74  00044  75C30000r         1 M    		mov.w		#sizeof bss_NE,R3
    75  00048  7CEA              1 M    		sstr.b
    76                           1 M    		.endm
    77                                  		N_BZERO		bss_NO_top,bss_NO	
    78  0004A  B4                1 M Z  		mov.b		#00H,R0L
    79  0004B  AA0000r           1 M S  		mov.w		#(bss_NO_top & 0FFFFH),A1
    80  0004E  75C30000r         1 M    		mov.w		#sizeof bss_NO,R3
    81  00052  7CEA              1 M    		sstr.b
    82                           1 M    		.endm
    83                                  ;---------------------------------------------------------------------	
    84                                  		.glb      _DemandPowerUpResume   ; mw added 2009-12-23
    85  00054  FD000000r             A  		jsr.a     _DemandPowerUpResume	  ; mw added 2009-12-23 
    86                                  ;---------------------------------------------------------------------
    87                                  ;---------------------------------------------------------------------
    88                                  ; initialize data section
    89                                  ;---------------------------------------------------------------------
    90                                  		N_BCOPY		data_SEI_top,data_SE_top,data_SE
    91  00058  A20000r           1 M S  		mov.w		#(data_SEI_top & 0FFFFH),A0
    92  0005B  74C300r           1 M    		mov.b		#(data_SEI_top >> 16),R1H
    93  0005E  AA0004            1 M S  		mov.w		#data_SE_top,A1
    94  00061  75C30000r         1 M    		mov.w		#sizeof data_SE,R3
    95  00065  7CE8              1 M    		smovf.b
    96                           1 M    		.endm
    97                                  		N_BCOPY		data_SOI_top,data_SO_top,data_SO
    98  00067  A20000r           1 M S  		mov.w		#(data_SOI_top & 0FFFFH),A0
    99  0006A  74C300r           1 M    		mov.b		#(data_SOI_top >> 16),R1H
   100  0006D  AA0000r           1 M S  		mov.w		#data_SO_top,A1
   101  00070  75C30000r         1 M    		mov.w		#sizeof data_SO,R3
   102  00074  7CE8              1 M    		smovf.b
   103                           1 M    		.endm
   104                                  		N_BCOPY		data_NEI_top,data_NE_top,data_NE
   105  00076  A20000r           1 M S  		mov.w		#(data_NEI_top & 0FFFFH),A0
   106  00079  74C300r           1 M    		mov.b		#(data_NEI_top >> 16),R1H
   107  0007C  AA0000r           1 M S  		mov.w		#data_NE_top,A1
   108  0007F  75C30000r         1 M    		mov.w		#sizeof data_NE,R3
   109  00083  7CE8              1 M    		smovf.b
   110                           1 M    		.endm
   111                                  		N_BCOPY		data_NOI_top,data_NO_top,data_NO
   112  00085  A20000r           1 M S  		mov.w		#(data_NOI_top & 0FFFFH),A0
   113  00088  74C300r           1 M    		mov.b		#(data_NOI_top >> 16),R1H
   114  0008B  AA0000r           1 M S  		mov.w		#data_NO_top,A1
   115  0008E  75C30000r         1 M    		mov.w		#sizeof data_NO,R3
   116  00092  7CE8              1 M    		smovf.b
   117                           1 M    		.endm
   118                                  
   119                                  ;=====================================================================
   120                                  ; FAR area initialize.
   121                                  ;---------------------------------------------------------------------
   122                                  ; bss zero clear
   123                                  ;---------------------------------------------------------------------
* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Fri Apr 22 17:19:33 2016  PAGE 003

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

   124                                  .if __FAR_RAM_FLG__ != 0  
   125                                  .endif   
   126                                  
   127                                  ;---------------------------------------------------------------------
   128                                  ; initialize data section
   129                                  ;---------------------------------------------------------------------
   130                                  .if __FAR_RAM_FLG__ != 0   
   131                                  .endif   
   132                                  
   133                                  ;=====================================================================
   134                                  ; heap area initialize
   135                                  ;---------------------------------------------------------------------
   136                                  .if __HEAPSIZE__ != 0
   137                                  .endif
   138                                  
   139                                  ;=====================================================================
   140                                  ; Initialize standard I/O
   141                                  ;---------------------------------------------------------------------
   142                                  ;.if __STANDARD_IO__ == 1   ;mw closed begin 2009-12-24 
   143                                  ;		.glb		__init
   144                                  ;		.call		__init,G
   145                                  ;		jsr.a		__init
   146                                  ;.endif   ;mw closed end  2009-12-24 
   147                                  
   148                                  ;=====================================================================
   149                                  ; Call main() function
   150                                  ;---------------------------------------------------------------------
   151  00094  EB700000                 		ldc			#0h,fb				; for debuger
   152                                  ;		.glb		_DemandPowerUpShiftfordebug
   153                                  ;		jsr.a		_DemandPowerUpShiftfordebug
   154                                  		.glb		_main
   155  00098  FD000000r             A  		jsr.a		_main
   156                                  
   157                                  ;=====================================================================
   158                                  ; exit() function
   159                                  ;---------------------------------------------------------------------
   160                                  		.glb		_exit
   161                                  		.glb		$exit
   162  0009C                           _exit:									; End program
   163  0009C                           $exit:
   164  0009C  FEFF                  B  		jmp			_exit
   165                                  		.einsf
   166                                  ;=====================================================================
   167                                  ; dummy interrupt function
   168                                  ;---------------------------------------------------------------------
   169                                  		.glb		dummy_int
   170  0009E                           dummy_int:
   171  0009E  FB                       		reit
   172                                  
   173                                  		.end

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00173   LINES

Section List

Attr        Size          Name
DATA     0000000(00000H)  data_SE
DATA     0000000(00000H)  bss_SE
DATA     0000000(00000H)  data_SO
DATA     0000000(00000H)  bss_SO
DATA     0000000(00000H)  data_NE
DATA     0000000(00000H)  bss_NE
DATA     0000000(00000H)  data_NO
DATA     0000000(00000H)  bss_NO
DATA     0001024(00400H)  istack
DATA     0001024(00400H)  stack
ROMDATA  0000000(00000H)  UserROMData_FE
ROMDATA  0000000(00000H)  UserROMData_FO
CODE     0000000(00000H)  ROM_PRG2
CODE     0000000(00000H)  ROM_PRGNOUSE
ROMDATA  0000000(00000H)  rom_FE
ROMDATA  0000000(00000H)  rom_FO
ROMDATA  0000000(00000H)  data_SEI
ROMDATA  0000000(00000H)  data_SOI
ROMDATA  0000000(00000H)  data_NEI
ROMDATA  0000000(00000H)  data_NOI
CODE     0000000(00000H)  program
CODE     0000000(00000H)  interrupt
CODE     0000000(00000H)  program_S
ROMDATA  0000328(00148H)  vector
ROMDATA  0000036(00024H)  fvector
CODE     0000159(0009FH)  interrupt
