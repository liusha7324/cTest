	._LANG	'C','5.31.30.005','REV.F'

;##    C Compiler		 OUTPUT
;## ccom30 Version 5.31.30.005
;## Copyright(C) 2001(2003,2004). Renesas Technology Corp.
;## and Renesas Solutions Corp., All rights reserved.
;## Compile Start Time Fri Apr 22 17:17:45 2016

;## COMMAND_LINE: ccom30  D:\TEST\12、RN8302B\HT7038 CODE_backup20160225_2016-4-22\HT7038 CODE\Release_Code\MB4_64A\Debug\LoadRecord.i -o D:\TEST\12、RN8302B\HT7038 CODE_backup20160225_2016-4-22\HT7038 CODE\Release_Code\MB4_64A\Debug\LoadRecord.a30 -finfo -O3 -WNP -WUV -WCMW=6


;## Normal Optimize		ON
;## ROM size Optimize		OFF
;## Speed Optimize		OFF
;## Default ROM is		far
;## Default RAM is		near

	.GLB	__SB__
	.SB	__SB__
	.FB	0
	._aopt	OFF

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord.c", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/MB_BASE_FUN.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "BCD2Byte", "$BCD2Byte", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "OB_H", "$OB_H", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "OH_B", "$OH_B", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "CheckTime", "$CheckTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD", "$CheckBCD", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD_NByte", "$CheckBCD_NByte", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "ABS", "_ABS", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ten_seq", "$ten_seq", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "search_unit", "$search_unit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcdnByte", "$HexToBcdnByte", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHexnByte", "$BcdToHexnByte", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "memcpy", "$memcpy", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "format_data", "_format_data", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/sfr64a.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
_pm0_addr	.equ	0004h
	._inspect	'V', 'd', "pm0_addr", "_pm0_addr", 'G', 141, 1, 1, 0, 00h
_pm1_addr	.equ	0005h
	._inspect	'V', 'd', "pm1_addr", "_pm1_addr", 'G', 157, 1, 1, 0, 00h
_cm0_addr	.equ	0006h
	._inspect	'V', 'd', "cm0_addr", "_cm0_addr", 'G', 172, 1, 1, 0, 00h
_cm1_addr	.equ	0007h
	._inspect	'V', 'd', "cm1_addr", "_cm1_addr", 'G', 188, 1, 1, 0, 00h
_csr_addr	.equ	0008h
	._inspect	'V', 'd', "csr_addr", "_csr_addr", 'G', 203, 1, 1, 0, 00h
_prcr_addr	.equ	000Ah
	._inspect	'V', 'd', "prcr_addr", "_prcr_addr", 'G', 219, 1, 1, 0, 00h
_dbr_addr	.equ	000Bh
	._inspect	'V', 'd', "dbr_addr", "_dbr_addr", 'G', 232, 1, 1, 0, 00h
_cm2_addr	.equ	000Ch
	._inspect	'V', 'd', "cm2_addr", "_cm2_addr", 'G', 244, 1, 1, 0, 00h
_prg2c_addr	.equ	0010h
	._inspect	'V', 'd', "prg2c_addr", "_prg2c_addr", 'G', 257, 1, 1, 0, 00h
_pclkr_addr	.equ	0012h
	._inspect	'V', 'd', "pclkr_addr", "_pclkr_addr", 'G', 266, 1, 1, 0, 00h
_cpsrf_addr	.equ	0015h
	._inspect	'V', 'd', "cpsrf_addr", "_cpsrf_addr", 'G', 277, 1, 1, 0, 00h
_rstfr_addr	.equ	0018h
	._inspect	'V', 'd', "rstfr_addr", "_rstfr_addr", 'G', 286, 1, 1, 0, 00h
_vcr1_addr	.equ	0019h
	._inspect	'V', 'd', "vcr1_addr", "_vcr1_addr", 'G', 301, 1, 1, 0, 00h
_vcr2_addr	.equ	001Ah
	._inspect	'V', 'd', "vcr2_addr", "_vcr2_addr", 'G', 310, 1, 1, 0, 00h
_cse_addr	.equ	001Bh
	._inspect	'V', 'd', "cse_addr", "_cse_addr", 'G', 321, 1, 1, 0, 00h
_plc0_addr	.equ	001Ch
	._inspect	'V', 'd', "plc0_addr", "_plc0_addr", 'G', 337, 1, 1, 0, 00h
_pm2_addr	.equ	001Eh
	._inspect	'V', 'd', "pm2_addr", "_pm2_addr", 'G', 351, 1, 1, 0, 00h
_vwce_addr	.equ	0026h
	._inspect	'V', 'd', "vwce_addr", "_vwce_addr", 'G', 362, 1, 1, 0, 00h
_vd1ls_addr	.equ	0028h
	._inspect	'V', 'd', "vd1ls_addr", "_vd1ls_addr", 'G', 371, 1, 1, 0, 00h
_vw0c_addr	.equ	002Ah
	._inspect	'V', 'd', "vw0c_addr", "_vw0c_addr", 'G', 383, 1, 1, 0, 00h
_vw1c_addr	.equ	002Bh
	._inspect	'V', 'd', "vw1c_addr", "_vw1c_addr", 'G', 395, 1, 1, 0, 00h
_vw2c_addr	.equ	002Ch
	._inspect	'V', 'd', "vw2c_addr", "_vw2c_addr", 'G', 411, 1, 1, 0, 00h
_int7ic_addr	.equ	0042h
	._inspect	'V', 'd', "int7ic_addr", "_int7ic_addr", 'G', 427, 1, 1, 0, 00h
_int6ic_addr	.equ	0043h
	._inspect	'V', 'd', "int6ic_addr", "_int6ic_addr", 'G', 440, 1, 1, 0, 00h
_int3ic_addr	.equ	0044h
	._inspect	'V', 'd', "int3ic_addr", "_int3ic_addr", 'G', 453, 1, 1, 0, 00h
_tb5ic_addr	.equ	0045h
	._inspect	'V', 'd', "tb5ic_addr", "_tb5ic_addr", 'G', 466, 1, 1, 0, 00h
_tb4ic_addr	.equ	0046h
	._inspect	'V', 'd', "tb4ic_addr", "_tb4ic_addr", 'G', 478, 1, 1, 0, 00h
_u1bcnic_addr	.equ	0046h
	._inspect	'V', 'd', "u1bcnic_addr", "_u1bcnic_addr", 'G', 490, 1, 1, 0, 00h
_tb3ic_addr	.equ	0047h
	._inspect	'V', 'd', "tb3ic_addr", "_tb3ic_addr", 'G', 502, 1, 1, 0, 00h
_u0bcnic_addr	.equ	0047h
	._inspect	'V', 'd', "u0bcnic_addr", "_u0bcnic_addr", 'G', 514, 1, 1, 0, 00h
_s4ic_addr	.equ	0048h
	._inspect	'V', 'd', "s4ic_addr", "_s4ic_addr", 'G', 526, 1, 1, 0, 00h
_int5ic_addr	.equ	0048h
	._inspect	'V', 'd', "int5ic_addr", "_int5ic_addr", 'G', 539, 1, 1, 0, 00h
_s3ic_addr	.equ	0049h
	._inspect	'V', 'd', "s3ic_addr", "_s3ic_addr", 'G', 552, 1, 1, 0, 00h
_int4ic_addr	.equ	0049h
	._inspect	'V', 'd', "int4ic_addr", "_int4ic_addr", 'G', 565, 1, 1, 0, 00h
_bcnic_addr	.equ	004Ah
	._inspect	'V', 'd', "bcnic_addr", "_bcnic_addr", 'G', 578, 1, 1, 0, 00h
_dm0ic_addr	.equ	004Bh
	._inspect	'V', 'd', "dm0ic_addr", "_dm0ic_addr", 'G', 590, 1, 1, 0, 00h
_dm1ic_addr	.equ	004Ch
	._inspect	'V', 'd', "dm1ic_addr", "_dm1ic_addr", 'G', 602, 1, 1, 0, 00h
_kupic_addr	.equ	004Dh
	._inspect	'V', 'd', "kupic_addr", "_kupic_addr", 'G', 614, 1, 1, 0, 00h
_adic_addr	.equ	004Eh
	._inspect	'V', 'd', "adic_addr", "_adic_addr", 'G', 626, 1, 1, 0, 00h
_s2tic_addr	.equ	004Fh
	._inspect	'V', 'd', "s2tic_addr", "_s2tic_addr", 'G', 638, 1, 1, 0, 00h
_s2ric_addr	.equ	0050h
	._inspect	'V', 'd', "s2ric_addr", "_s2ric_addr", 'G', 650, 1, 1, 0, 00h
_s0tic_addr	.equ	0051h
	._inspect	'V', 'd', "s0tic_addr", "_s0tic_addr", 'G', 662, 1, 1, 0, 00h
_s0ric_addr	.equ	0052h
	._inspect	'V', 'd', "s0ric_addr", "_s0ric_addr", 'G', 674, 1, 1, 0, 00h
_s1tic_addr	.equ	0053h
	._inspect	'V', 'd', "s1tic_addr", "_s1tic_addr", 'G', 686, 1, 1, 0, 00h
_s1ric_addr	.equ	0054h
	._inspect	'V', 'd', "s1ric_addr", "_s1ric_addr", 'G', 698, 1, 1, 0, 00h
_ta0ic_addr	.equ	0055h
	._inspect	'V', 'd', "ta0ic_addr", "_ta0ic_addr", 'G', 710, 1, 1, 0, 00h
_ta1ic_addr	.equ	0056h
	._inspect	'V', 'd', "ta1ic_addr", "_ta1ic_addr", 'G', 722, 1, 1, 0, 00h
_ta2ic_addr	.equ	0057h
	._inspect	'V', 'd', "ta2ic_addr", "_ta2ic_addr", 'G', 734, 1, 1, 0, 00h
_ta3ic_addr	.equ	0058h
	._inspect	'V', 'd', "ta3ic_addr", "_ta3ic_addr", 'G', 746, 1, 1, 0, 00h
_ta4ic_addr	.equ	0059h
	._inspect	'V', 'd', "ta4ic_addr", "_ta4ic_addr", 'G', 758, 1, 1, 0, 00h
_tb0ic_addr	.equ	005Ah
	._inspect	'V', 'd', "tb0ic_addr", "_tb0ic_addr", 'G', 770, 1, 1, 0, 00h
_tb1ic_addr	.equ	005Bh
	._inspect	'V', 'd', "tb1ic_addr", "_tb1ic_addr", 'G', 782, 1, 1, 0, 00h
_tb2ic_addr	.equ	005Ch
	._inspect	'V', 'd', "tb2ic_addr", "_tb2ic_addr", 'G', 794, 1, 1, 0, 00h
_int0ic_addr	.equ	005Dh
	._inspect	'V', 'd', "int0ic_addr", "_int0ic_addr", 'G', 806, 1, 1, 0, 00h
_int1ic_addr	.equ	005Eh
	._inspect	'V', 'd', "int1ic_addr", "_int1ic_addr", 'G', 819, 1, 1, 0, 00h
_int2ic_addr	.equ	005Fh
	._inspect	'V', 'd', "int2ic_addr", "_int2ic_addr", 'G', 832, 1, 1, 0, 00h
_dm2ic_addr	.equ	0069h
	._inspect	'V', 'd', "dm2ic_addr", "_dm2ic_addr", 'G', 845, 1, 1, 0, 00h
_dm3ic_addr	.equ	006Ah
	._inspect	'V', 'd', "dm3ic_addr", "_dm3ic_addr", 'G', 857, 1, 1, 0, 00h
_u5bcnic_addr	.equ	006Bh
	._inspect	'V', 'd', "u5bcnic_addr", "_u5bcnic_addr", 'G', 869, 1, 1, 0, 00h
_cec1ic_addr	.equ	006Bh
	._inspect	'V', 'd', "cec1ic_addr", "_cec1ic_addr", 'G', 881, 1, 1, 0, 00h
_s5tic_addr	.equ	006Ch
	._inspect	'V', 'd', "s5tic_addr", "_s5tic_addr", 'G', 893, 1, 1, 0, 00h
_cec2ic_addr	.equ	006Ch
	._inspect	'V', 'd', "cec2ic_addr", "_cec2ic_addr", 'G', 905, 1, 1, 0, 00h
_s5ric_addr	.equ	006Dh
	._inspect	'V', 'd', "s5ric_addr", "_s5ric_addr", 'G', 917, 1, 1, 0, 00h
_u6bcnic_addr	.equ	006Eh
	._inspect	'V', 'd', "u6bcnic_addr", "_u6bcnic_addr", 'G', 929, 1, 1, 0, 00h
_rtctic_addr	.equ	006Eh
	._inspect	'V', 'd', "rtctic_addr", "_rtctic_addr", 'G', 941, 1, 1, 0, 00h
_s6tic_addr	.equ	006Fh
	._inspect	'V', 'd', "s6tic_addr", "_s6tic_addr", 'G', 953, 1, 1, 0, 00h
_rtccic_addr	.equ	006Fh
	._inspect	'V', 'd', "rtccic_addr", "_rtccic_addr", 'G', 965, 1, 1, 0, 00h
_s6ric_addr	.equ	0070h
	._inspect	'V', 'd', "s6ric_addr", "_s6ric_addr", 'G', 977, 1, 1, 0, 00h
_u7bcnic_addr	.equ	0071h
	._inspect	'V', 'd', "u7bcnic_addr", "_u7bcnic_addr", 'G', 989, 1, 1, 0, 00h
_pmc0ic_addr	.equ	0071h
	._inspect	'V', 'd', "pmc0ic_addr", "_pmc0ic_addr", 'G', 1001, 1, 1, 0, 00h
_s7tic_addr	.equ	0072h
	._inspect	'V', 'd', "s7tic_addr", "_s7tic_addr", 'G', 1013, 1, 1, 0, 00h
_pmc1ic_addr	.equ	0072h
	._inspect	'V', 'd', "pmc1ic_addr", "_pmc1ic_addr", 'G', 1025, 1, 1, 0, 00h
_s7ric_addr	.equ	0073h
	._inspect	'V', 'd', "s7ric_addr", "_s7ric_addr", 'G', 1037, 1, 1, 0, 00h
_iicic_addr	.equ	007Bh
	._inspect	'V', 'd', "iicic_addr", "_iicic_addr", 'G', 1049, 1, 1, 0, 00h
_scldaic_addr	.equ	007Ch
	._inspect	'V', 'd', "scldaic_addr", "_scldaic_addr", 'G', 1061, 1, 1, 0, 00h
_sar0_addr	.equ	0180h
	._inspect	'V', 'd', "sar0_addr", "_sar0_addr", 'G', 1073, 4, 1, 0, 00h
_dar0_addr	.equ	0184h
	._inspect	'V', 'd', "dar0_addr", "_dar0_addr", 'G', 1083, 4, 1, 0, 00h
_tcr0_addr	.equ	0188h
	._inspect	'V', 'd', "tcr0_addr", "_tcr0_addr", 'G', 1093, 2, 1, 0, 00h
_dm0con_addr	.equ	018Ch
	._inspect	'V', 'd', "dm0con_addr", "_dm0con_addr", 'G', 1102, 1, 1, 0, 00h
_sar1_addr	.equ	0190h
	._inspect	'V', 'd', "sar1_addr", "_sar1_addr", 'G', 1116, 4, 1, 0, 00h
_dar1_addr	.equ	0194h
	._inspect	'V', 'd', "dar1_addr", "_dar1_addr", 'G', 1126, 4, 1, 0, 00h
_tcr1_addr	.equ	0198h
	._inspect	'V', 'd', "tcr1_addr", "_tcr1_addr", 'G', 1136, 2, 1, 0, 00h
_dm1con_addr	.equ	019Ch
	._inspect	'V', 'd', "dm1con_addr", "_dm1con_addr", 'G', 1145, 1, 1, 0, 00h
_sar2_addr	.equ	01A0h
	._inspect	'V', 'd', "sar2_addr", "_sar2_addr", 'G', 1159, 4, 1, 0, 00h
_dar2_addr	.equ	01A4h
	._inspect	'V', 'd', "dar2_addr", "_dar2_addr", 'G', 1169, 4, 1, 0, 00h
_tcr2_addr	.equ	01A8h
	._inspect	'V', 'd', "tcr2_addr", "_tcr2_addr", 'G', 1179, 2, 1, 0, 00h
_dm2con_addr	.equ	01ACh
	._inspect	'V', 'd', "dm2con_addr", "_dm2con_addr", 'G', 1188, 1, 1, 0, 00h
_sar3_addr	.equ	01B0h
	._inspect	'V', 'd', "sar3_addr", "_sar3_addr", 'G', 1202, 4, 1, 0, 00h
_dar3_addr	.equ	01B4h
	._inspect	'V', 'd', "dar3_addr", "_dar3_addr", 'G', 1212, 4, 1, 0, 00h
_tcr3_addr	.equ	01B8h
	._inspect	'V', 'd', "tcr3_addr", "_tcr3_addr", 'G', 1222, 2, 1, 0, 00h
_dm3con_addr	.equ	01BCh
	._inspect	'V', 'd', "dm3con_addr", "_dm3con_addr", 'G', 1231, 1, 1, 0, 00h
_tb01_addr	.equ	01C0h
	._inspect	'V', 'd', "tb01_addr", "_tb01_addr", 'G', 1245, 2, 1, 0, 00h
_tb11_addr	.equ	01C2h
	._inspect	'V', 'd', "tb11_addr", "_tb11_addr", 'G', 1252, 2, 1, 0, 00h
_tb21_addr	.equ	01C4h
	._inspect	'V', 'd', "tb21_addr", "_tb21_addr", 'G', 1259, 2, 1, 0, 00h
_ppwfs1_addr	.equ	01C6h
	._inspect	'V', 'd', "ppwfs1_addr", "_ppwfs1_addr", 'G', 1266, 1, 1, 0, 00h
_tbcs0_addr	.equ	01C8h
	._inspect	'V', 'd', "tbcs0_addr", "_tbcs0_addr", 'G', 1277, 1, 1, 0, 00h
_tbcs1_addr	.equ	01C9h
	._inspect	'V', 'd', "tbcs1_addr", "_tbcs1_addr", 'G', 1293, 1, 1, 0, 00h
_tacs0_addr	.equ	01D0h
	._inspect	'V', 'd', "tacs0_addr", "_tacs0_addr", 'G', 1305, 1, 1, 0, 00h
_tacs1_addr	.equ	01D1h
	._inspect	'V', 'd', "tacs1_addr", "_tacs1_addr", 'G', 1321, 1, 1, 0, 00h
_tacs2_addr	.equ	01D2h
	._inspect	'V', 'd', "tacs2_addr", "_tacs2_addr", 'G', 1337, 1, 1, 0, 00h
_pwmfs_addr	.equ	01D4h
	._inspect	'V', 'd', "pwmfs_addr", "_pwmfs_addr", 'G', 1349, 1, 1, 0, 00h
_tapofs_addr	.equ	01D5h
	._inspect	'V', 'd', "tapofs_addr", "_tapofs_addr", 'G', 1360, 1, 1, 0, 00h
_taow_addr	.equ	01D8h
	._inspect	'V', 'd', "taow_addr", "_taow_addr", 'G', 1373, 1, 1, 0, 00h
_tprc_addr	.equ	01DAh
	._inspect	'V', 'd', "tprc_addr", "_tprc_addr", 'G', 1384, 1, 1, 0, 00h
_tb31_addr	.equ	01E0h
	._inspect	'V', 'd', "tb31_addr", "_tb31_addr", 'G', 1393, 2, 1, 0, 00h
_tb41_addr	.equ	01E2h
	._inspect	'V', 'd', "tb41_addr", "_tb41_addr", 'G', 1400, 2, 1, 0, 00h
_tb51_addr	.equ	01E4h
	._inspect	'V', 'd', "tb51_addr", "_tb51_addr", 'G', 1407, 2, 1, 0, 00h
_ppwfs2_addr	.equ	01E6h
	._inspect	'V', 'd', "ppwfs2_addr", "_ppwfs2_addr", 'G', 1414, 1, 1, 0, 00h
_tbcs2_addr	.equ	01E8h
	._inspect	'V', 'd', "tbcs2_addr", "_tbcs2_addr", 'G', 1425, 1, 1, 0, 00h
_tbcs3_addr	.equ	01E9h
	._inspect	'V', 'd', "tbcs3_addr", "_tbcs3_addr", 'G', 1441, 1, 1, 0, 00h
_pmc0con0_addr	.equ	01F0h
	._inspect	'V', 'd', "pmc0con0_addr", "_pmc0con0_addr", 'G', 1453, 1, 1, 0, 00h
_pmc0con1_addr	.equ	01F1h
	._inspect	'V', 'd', "pmc0con1_addr", "_pmc0con1_addr", 'G', 1469, 1, 1, 0, 00h
_pmc0con2_addr	.equ	01F2h
	._inspect	'V', 'd', "pmc0con2_addr", "_pmc0con2_addr", 'G', 1482, 1, 1, 0, 00h
_pmc0con3_addr	.equ	01F3h
	._inspect	'V', 'd', "pmc0con3_addr", "_pmc0con3_addr", 'G', 1496, 1, 1, 0, 00h
_pmc0sts_addr	.equ	01F4h
	._inspect	'V', 'd', "pmc0sts_addr", "_pmc0sts_addr", 'G', 1512, 1, 1, 0, 00h
_pmc0int_addr	.equ	01F5h
	._inspect	'V', 'd', "pmc0int_addr", "_pmc0int_addr", 'G', 1528, 1, 1, 0, 00h
_pmc0cpc_addr	.equ	01F6h
	._inspect	'V', 'd', "pmc0cpc_addr", "_pmc0cpc_addr", 'G', 1544, 1, 1, 0, 00h
_pmc0cpd_addr	.equ	01F7h
	._inspect	'V', 'd', "pmc0cpd_addr", "_pmc0cpd_addr", 'G', 1556, 1, 1, 0, 00h
_pmc1con0_addr	.equ	01F8h
	._inspect	'V', 'd', "pmc1con0_addr", "_pmc1con0_addr", 'G', 1563, 1, 1, 0, 00h
_pmc1con1_addr	.equ	01F9h
	._inspect	'V', 'd', "pmc1con1_addr", "_pmc1con1_addr", 'G', 1575, 1, 1, 0, 00h
_pmc1con2_addr	.equ	01FAh
	._inspect	'V', 'd', "pmc1con2_addr", "_pmc1con2_addr", 'G', 1585, 1, 1, 0, 00h
_pmc1con3_addr	.equ	01FBh
	._inspect	'V', 'd', "pmc1con3_addr", "_pmc1con3_addr", 'G', 1599, 1, 1, 0, 00h
_pmc1sts_addr	.equ	01FCh
	._inspect	'V', 'd', "pmc1sts_addr", "_pmc1sts_addr", 'G', 1615, 1, 1, 0, 00h
_pmc1int_addr	.equ	01FDh
	._inspect	'V', 'd', "pmc1int_addr", "_pmc1int_addr", 'G', 1628, 1, 1, 0, 00h
_ifsr3a_addr	.equ	0205h
	._inspect	'V', 'd', "ifsr3a_addr", "_ifsr3a_addr", 'G', 1641, 1, 1, 0, 00h
_ifsr2a_addr	.equ	0206h
	._inspect	'V', 'd', "ifsr2a_addr", "_ifsr2a_addr", 'G', 1655, 1, 1, 0, 00h
_ifsr_addr	.equ	0207h
	._inspect	'V', 'd', "ifsr_addr", "_ifsr_addr", 'G', 1669, 1, 1, 0, 00h
_aier_addr	.equ	020Eh
	._inspect	'V', 'd', "aier_addr", "_aier_addr", 'G', 1685, 1, 1, 0, 00h
_aier2_addr	.equ	020Fh
	._inspect	'V', 'd', "aier2_addr", "_aier2_addr", 'G', 1695, 1, 1, 0, 00h
_rmad0_addr	.equ	0210h
	._inspect	'V', 'd', "rmad0_addr", "_rmad0_addr", 'G', 1705, 4, 1, 0, 00h
_rmad1_addr	.equ	0214h
	._inspect	'V', 'd', "rmad1_addr", "_rmad1_addr", 'G', 1715, 4, 1, 0, 00h
_rmad2_addr	.equ	0218h
	._inspect	'V', 'd', "rmad2_addr", "_rmad2_addr", 'G', 1725, 4, 1, 0, 00h
_rmad3_addr	.equ	021Ch
	._inspect	'V', 'd', "rmad3_addr", "_rmad3_addr", 'G', 1735, 4, 1, 0, 00h
_fmr0_addr	.equ	0220h
	._inspect	'V', 'd', "fmr0_addr", "_fmr0_addr", 'G', 1745, 1, 1, 0, 00h
_fmr1_addr	.equ	0221h
	._inspect	'V', 'd', "fmr1_addr", "_fmr1_addr", 'G', 1759, 1, 1, 0, 00h
_fmr2_addr	.equ	0222h
	._inspect	'V', 'd', "fmr2_addr", "_fmr2_addr", 'G', 1770, 1, 1, 0, 00h
_fmr6_addr	.equ	0230h
	._inspect	'V', 'd', "fmr6_addr", "_fmr6_addr", 'G', 1780, 1, 1, 0, 00h
_u0smr4_addr	.equ	0244h
	._inspect	'V', 'd', "u0smr4_addr", "_u0smr4_addr", 'G', 1790, 1, 1, 0, 00h
_u0smr3_addr	.equ	0245h
	._inspect	'V', 'd', "u0smr3_addr", "_u0smr3_addr", 'G', 1806, 1, 1, 0, 00h
_u0smr2_addr	.equ	0246h
	._inspect	'V', 'd', "u0smr2_addr", "_u0smr2_addr", 'G', 1819, 1, 1, 0, 00h
_u0smr_addr	.equ	0247h
	._inspect	'V', 'd', "u0smr_addr", "_u0smr_addr", 'G', 1834, 1, 1, 0, 00h
_u0mr_addr	.equ	0248h
	._inspect	'V', 'd', "u0mr_addr", "_u0mr_addr", 'G', 1848, 1, 1, 0, 00h
_u0brg_addr	.equ	0249h
	._inspect	'V', 'd', "u0brg_addr", "_u0brg_addr", 'G', 1864, 1, 1, 0, 00h
_u0tb_addr	.equ	024Ah
	._inspect	'V', 'd', "u0tb_addr", "_u0tb_addr", 'G', 1871, 2, 1, 0, 00h
_u0c0_addr	.equ	024Ch
	._inspect	'V', 'd', "u0c0_addr", "_u0c0_addr", 'G', 1880, 1, 1, 0, 00h
_u0c1_addr	.equ	024Dh
	._inspect	'V', 'd', "u0c1_addr", "_u0c1_addr", 'G', 1896, 1, 1, 0, 00h
_u0rb_addr	.equ	024Eh
	._inspect	'V', 'd', "u0rb_addr", "_u0rb_addr", 'G', 1910, 2, 1, 0, 00h
_ucon_addr	.equ	0250h
	._inspect	'V', 'd', "ucon_addr", "_ucon_addr", 'G', 1925, 1, 1, 0, 00h
_u1smr4_addr	.equ	0254h
	._inspect	'V', 'd', "u1smr4_addr", "_u1smr4_addr", 'G', 1940, 1, 1, 0, 00h
_u1smr3_addr	.equ	0255h
	._inspect	'V', 'd', "u1smr3_addr", "_u1smr3_addr", 'G', 1956, 1, 1, 0, 00h
_u1smr2_addr	.equ	0256h
	._inspect	'V', 'd', "u1smr2_addr", "_u1smr2_addr", 'G', 1969, 1, 1, 0, 00h
_u1smr_addr	.equ	0257h
	._inspect	'V', 'd', "u1smr_addr", "_u1smr_addr", 'G', 1984, 1, 1, 0, 00h
_u1mr_addr	.equ	0258h
	._inspect	'V', 'd', "u1mr_addr", "_u1mr_addr", 'G', 1998, 1, 1, 0, 00h
_u1brg_addr	.equ	0259h
	._inspect	'V', 'd', "u1brg_addr", "_u1brg_addr", 'G', 2014, 1, 1, 0, 00h
_u1tb_addr	.equ	025Ah
	._inspect	'V', 'd', "u1tb_addr", "_u1tb_addr", 'G', 2021, 2, 1, 0, 00h
_u1c0_addr	.equ	025Ch
	._inspect	'V', 'd', "u1c0_addr", "_u1c0_addr", 'G', 2030, 1, 1, 0, 00h
_u1c1_addr	.equ	025Dh
	._inspect	'V', 'd', "u1c1_addr", "_u1c1_addr", 'G', 2046, 1, 1, 0, 00h
_u1rb_addr	.equ	025Eh
	._inspect	'V', 'd', "u1rb_addr", "_u1rb_addr", 'G', 2060, 2, 1, 0, 00h
_u2smr4_addr	.equ	0264h
	._inspect	'V', 'd', "u2smr4_addr", "_u2smr4_addr", 'G', 2075, 1, 1, 0, 00h
_u2smr3_addr	.equ	0265h
	._inspect	'V', 'd', "u2smr3_addr", "_u2smr3_addr", 'G', 2091, 1, 1, 0, 00h
_u2smr2_addr	.equ	0266h
	._inspect	'V', 'd', "u2smr2_addr", "_u2smr2_addr", 'G', 2104, 1, 1, 0, 00h
_u2smr_addr	.equ	0267h
	._inspect	'V', 'd', "u2smr_addr", "_u2smr_addr", 'G', 2119, 1, 1, 0, 00h
_u2mr_addr	.equ	0268h
	._inspect	'V', 'd', "u2mr_addr", "_u2mr_addr", 'G', 2133, 1, 1, 0, 00h
_u2brg_addr	.equ	0269h
	._inspect	'V', 'd', "u2brg_addr", "_u2brg_addr", 'G', 2149, 1, 1, 0, 00h
_u2tb_addr	.equ	026Ah
	._inspect	'V', 'd', "u2tb_addr", "_u2tb_addr", 'G', 2156, 2, 1, 0, 00h
_u2c0_addr	.equ	026Ch
	._inspect	'V', 'd', "u2c0_addr", "_u2c0_addr", 'G', 2165, 1, 1, 0, 00h
_u2c1_addr	.equ	026Dh
	._inspect	'V', 'd', "u2c1_addr", "_u2c1_addr", 'G', 2181, 1, 1, 0, 00h
_u2rb_addr	.equ	026Eh
	._inspect	'V', 'd', "u2rb_addr", "_u2rb_addr", 'G', 2197, 2, 1, 0, 00h
_s3trr_addr	.equ	0270h
	._inspect	'V', 'd', "s3trr_addr", "_s3trr_addr", 'G', 2212, 1, 1, 0, 00h
_s3c_addr	.equ	0272h
	._inspect	'V', 'd', "s3c_addr", "_s3c_addr", 'G', 2219, 1, 1, 0, 00h
_s3brg_addr	.equ	0273h
	._inspect	'V', 'd', "s3brg_addr", "_s3brg_addr", 'G', 2235, 1, 1, 0, 00h
_s4trr_addr	.equ	0274h
	._inspect	'V', 'd', "s4trr_addr", "_s4trr_addr", 'G', 2242, 1, 1, 0, 00h
_s4c_addr	.equ	0276h
	._inspect	'V', 'd', "s4c_addr", "_s4c_addr", 'G', 2249, 1, 1, 0, 00h
_s4brg_addr	.equ	0277h
	._inspect	'V', 'd', "s4brg_addr", "_s4brg_addr", 'G', 2265, 1, 1, 0, 00h
_s34c2_addr	.equ	0278h
	._inspect	'V', 'd', "s34c2_addr", "_s34c2_addr", 'G', 2272, 1, 1, 0, 00h
_u5smr4_addr	.equ	0284h
	._inspect	'V', 'd', "u5smr4_addr", "_u5smr4_addr", 'G', 2282, 1, 1, 0, 00h
_u5smr3_addr	.equ	0285h
	._inspect	'V', 'd', "u5smr3_addr", "_u5smr3_addr", 'G', 2298, 1, 1, 0, 00h
_u5smr2_addr	.equ	0286h
	._inspect	'V', 'd', "u5smr2_addr", "_u5smr2_addr", 'G', 2311, 1, 1, 0, 00h
_u5smr_addr	.equ	0287h
	._inspect	'V', 'd', "u5smr_addr", "_u5smr_addr", 'G', 2326, 1, 1, 0, 00h
_u5mr_addr	.equ	0288h
	._inspect	'V', 'd', "u5mr_addr", "_u5mr_addr", 'G', 2340, 1, 1, 0, 00h
_u5brg_addr	.equ	0289h
	._inspect	'V', 'd', "u5brg_addr", "_u5brg_addr", 'G', 2356, 1, 1, 0, 00h
_u5tb_addr	.equ	028Ah
	._inspect	'V', 'd', "u5tb_addr", "_u5tb_addr", 'G', 2363, 2, 1, 0, 00h
_u5c0_addr	.equ	028Ch
	._inspect	'V', 'd', "u5c0_addr", "_u5c0_addr", 'G', 2372, 1, 1, 0, 00h
_u5c1_addr	.equ	028Dh
	._inspect	'V', 'd', "u5c1_addr", "_u5c1_addr", 'G', 2388, 1, 1, 0, 00h
_u5rb_addr	.equ	028Eh
	._inspect	'V', 'd', "u5rb_addr", "_u5rb_addr", 'G', 2404, 2, 1, 0, 00h
_u6smr4_addr	.equ	0294h
	._inspect	'V', 'd', "u6smr4_addr", "_u6smr4_addr", 'G', 2419, 1, 1, 0, 00h
_u6smr3_addr	.equ	0295h
	._inspect	'V', 'd', "u6smr3_addr", "_u6smr3_addr", 'G', 2435, 1, 1, 0, 00h
_u6smr2_addr	.equ	0296h
	._inspect	'V', 'd', "u6smr2_addr", "_u6smr2_addr", 'G', 2448, 1, 1, 0, 00h
_u6smr_addr	.equ	0297h
	._inspect	'V', 'd', "u6smr_addr", "_u6smr_addr", 'G', 2463, 1, 1, 0, 00h
_u6mr_addr	.equ	0298h
	._inspect	'V', 'd', "u6mr_addr", "_u6mr_addr", 'G', 2477, 1, 1, 0, 00h
_u6brg_addr	.equ	0299h
	._inspect	'V', 'd', "u6brg_addr", "_u6brg_addr", 'G', 2493, 1, 1, 0, 00h
_u6tb_addr	.equ	029Ah
	._inspect	'V', 'd', "u6tb_addr", "_u6tb_addr", 'G', 2500, 2, 1, 0, 00h
_u6c0_addr	.equ	029Ch
	._inspect	'V', 'd', "u6c0_addr", "_u6c0_addr", 'G', 2509, 1, 1, 0, 00h
_u6c1_addr	.equ	029Dh
	._inspect	'V', 'd', "u6c1_addr", "_u6c1_addr", 'G', 2525, 1, 1, 0, 00h
_u6rb_addr	.equ	029Eh
	._inspect	'V', 'd', "u6rb_addr", "_u6rb_addr", 'G', 2541, 2, 1, 0, 00h
_u7smr4_addr	.equ	02A4h
	._inspect	'V', 'd', "u7smr4_addr", "_u7smr4_addr", 'G', 2556, 1, 1, 0, 00h
_u7smr3_addr	.equ	02A5h
	._inspect	'V', 'd', "u7smr3_addr", "_u7smr3_addr", 'G', 2572, 1, 1, 0, 00h
_u7smr2_addr	.equ	02A6h
	._inspect	'V', 'd', "u7smr2_addr", "_u7smr2_addr", 'G', 2585, 1, 1, 0, 00h
_u7smr_addr	.equ	02A7h
	._inspect	'V', 'd', "u7smr_addr", "_u7smr_addr", 'G', 2600, 1, 1, 0, 00h
_u7mr_addr	.equ	02A8h
	._inspect	'V', 'd', "u7mr_addr", "_u7mr_addr", 'G', 2614, 1, 1, 0, 00h
_u7brg_addr	.equ	02A9h
	._inspect	'V', 'd', "u7brg_addr", "_u7brg_addr", 'G', 2630, 1, 1, 0, 00h
_u7tb_addr	.equ	02AAh
	._inspect	'V', 'd', "u7tb_addr", "_u7tb_addr", 'G', 2637, 2, 1, 0, 00h
_u7c0_addr	.equ	02ACh
	._inspect	'V', 'd', "u7c0_addr", "_u7c0_addr", 'G', 2646, 1, 1, 0, 00h
_u7c1_addr	.equ	02ADh
	._inspect	'V', 'd', "u7c1_addr", "_u7c1_addr", 'G', 2662, 1, 1, 0, 00h
_u7rb_addr	.equ	02AEh
	._inspect	'V', 'd', "u7rb_addr", "_u7rb_addr", 'G', 2678, 2, 1, 0, 00h
_s00_addr	.equ	02B0h
	._inspect	'V', 'd', "s00_addr", "_s00_addr", 'G', 2693, 1, 1, 0, 00h
_s0d0_addr	.equ	02B2h
	._inspect	'V', 'd', "s0d0_addr", "_s0d0_addr", 'G', 2700, 1, 1, 0, 00h
_s1d0_addr	.equ	02B3h
	._inspect	'V', 'd', "s1d0_addr", "_s1d0_addr", 'G', 2715, 1, 1, 0, 00h
_s20_addr	.equ	02B4h
	._inspect	'V', 'd', "s20_addr", "_s20_addr", 'G', 2730, 1, 1, 0, 00h
_s2d0_addr	.equ	02B5h
	._inspect	'V', 'd', "s2d0_addr", "_s2d0_addr", 'G', 2746, 1, 1, 0, 00h
_s3d0_addr	.equ	02B6h
	._inspect	'V', 'd', "s3d0_addr", "_s3d0_addr", 'G', 2762, 1, 1, 0, 00h
_s4d0_addr	.equ	02B7h
	._inspect	'V', 'd', "s4d0_addr", "_s4d0_addr", 'G', 2778, 1, 1, 0, 00h
_s10_addr	.equ	02B8h
	._inspect	'V', 'd', "s10_addr", "_s10_addr", 'G', 2794, 1, 1, 0, 00h
_s11_addr	.equ	02B9h
	._inspect	'V', 'd', "s11_addr", "_s11_addr", 'G', 2810, 1, 1, 0, 00h
_s0d1_addr	.equ	02BAh
	._inspect	'V', 'd', "s0d1_addr", "_s0d1_addr", 'G', 2821, 1, 1, 0, 00h
_s0d2_addr	.equ	02BBh
	._inspect	'V', 'd', "s0d2_addr", "_s0d2_addr", 'G', 2836, 1, 1, 0, 00h
_tbsr_addr	.equ	0300h
	._inspect	'V', 'd', "tbsr_addr", "_tbsr_addr", 'G', 2851, 1, 1, 0, 00h
_ta11_addr	.equ	0302h
	._inspect	'V', 'd', "ta11_addr", "_ta11_addr", 'G', 2862, 2, 1, 0, 00h
_ta21_addr	.equ	0304h
	._inspect	'V', 'd', "ta21_addr", "_ta21_addr", 'G', 2869, 2, 1, 0, 00h
_ta41_addr	.equ	0306h
	._inspect	'V', 'd', "ta41_addr", "_ta41_addr", 'G', 2876, 2, 1, 0, 00h
_invc0_addr	.equ	0308h
	._inspect	'V', 'd', "invc0_addr", "_invc0_addr", 'G', 2883, 1, 1, 0, 00h
_invc1_addr	.equ	0309h
	._inspect	'V', 'd', "invc1_addr", "_invc1_addr", 'G', 2899, 1, 1, 0, 00h
_idb0_addr	.equ	030Ah
	._inspect	'V', 'd', "idb0_addr", "_idb0_addr", 'G', 2914, 1, 1, 0, 00h
_idb1_addr	.equ	030Bh
	._inspect	'V', 'd', "idb1_addr", "_idb1_addr", 'G', 2928, 1, 1, 0, 00h
_dtt_addr	.equ	030Ch
	._inspect	'V', 'd', "dtt_addr", "_dtt_addr", 'G', 2942, 1, 1, 0, 00h
_ictb2_addr	.equ	030Dh
	._inspect	'V', 'd', "ictb2_addr", "_ictb2_addr", 'G', 2949, 1, 1, 0, 00h
_pdrf_addr	.equ	030Eh
	._inspect	'V', 'd', "pdrf_addr", "_pdrf_addr", 'G', 2956, 1, 1, 0, 00h
_tb3_addr	.equ	0310h
	._inspect	'V', 'd', "tb3_addr", "_tb3_addr", 'G', 2968, 2, 1, 0, 00h
_tb4_addr	.equ	0312h
	._inspect	'V', 'd', "tb4_addr", "_tb4_addr", 'G', 2975, 2, 1, 0, 00h
_tb5_addr	.equ	0314h
	._inspect	'V', 'd', "tb5_addr", "_tb5_addr", 'G', 2982, 2, 1, 0, 00h
_pfcr_addr	.equ	0318h
	._inspect	'V', 'd', "pfcr_addr", "_pfcr_addr", 'G', 2989, 1, 1, 0, 00h
_tb3mr_addr	.equ	031Bh
	._inspect	'V', 'd', "tb3mr_addr", "_tb3mr_addr", 'G', 3003, 1, 1, 0, 00h
_tb4mr_addr	.equ	031Ch
	._inspect	'V', 'd', "tb4mr_addr", "_tb4mr_addr", 'G', 3018, 1, 1, 0, 00h
_tb5mr_addr	.equ	031Dh
	._inspect	'V', 'd', "tb5mr_addr", "_tb5mr_addr", 'G', 3033, 1, 1, 0, 00h
_tabsr_addr	.equ	0320h
	._inspect	'V', 'd', "tabsr_addr", "_tabsr_addr", 'G', 3048, 1, 1, 0, 00h
_onsf_addr	.equ	0322h
	._inspect	'V', 'd', "onsf_addr", "_onsf_addr", 'G', 3064, 1, 1, 0, 00h
_trgsr_addr	.equ	0323h
	._inspect	'V', 'd', "trgsr_addr", "_trgsr_addr", 'G', 3080, 1, 1, 0, 00h
_udf_addr	.equ	0324h
	._inspect	'V', 'd', "udf_addr", "_udf_addr", 'G', 3096, 1, 1, 0, 00h
_ta0_addr	.equ	0326h
	._inspect	'V', 'd', "ta0_addr", "_ta0_addr", 'G', 3112, 2, 1, 0, 00h
_ta1_addr	.equ	0328h
	._inspect	'V', 'd', "ta1_addr", "_ta1_addr", 'G', 3119, 2, 1, 0, 00h
_ta2_addr	.equ	032Ah
	._inspect	'V', 'd', "ta2_addr", "_ta2_addr", 'G', 3126, 2, 1, 0, 00h
_ta3_addr	.equ	032Ch
	._inspect	'V', 'd', "ta3_addr", "_ta3_addr", 'G', 3133, 2, 1, 0, 00h
_ta4_addr	.equ	032Eh
	._inspect	'V', 'd', "ta4_addr", "_ta4_addr", 'G', 3140, 2, 1, 0, 00h
_tb0_addr	.equ	0330h
	._inspect	'V', 'd', "tb0_addr", "_tb0_addr", 'G', 3147, 2, 1, 0, 00h
_tb1_addr	.equ	0332h
	._inspect	'V', 'd', "tb1_addr", "_tb1_addr", 'G', 3154, 2, 1, 0, 00h
_tb2_addr	.equ	0334h
	._inspect	'V', 'd', "tb2_addr", "_tb2_addr", 'G', 3161, 2, 1, 0, 00h
_ta0mr_addr	.equ	0336h
	._inspect	'V', 'd', "ta0mr_addr", "_ta0mr_addr", 'G', 3168, 1, 1, 0, 00h
_ta1mr_addr	.equ	0337h
	._inspect	'V', 'd', "ta1mr_addr", "_ta1mr_addr", 'G', 3184, 1, 1, 0, 00h
_ta2mr_addr	.equ	0338h
	._inspect	'V', 'd', "ta2mr_addr", "_ta2mr_addr", 'G', 3200, 1, 1, 0, 00h
_ta3mr_addr	.equ	0339h
	._inspect	'V', 'd', "ta3mr_addr", "_ta3mr_addr", 'G', 3216, 1, 1, 0, 00h
_ta4mr_addr	.equ	033Ah
	._inspect	'V', 'd', "ta4mr_addr", "_ta4mr_addr", 'G', 3232, 1, 1, 0, 00h
_tb0mr_addr	.equ	033Bh
	._inspect	'V', 'd', "tb0mr_addr", "_tb0mr_addr", 'G', 3248, 1, 1, 0, 00h
_tb1mr_addr	.equ	033Ch
	._inspect	'V', 'd', "tb1mr_addr", "_tb1mr_addr", 'G', 3263, 1, 1, 0, 00h
_tb2mr_addr	.equ	033Dh
	._inspect	'V', 'd', "tb2mr_addr", "_tb2mr_addr", 'G', 3278, 1, 1, 0, 00h
_tb2sc_addr	.equ	033Eh
	._inspect	'V', 'd', "tb2sc_addr", "_tb2sc_addr", 'G', 3293, 1, 1, 0, 00h
_rtcsec_addr	.equ	0340h
	._inspect	'V', 'd', "rtcsec_addr", "_rtcsec_addr", 'G', 3303, 1, 1, 0, 00h
_rtcmin_addr	.equ	0341h
	._inspect	'V', 'd', "rtcmin_addr", "_rtcmin_addr", 'G', 3319, 1, 1, 0, 00h
_rtchr_addr	.equ	0342h
	._inspect	'V', 'd', "rtchr_addr", "_rtchr_addr", 'G', 3334, 1, 1, 0, 00h
_rtcwk_addr	.equ	0343h
	._inspect	'V', 'd', "rtcwk_addr", "_rtcwk_addr", 'G', 3348, 1, 1, 0, 00h
_rtccr1_addr	.equ	0344h
	._inspect	'V', 'd', "rtccr1_addr", "_rtccr1_addr", 'G', 3359, 1, 1, 0, 00h
_rtccr2_addr	.equ	0345h
	._inspect	'V', 'd', "rtccr2_addr", "_rtccr2_addr", 'G', 3373, 1, 1, 0, 00h
_rtccsr_addr	.equ	0346h
	._inspect	'V', 'd', "rtccsr_addr", "_rtccsr_addr", 'G', 3388, 1, 1, 0, 00h
_rtccsec_addr	.equ	0348h
	._inspect	'V', 'd', "rtccsec_addr", "_rtccsec_addr", 'G', 3401, 1, 1, 0, 00h
_rtccmin_addr	.equ	0349h
	._inspect	'V', 'd', "rtccmin_addr", "_rtccmin_addr", 'G', 3416, 1, 1, 0, 00h
_rtcchr_addr	.equ	034Ah
	._inspect	'V', 'd', "rtcchr_addr", "_rtcchr_addr", 'G', 3431, 1, 1, 0, 00h
_cecc1_addr	.equ	0350h
	._inspect	'V', 'd', "cecc1_addr", "_cecc1_addr", 'G', 3446, 1, 1, 0, 00h
_cecc2_addr	.equ	0351h
	._inspect	'V', 'd', "cecc2_addr", "_cecc2_addr", 'G', 3457, 1, 1, 0, 00h
_cecc3_addr	.equ	0352h
	._inspect	'V', 'd', "cecc3_addr", "_cecc3_addr", 'G', 3473, 1, 1, 0, 00h
_cecc4_addr	.equ	0353h
	._inspect	'V', 'd', "cecc4_addr", "_cecc4_addr", 'G', 3485, 1, 1, 0, 00h
_cecflg_addr	.equ	0354h
	._inspect	'V', 'd', "cecflg_addr", "_cecflg_addr", 'G', 3501, 1, 1, 0, 00h
_cisel_addr	.equ	0355h
	._inspect	'V', 'd', "cisel_addr", "_cisel_addr", 'G', 3517, 1, 1, 0, 00h
_cctb1_addr	.equ	0356h
	._inspect	'V', 'd', "cctb1_addr", "_cctb1_addr", 'G', 3533, 1, 1, 0, 00h
_cctb2_addr	.equ	0357h
	._inspect	'V', 'd', "cctb2_addr", "_cctb2_addr", 'G', 3540, 1, 1, 0, 00h
_ccrb1_addr	.equ	0358h
	._inspect	'V', 'd', "ccrb1_addr", "_ccrb1_addr", 'G', 3550, 1, 1, 0, 00h
_ccrb2_addr	.equ	0359h
	._inspect	'V', 'd', "ccrb2_addr", "_ccrb2_addr", 'G', 3557, 1, 1, 0, 00h
_cradri1_addr	.equ	035Ah
	._inspect	'V', 'd', "cradri1_addr", "_cradri1_addr", 'G', 3568, 1, 1, 0, 00h
_cradri2_addr	.equ	035Bh
	._inspect	'V', 'd', "cradri2_addr", "_cradri2_addr", 'G', 3584, 1, 1, 0, 00h
_pur0_addr	.equ	0360h
	._inspect	'V', 'd', "pur0_addr", "_pur0_addr", 'G', 3600, 1, 1, 0, 00h
_pur1_addr	.equ	0361h
	._inspect	'V', 'd', "pur1_addr", "_pur1_addr", 'G', 3616, 1, 1, 0, 00h
_pur2_addr	.equ	0362h
	._inspect	'V', 'd', "pur2_addr", "_pur2_addr", 'G', 3632, 1, 1, 0, 00h
_pcr_addr	.equ	0366h
	._inspect	'V', 'd', "pcr_addr", "_pcr_addr", 'G', 3646, 1, 1, 0, 00h
_nmidf_addr	.equ	0369h
	._inspect	'V', 'd', "nmidf_addr", "_nmidf_addr", 'G', 3659, 1, 1, 0, 00h
_pwmcon0_addr	.equ	0370h
	._inspect	'V', 'd', "pwmcon0_addr", "_pwmcon0_addr", 'G', 3670, 1, 1, 0, 00h
_pwmpre0_addr	.equ	0372h
	._inspect	'V', 'd', "pwmpre0_addr", "_pwmpre0_addr", 'G', 3682, 1, 1, 0, 00h
_pwmreg0_addr	.equ	0373h
	._inspect	'V', 'd', "pwmreg0_addr", "_pwmreg0_addr", 'G', 3689, 1, 1, 0, 00h
_pwmpre1_addr	.equ	0374h
	._inspect	'V', 'd', "pwmpre1_addr", "_pwmpre1_addr", 'G', 3696, 1, 1, 0, 00h
_pwmreg1_addr	.equ	0375h
	._inspect	'V', 'd', "pwmreg1_addr", "_pwmreg1_addr", 'G', 3703, 1, 1, 0, 00h
_pwmcon1_addr	.equ	0376h
	._inspect	'V', 'd', "pwmcon1_addr", "_pwmcon1_addr", 'G', 3710, 1, 1, 0, 00h
_cspr_addr	.equ	037Ch
	._inspect	'V', 'd', "cspr_addr", "_cspr_addr", 'G', 3722, 1, 1, 0, 00h
_wdtr_addr	.equ	037Dh
	._inspect	'V', 'd', "wdtr_addr", "_wdtr_addr", 'G', 3731, 1, 1, 0, 00h
_wdts_addr	.equ	037Eh
	._inspect	'V', 'd', "wdts_addr", "_wdts_addr", 'G', 3738, 1, 1, 0, 00h
_wdc_addr	.equ	037Fh
	._inspect	'V', 'd', "wdc_addr", "_wdc_addr", 'G', 3745, 1, 1, 0, 00h
_dm2sl_addr	.equ	0390h
	._inspect	'V', 'd', "dm2sl_addr", "_dm2sl_addr", 'G', 3759, 1, 1, 0, 00h
_dm3sl_addr	.equ	0392h
	._inspect	'V', 'd', "dm3sl_addr", "_dm3sl_addr", 'G', 3774, 1, 1, 0, 00h
_dm0sl_addr	.equ	0398h
	._inspect	'V', 'd', "dm0sl_addr", "_dm0sl_addr", 'G', 3789, 1, 1, 0, 00h
_dm1sl_addr	.equ	039Ah
	._inspect	'V', 'd', "dm1sl_addr", "_dm1sl_addr", 'G', 3804, 1, 1, 0, 00h
_ainrst_addr	.equ	03A2h
	._inspect	'V', 'd', "ainrst_addr", "_ainrst_addr", 'G', 3819, 1, 1, 0, 00h
_crcsar_addr	.equ	03B4h
	._inspect	'V', 'd', "crcsar_addr", "_crcsar_addr", 'G', 3829, 2, 1, 0, 00h
_crcmr_addr	.equ	03B6h
	._inspect	'V', 'd', "crcmr_addr", "_crcmr_addr", 'G', 3851, 1, 1, 0, 00h
_crcd_addr	.equ	03BCh
	._inspect	'V', 'd', "crcd_addr", "_crcd_addr", 'G', 3861, 2, 1, 0, 00h
_crcin_addr	.equ	03BEh
	._inspect	'V', 'd', "crcin_addr", "_crcin_addr", 'G', 3870, 1, 1, 0, 00h
_ad0_addr	.equ	03C0h
	._inspect	'V', 'd', "ad0_addr", "_ad0_addr", 'G', 3877, 2, 1, 0, 00h
_ad1_addr	.equ	03C2h
	._inspect	'V', 'd', "ad1_addr", "_ad1_addr", 'G', 3886, 2, 1, 0, 00h
_ad2_addr	.equ	03C4h
	._inspect	'V', 'd', "ad2_addr", "_ad2_addr", 'G', 3895, 2, 1, 0, 00h
_ad3_addr	.equ	03C6h
	._inspect	'V', 'd', "ad3_addr", "_ad3_addr", 'G', 3904, 2, 1, 0, 00h
_ad4_addr	.equ	03C8h
	._inspect	'V', 'd', "ad4_addr", "_ad4_addr", 'G', 3913, 2, 1, 0, 00h
_ad5_addr	.equ	03CAh
	._inspect	'V', 'd', "ad5_addr", "_ad5_addr", 'G', 3922, 2, 1, 0, 00h
_ad6_addr	.equ	03CCh
	._inspect	'V', 'd', "ad6_addr", "_ad6_addr", 'G', 3931, 2, 1, 0, 00h
_ad7_addr	.equ	03CEh
	._inspect	'V', 'd', "ad7_addr", "_ad7_addr", 'G', 3940, 2, 1, 0, 00h
_adcon2_addr	.equ	03D4h
	._inspect	'V', 'd', "adcon2_addr", "_adcon2_addr", 'G', 3949, 1, 1, 0, 00h
_adcon0_addr	.equ	03D6h
	._inspect	'V', 'd', "adcon0_addr", "_adcon0_addr", 'G', 3960, 1, 1, 0, 00h
_adcon1_addr	.equ	03D7h
	._inspect	'V', 'd', "adcon1_addr", "_adcon1_addr", 'G', 3976, 1, 1, 0, 00h
_da0_addr	.equ	03D8h
	._inspect	'V', 'd', "da0_addr", "_da0_addr", 'G', 3991, 1, 1, 0, 00h
_da1_addr	.equ	03DAh
	._inspect	'V', 'd', "da1_addr", "_da1_addr", 'G', 3998, 1, 1, 0, 00h
_dacon_addr	.equ	03DCh
	._inspect	'V', 'd', "dacon_addr", "_dacon_addr", 'G', 4005, 1, 1, 0, 00h
_p0_addr	.equ	03E0h
	._inspect	'V', 'd', "p0_addr", "_p0_addr", 'G', 4015, 1, 1, 0, 00h
_p1_addr	.equ	03E1h
	._inspect	'V', 'd', "p1_addr", "_p1_addr", 'G', 4031, 1, 1, 0, 00h
_pd0_addr	.equ	03E2h
	._inspect	'V', 'd', "pd0_addr", "_pd0_addr", 'G', 4047, 1, 1, 0, 00h
_pd1_addr	.equ	03E3h
	._inspect	'V', 'd', "pd1_addr", "_pd1_addr", 'G', 4063, 1, 1, 0, 00h
_p2_addr	.equ	03E4h
	._inspect	'V', 'd', "p2_addr", "_p2_addr", 'G', 4079, 1, 1, 0, 00h
_p3_addr	.equ	03E5h
	._inspect	'V', 'd', "p3_addr", "_p3_addr", 'G', 4095, 1, 1, 0, 00h
_pd2_addr	.equ	03E6h
	._inspect	'V', 'd', "pd2_addr", "_pd2_addr", 'G', 4111, 1, 1, 0, 00h
_pd3_addr	.equ	03E7h
	._inspect	'V', 'd', "pd3_addr", "_pd3_addr", 'G', 4127, 1, 1, 0, 00h
_p4_addr	.equ	03E8h
	._inspect	'V', 'd', "p4_addr", "_p4_addr", 'G', 4143, 1, 1, 0, 00h
_p5_addr	.equ	03E9h
	._inspect	'V', 'd', "p5_addr", "_p5_addr", 'G', 4159, 1, 1, 0, 00h
_pd4_addr	.equ	03EAh
	._inspect	'V', 'd', "pd4_addr", "_pd4_addr", 'G', 4175, 1, 1, 0, 00h
_pd5_addr	.equ	03EBh
	._inspect	'V', 'd', "pd5_addr", "_pd5_addr", 'G', 4191, 1, 1, 0, 00h
_p6_addr	.equ	03ECh
	._inspect	'V', 'd', "p6_addr", "_p6_addr", 'G', 4207, 1, 1, 0, 00h
_p7_addr	.equ	03EDh
	._inspect	'V', 'd', "p7_addr", "_p7_addr", 'G', 4223, 1, 1, 0, 00h
_pd6_addr	.equ	03EEh
	._inspect	'V', 'd', "pd6_addr", "_pd6_addr", 'G', 4239, 1, 1, 0, 00h
_pd7_addr	.equ	03EFh
	._inspect	'V', 'd', "pd7_addr", "_pd7_addr", 'G', 4255, 1, 1, 0, 00h
_p8_addr	.equ	03F0h
	._inspect	'V', 'd', "p8_addr", "_p8_addr", 'G', 4271, 1, 1, 0, 00h
_p9_addr	.equ	03F1h
	._inspect	'V', 'd', "p9_addr", "_p9_addr", 'G', 4287, 1, 1, 0, 00h
_pd8_addr	.equ	03F2h
	._inspect	'V', 'd', "pd8_addr", "_pd8_addr", 'G', 4303, 1, 1, 0, 00h
_pd9_addr	.equ	03F3h
	._inspect	'V', 'd', "pd9_addr", "_pd9_addr", 'G', 4319, 1, 1, 0, 00h
_p10_addr	.equ	03F4h
	._inspect	'V', 'd', "p10_addr", "_p10_addr", 'G', 4335, 1, 1, 0, 00h
_pd10_addr	.equ	03F6h
	._inspect	'V', 'd', "pd10_addr", "_pd10_addr", 'G', 4351, 1, 1, 0, 00h
_pmc0hdpmin_addr	.equ	0D080h
	._inspect	'V', 'd', "pmc0hdpmin_addr", "_pmc0hdpmin_addr", 'G', 4367, 2, 1, 0, 00h
_pmc0hdpmax_addr	.equ	0D082h
	._inspect	'V', 'd', "pmc0hdpmax_addr", "_pmc0hdpmax_addr", 'G', 4374, 2, 1, 0, 00h
_pmc0d0pmin_addr	.equ	0D084h
	._inspect	'V', 'd', "pmc0d0pmin_addr", "_pmc0d0pmin_addr", 'G', 4381, 1, 1, 0, 00h
_pmc0d0pmax_addr	.equ	0D085h
	._inspect	'V', 'd', "pmc0d0pmax_addr", "_pmc0d0pmax_addr", 'G', 4388, 1, 1, 0, 00h
_pmc0d1pmin_addr	.equ	0D086h
	._inspect	'V', 'd', "pmc0d1pmin_addr", "_pmc0d1pmin_addr", 'G', 4395, 1, 1, 0, 00h
_pmc0d1pmax_addr	.equ	0D087h
	._inspect	'V', 'd', "pmc0d1pmax_addr", "_pmc0d1pmax_addr", 'G', 4402, 1, 1, 0, 00h
_pmc0tim_addr	.equ	0D088h
	._inspect	'V', 'd', "pmc0tim_addr", "_pmc0tim_addr", 'G', 4409, 2, 1, 0, 00h
_pmc0bc_addr	.equ	0D08Ah
	._inspect	'V', 'd', "pmc0bc_addr", "_pmc0bc_addr", 'G', 4416, 2, 1, 0, 00h
_pmc0dat0_addr	.equ	0D08Ch
	._inspect	'V', 'd', "pmc0dat0_addr", "_pmc0dat0_addr", 'G', 4423, 1, 1, 0, 00h
_pmc0dat1_addr	.equ	0D08Dh
	._inspect	'V', 'd', "pmc0dat1_addr", "_pmc0dat1_addr", 'G', 4430, 1, 1, 0, 00h
_pmc0dat2_addr	.equ	0D08Eh
	._inspect	'V', 'd', "pmc0dat2_addr", "_pmc0dat2_addr", 'G', 4437, 1, 1, 0, 00h
_pmc0dat3_addr	.equ	0D08Fh
	._inspect	'V', 'd', "pmc0dat3_addr", "_pmc0dat3_addr", 'G', 4444, 1, 1, 0, 00h
_pmc0dat4_addr	.equ	0D090h
	._inspect	'V', 'd', "pmc0dat4_addr", "_pmc0dat4_addr", 'G', 4451, 1, 1, 0, 00h
_pmc0dat5_addr	.equ	0D091h
	._inspect	'V', 'd', "pmc0dat5_addr", "_pmc0dat5_addr", 'G', 4458, 1, 1, 0, 00h
_pmc0rbit_addr	.equ	0D092h
	._inspect	'V', 'd', "pmc0rbit_addr", "_pmc0rbit_addr", 'G', 4465, 1, 1, 0, 00h
_pmc1hdpmin_addr	.equ	0D094h
	._inspect	'V', 'd', "pmc1hdpmin_addr", "_pmc1hdpmin_addr", 'G', 4472, 2, 1, 0, 00h
_pmc1hdpmax_addr	.equ	0D096h
	._inspect	'V', 'd', "pmc1hdpmax_addr", "_pmc1hdpmax_addr", 'G', 4479, 2, 1, 0, 00h
_pmc1d0pmin_addr	.equ	0D098h
	._inspect	'V', 'd', "pmc1d0pmin_addr", "_pmc1d0pmin_addr", 'G', 4486, 1, 1, 0, 00h
_pmc1d0pmax_addr	.equ	0D099h
	._inspect	'V', 'd', "pmc1d0pmax_addr", "_pmc1d0pmax_addr", 'G', 4493, 1, 1, 0, 00h
_pmc1d1pmin_addr	.equ	0D09Ah
	._inspect	'V', 'd', "pmc1d1pmin_addr", "_pmc1d1pmin_addr", 'G', 4500, 1, 1, 0, 00h
_pmc1d1pmax_addr	.equ	0D09Bh
	._inspect	'V', 'd', "pmc1d1pmax_addr", "_pmc1d1pmax_addr", 'G', 4507, 1, 1, 0, 00h
_pmc1tim_addr	.equ	0D09Ch
	._inspect	'V', 'd', "pmc1tim_addr", "_pmc1tim_addr", 'G', 4514, 2, 1, 0, 00h
_pmc1bc_addr	.equ	0D09Eh
	._inspect	'V', 'd', "pmc1bc_addr", "_pmc1bc_addr", 'G', 4521, 2, 1, 0, 00h

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/eventdatadef.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/eventnew.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "Clear_Demand_Mode", 'G', 14, 1, 0, 0, 00h
	._inspect	'V', 'e', "EventEnergyValid_Flag", 'G', 16, 1, 0, 0, 00h
	._inspect	'V', 'e', "Event_AmpHour", 'G', 17, 12, 0, 0, 00h
	._inspect	'V', 'e', "EventCriticalVoltage_Flag", 'G', 18, 1, 0, 0, 00h
	._inspect	'V', 'e', "TempEventData", 'G', 19, 400, 0, 0, 00h
	._inspect	'V', 'e', "lostvoltenergyall", 'G', 20, 8, 0, 0, 00h
	._inspect	'V', 'e', "lostvoltenergy", 'G', 21, 24, 0, 0, 00h
	._inspect	'F', 'p', "EventTimeAdd", "_EventTimeAdd", 'G', 28, 0, 00h, 0
	._inspect	'F', 'p', "New2007_Event", "_New2007_Event", 'G', 31, 0, 00h, 0
	._inspect	'F', 'p', "EventRecordAdjustEnergy", "_EventRecordAdjustEnergy", 'G', 32, 0, 00h, 0
	._inspect	'F', 'p', "EventData_PowerDown_Save", "_EventData_PowerDown_Save", 'G', 33, 0, 00h, 0
	._inspect	'F', 'p', "EventData_PowerOn_Check", "_EventData_PowerOn_Check", 'G', 34, 0, 00h, 0
	._inspect	'F', 'p', "EventRecord_Poweron_Check", "_EventRecord_Poweron_Check", 'G', 35, 0, 00h, 0
	._inspect	'F', 'p', "PowerDownEvent_OnCheck", "_PowerDownEvent_OnCheck", 'G', 36, 0, 00h, 0
	._inspect	'F', 'p', "ProgrammeEvent", "_ProgrammeEvent", 'G', 37, 0, 00h, 0
	._inspect	'F', 'p', "ClearMeterRecord", "_ClearMeterRecord", 'G', 38, 0, 00h, 0
	._inspect	'F', 'p', "VoltStatSetDefault", "_VoltStatSetDefault", 'G', 40, 0, 00h, 0
	._inspect	'F', 'p', "VoltStatInit", "_VoltStatInit", 'G', 41, 0, 00h, 0
	._inspect	'F', 'p', "VoltStatisticCheck", "_VoltStatisticCheck", 'G', 42, 0, 00h, 0
	._inspect	'F', 'p', "OverDemandEvent", "_OverDemandEvent", 'G', 43, 0, 00h, 0
	._inspect	'F', 'p', "AdjustTimeRecord", "_AdjustTimeRecord", 'G', 44, 0, 00h, 0
	._inspect	'F', 'p', "ClearDemandRecord", "_ClearDemandRecord", 'G', 45, 0, 00h, 0
	._inspect	'F', 'p', "ProgWeekRecord", "_ProgWeekRecord", 'G', 46, 0, 00h, 0
	._inspect	'F', 'p', "ProgAEModeRecord", "_ProgAEModeRecord", 'G', 47, 0, 00h, 0
	._inspect	'F', 'p', "ProgNEMode1Record", "_ProgNEMode1Record", 'G', 48, 0, 00h, 0
	._inspect	'F', 'p', "ProgNEMode2Record", "_ProgNEMode2Record", 'G', 49, 0, 00h, 0
	._inspect	'F', 'p', "ProgBillDayRecord", "$ProgBillDayRecord", 'G', 50, 0, 00h, 0
	._inspect	'F', 'p', "ProgYearSlotRecord", "_ProgYearSlotRecord", 'G', 51, 0, 00h, 0
	._inspect	'F', 'p', "ProgDailySlotRecord", "_ProgDailySlotRecord", 'G', 52, 0, 00h, 0
	._inspect	'F', 'p', "ClearNewEventRecord", "_ClearNewEventRecord", 'G', 54, 0, 00h, 0
	._inspect	'F', 'p', "PrepVoltStatReadData", "_PrepVoltStatReadData", 'G', 56, 0, 00h, 0
	._inspect	'F', 'p', "ResetCpuEvent_OnCheck", "_ResetCpuEvent_OnCheck", 'G', 57, 0, 00h, 0
	._inspect	'F', 'p', "RunClockErrorRecord", "_RunClockErrorRecord", 'G', 58, 0, 00h, 0
	._inspect	'F', 'p', "PowerUpClockErrorRecord", "_PowerUpClockErrorRecord", 'G', 59, 0, 00h, 0
	._inspect	'F', 'p', "EepromErrorRecord", "_EepromErrorRecord", 'G', 60, 0, 00h, 0
	._inspect	'F', 'p', "EnergyPassZeroRecord", "_EnergyPassZeroRecord", 'G', 61, 0, 00h, 0
	._inspect	'F', 'p', "SetPrimaryRecord", "_SetPrimaryRecord", 'G', 63, 0, 00h, 0
	._inspect	'F', 'p', "EepromEventSetDefault", "_EepromEventSetDefault", 'G', 64, 0, 00h, 0
	._inspect	'F', 'p', "EMeterPowerdownRecord", "_EMeterPowerdownRecord", 'G', 67, 0, 00h, 0
	._inspect	'F', 'p', "ClearEventRecord", "_ClearEventRecord", 'G', 68, 0, 00h, 0
	._inspect	'F', 'p', "ProgAEMode_NEMode1_NEMode2_Record", "_ProgAEMode_NEMode1_NEMode2_Record", 'G', 70, 0, 00h, 0
	._inspect	'F', 'p', "OpenBoxCoverEvent_Check", "_OpenBoxCoverEvent_Check", 'G', 71, 0, 00h, 0
	._inspect	'F', 'p', "EventFlagPowerOnInit", "_EventFlagPowerOnInit", 'G', 72, 0, 00h, 0
	._inspect	'F', 'p', "ProgrammeEventEnd_Check_Payment", "_ProgrammeEventEnd_Check_Payment", 'G', 73, 0, 00h, 0
	._inspect	'F', 'p', "ProgrammeEventEnd_Check", "_ProgrammeEventEnd_Check", 'G', 74, 0, 00h, 0
	._inspect	'F', 'p', "VoltStatisticFunc", "_VoltStatisticFunc", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "AdjustMeterRecord", "_AdjustMeterRecord", 'G', 76, 0, 00h, 0
	._inspect	'F', 'p', "PrepNewFirstEventData", "_PrepNewFirstEventData", 'G', 77, 0, 00h, 0
	._inspect	'F', 'p', "Save_EventTimesANDPointer_4byte", "$Save_EventTimesANDPointer_4byte", 'G', 81, 0, 00h, 0
	._inspect	'F', 'p', "Prepare_For_EventLastTime", "$Prepare_For_EventLastTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "Refresh_EventData", "_Refresh_EventData", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "Refresh_AddTime", "_Refresh_AddTime", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ClearEventDate_BatteryPowerOn", "_ClearEventDate_BatteryPowerOn", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "PrepLostVoltEnergyData", "_PrepLostVoltEnergyData", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "PowerAbnormalEventCheck", "_PowerAbnormalEventCheck", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "ClockBatteryDisplayBattery_Event", "_ClockBatteryDisplayBattery_Event", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "PdOpenCoverCheckInit", "$PdOpenCoverCheckInit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "PdOpenCoverCheck", "_PdOpenCoverCheck", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "PdOpenCoverCheckPowerUpDeal", "_PdOpenCoverCheckPowerUpDeal", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "ClearEventAll", "_ClearEventAll", 'G', 99, 0, 00h, 0
	._inspect	'F', 'p', "ClearEventCommDeal", "_ClearEventCommDeal", 'G', 100, 0, 00h, 0
	._inspect	'F', 'p', "ClearEventDataPowerOn", "_ClearEventDataPowerOn", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "ClearEvent_EventBegin", "$ClearEvent_EventBegin", 'G', 102, 0, 00h, 0
	._inspect	'V', 'e', "VoltCheck_N", 'G', 106, 0, 0, 0, 00h
	._inspect	'V', 'e', "VoltStat", 'G', 107, 192, 0, 0, 00h
	._inspect	'V', 'e', "Clearevent_ID", 'G', 111, 296, 0, 0, 00h
	._inspect	'V', 'e', "pdopencovercheckdata", 'G', 113, 0, 0, 0, 00h
	._inspect	'V', 'e', "eventstatusinfo", 'G', 115, 0, 0, 0, 00h
	._inspect	'F', 'p', "Save_EventReportTimes", "$Save_EventReportTimes", 'G', 117, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/MB_Base_fun.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "OB_H", "$OB_H", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "OH_B", "$OH_B", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "CheckTime", "$CheckTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD", "$CheckBCD", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD_NByte", "$CheckBCD_NByte", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "ABS", "_ABS", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ten_seq", "$ten_seq", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "search_unit", "$search_unit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcdnByte", "$HexToBcdnByte", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHexnByte", "$BcdToHexnByte", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "memcpy", "$memcpy", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "format_data", "_format_data", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/defdata.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/ram.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "Freq", 'G', 14, 16, 0, 0, 00h
	._inspect	'V', 'e', "Volt", 'G', 15, 12, 0, 0, 00h
	._inspect	'V', 'e', "Voltc", 'G', 16, 12, 0, 0, 00h
	._inspect	'V', 'e', "Curr", 'G', 17, 12, 0, 0, 00h
	._inspect	'V', 'e', "Factor", 'G', 18, 16, 0, 0, 00h
	._inspect	'V', 'e', "Active_power", 'G', 19, 16, 0, 0, 00h
	._inspect	'V', 'e', "Reactive_power", 'G', 20, 16, 0, 0, 00h
	._inspect	'V', 'e', "Active_energy_per_sec", 'G', 21, 4, 0, 0, 00h
	._inspect	'V', 'e', "Reactive_energy_per_sec", 'G', 22, 4, 0, 0, 00h
	._inspect	'V', 'e', "Visual_power", 'G', 23, 16, 0, 0, 00h
	._inspect	'V', 'e', "Reactive_phase", 'G', 24, 4, 0, 0, 00h
	._inspect	'V', 'e', "Phase_Angle", 'G', 25, 16, 0, 0, 00h
	._inspect	'V', 'e', "N_Current", 'G', 26, 4, 0, 0, 00h
	._inspect	'V', 'e', "Meter_States", 'G', 28, 18, 0, 0, 00h
	._inspect	'V', 'e', "NEW645Meter_States", 'G', 30, 19, 0, 0, 00h
	._inspect	'V', 'e', "Meter_Parameter", 'G', 32, 623, 0, 0, 00h
	._inspect	'V', 'e', "Event_Power_Net_Flag", 'G', 34, 8, 0, 0, 00h
	._inspect	'V', 'e', "Event_Power_Net_Pointer", 'G', 37, 58, 0, 0, 00h
	._inspect	'V', 'e', "Event_Meter_Pro_Pointer", 'G', 38, 22, 0, 0, 00h
	._inspect	'V', 'e', "Event_Power_Net_Times", 'G', 39, 232, 0, 0, 00h
	._inspect	'V', 'e', "Event_Meter_Pro_Times", 'G', 40, 88, 0, 0, 00h
	._inspect	'V', 'e', "Event_Power_Net_Timeticks", 'G', 41, 256, 0, 0, 00h
	._inspect	'V', 'e', "Powerdown_Save_Data", 'G', 43, 135, 0, 0, 00h
	._inspect	'V', 'e', "energy_rail", 'G', 45, 116, 0, 0, 00h
	._inspect	'V', 'e', "This_Month_Data", 'G', 47, 803, 0, 0, 00h
	._inspect	'V', 'e', "Other_Data", 'G', 51, 125, 0, 0, 00h
	._inspect	'V', 'e', "CurrentImbalance_Energy", 'G', 59, 24, 0, 0, 00h
	._inspect	'V', 'e', "Co", 'G', 61, 1280, 0, 0, 00h
	._inspect	'V', 'e', "WriteWhitchEeprom", 'G', 63, 3, 0, 0, 00h
	._inspect	'V', 'e', "Cal_PowerDown_Energy_add", 'G', 65, 96, 0, 0, 00h
	._inspect	'V', 'e', "TimeChontrolFlag", 'G', 67, 1, 0, 0, 00h
	._inspect	'V', 'e', "ProgramRunPhaseFlag", 'G', 69, 1, 0, 0, 00h
	._inspect	'V', 'e', "WriteTimeFlag", 'G', 71, 1, 0, 0, 00h
	._inspect	'V', 'e', "Event_Time_Flag", 'G', 73, 1, 0, 0, 00h
	._inspect	'V', 'e', "Alarm_Map_Flag", 'G', 74, 3, 0, 0, 00h
	._inspect	'V', 'e', "MainSoftDate", 'G', 76, 7, 0, 0, 00h
	._inspect	'V', 'e', "MainRamDate1", 'G', 78, 7, 0, 0, 00h
	._inspect	'V', 'e', "MainRamDate2", 'G', 80, 7, 0, 0, 00h
	._inspect	'V', 'e', "O1ther_Meter_Parameter", 'G', 82, 60, 0, 0, 00h
	._inspect	'V', 'e', "Max_Triff_Current", 'G', 83, 1, 0, 0, 00h
	._inspect	'V', 'e', "Active_power_Per_Mintue", 'G', 84, 4, 0, 0, 00h
	._inspect	'V', 'e', "Temperature_Current", 'G', 87, 2, 0, 0, 00h
	._inspect	'V', 'e', "Show_Powerdown_Cyc_Data", 'G', 88, 990, 0, 0, 00h
	._inspect	'V', 'e', "Show_Powerdown_Key_Data", 'G', 89, 1200, 0, 0, 00h
	._inspect	'V', 'e', "Show_ID_vatiy", 'G', 90, 1, 0, 0, 00h
	._inspect	'V', 'e', "Show_Powerdown_Net_Flag_Backup", 'G', 91, 8, 0, 0, 00h
	._inspect	'V', 'e', "Show_flash_poweron_vatiy", 'G', 92, 1, 0, 0, 00h
	._inspect	'V', 'e', "show_which_now", 'G', 93, 1, 0, 0, 00h
	._inspect	'F', 'p', "Check_Max_Imbalance_Rate", "_Check_Max_Imbalance_Rate", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/MB_BASE_FUN.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "OB_H", "$OB_H", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "OH_B", "$OH_B", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "CheckTime", "$CheckTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD", "$CheckBCD", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD_NByte", "$CheckBCD_NByte", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "ABS", "_ABS", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ten_seq", "$ten_seq", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "search_unit", "$search_unit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcdnByte", "$HexToBcdnByte", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHexnByte", "$BcdToHexnByte", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "memcpy", "$memcpy", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "format_data", "_format_data", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "LoadRecord", 'G', 218, 46, 0, 0, 00h
	._inspect	'V', 'e', "SoftDate", 'G', 219, 7, 0, 0, 00h
	._inspect	'V', 'e', "FlashEaseTimes", 'G', 220, 4, 0, 0, 00h
	._inspect	'V', 'e', "user_req_pnt", 'G', 222, 1, 0, 0, 00h
	._inspect	'F', 'p', "SendByte", "$SendByte", 'G', 225, 0, 00h, 0
	._inspect	'F', 'p', "WriteBuffer", "$WriteBuffer", 'G', 228, 0, 00h, 0
	._inspect	'F', 'p', "ComposeRecord", "$ComposeRecord", 'G', 231, 0, 00h, 0
	._inspect	'F', 'p', "SwitchPage", "_SwitchPage", 'G', 233, 0, 00h, 0
	._inspect	'F', 'p', "ReadBuffer", "$ReadBuffer", 'G', 237, 0, 00h, 0
	._inspect	'F', 'p', "SaveBuffer", "$SaveBuffer", 'G', 240, 0, 00h, 0
	._inspect	'F', 'p', "LoadToBuffer", "$LoadToBuffer", 'G', 242, 0, 00h, 0
	._inspect	'F', 'p', "GetRecordLength", "$GetRecordLength", 'G', 244, 0, 00h, 0
	._inspect	'F', 'p', "InitSIO4", "_InitSIO4", 'G', 246, 0, 00h, 0
	._inspect	'F', 'p', "FindRecord", "$FindRecord", 'G', 248, 0, 00h, 0
	._inspect	'F', 'p', "SaveIndex", "$SaveIndex", 'G', 250, 0, 00h, 0
	._inspect	'F', 'p', "PrepareCommunication", "$PrepareCommunication", 'G', 253, 0, 00h, 0
	._inspect	'F', 'p', "InitLoadRecord", "_InitLoadRecord", 'G', 254, 0, 00h, 0
	._inspect	'F', 'p', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 255, 0, 00h, 0
	._inspect	'F', 'p', "SaveLoadRecord", "_SaveLoadRecord", 'G', 257, 0, 00h, 0
	._inspect	'F', 'p', "Minute_Power", "$Minute_Power", 'G', 260, 0, 00h, 0
	._inspect	'F', 'p', "Write_Enable", "_Write_Enable", 'G', 261, 0, 00h, 0
	._inspect	'F', 'p', "Write_Disable", "_Write_Disable", 'G', 262, 0, 00h, 0
	._inspect	'F', 'p', "Read_Status_Register", "_Read_Status_Register", 'G', 263, 0, 00h, 0
	._inspect	'F', 'p', "Write_Status_Register", "$Write_Status_Register", 'G', 264, 0, 00h, 0
	._inspect	'F', 'p', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 265, 0, 00h, 0
	._inspect	'F', 'p', "Write_Page", "$Write_Page", 'G', 266, 0, 00h, 0
	._inspect	'F', 'p', "Continuously_Program", "$Continuously_Program", 'G', 267, 0, 00h, 0
	._inspect	'F', 'p', "Chip_Erase", "_Chip_Erase", 'G', 268, 0, 00h, 0
	._inspect	'F', 'p', "Sector_Erase", "_Sector_Erase", 'G', 269, 0, 00h, 0
	._inspect	'F', 'p', "Check_Sector_Have_Erased", "_Check_Sector_Have_Erased", 'G', 270, 0, 00h, 0
	._inspect	'F', 'p', "FastRead_Data_Bytes", "$FastRead_Data_Bytes", 'G', 271, 0, 00h, 0
	._inspect	'F', 'p', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 273, 0, 00h, 0
	._inspect	'F', 'p', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 274, 0, 00h, 0
	._inspect	'F', 'p', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 275, 0, 00h, 0
	._inspect	'F', 'p', "check_id_error", "$check_id_error", 'G', 279, 0, 00h, 0
	._inspect	'F', 'p', "read_record_base_time_id", "$read_record_base_time_id", 'G', 281, 0, 00h, 0
	._inspect	'F', 'p', "time_add_minute", "$time_add_minute", 'G', 283, 0, 00h, 0
	._inspect	'F', 'p', "get_hour_in_year", "$get_hour_in_year", 'G', 284, 0, 00h, 0
	._inspect	'F', 'p', "Save_5Min_Index", "$Save_5Min_Index", 'G', 285, 0, 00h, 0
	._inspect	'F', 'p', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 286, 0, 00h, 0
	._inspect	'F', 'p', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 287, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/I2C_operation.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 9, 0, 00h, 0
	._inspect	'F', 'p', "PowerOn_PCF8576", "_PowerOn_PCF8576", 'G', 11, 0, 00h, 0
	._inspect	'F', 'p', "PowerOff_PCF8576", "_PowerOff_PCF8576", 'G', 12, 0, 00h, 0
	._inspect	'F', 'p', "IIC_SOFT_RESET", "_IIC_SOFT_RESET", 'G', 13, 0, 00h, 0
	._inspect	'F', 'p', "Check_IIC_State", "_Check_IIC_State", 'G', 14, 0, 00h, 0
	._inspect	'F', 'p', "ClockChipInit", "$ClockChipInit", 'G', 16, 0, 00h, 0
	._inspect	'F', 'p', "ClockChipRead", "$ClockChipRead", 'G', 17, 0, 00h, 0
	._inspect	'F', 'p', "ClockChipWrite", "$ClockChipWrite", 'G', 18, 0, 00h, 0
	._inspect	'F', 'p', "ClockChipOpenSec", "_ClockChipOpenSec", 'G', 19, 0, 00h, 0
	._inspect	'F', 'p', "ClockChipCloseSec", "_ClockChipCloseSec", 'G', 20, 0, 00h, 0
	._inspect	'F', 'p', "IIC_Delay", "$IIC_Delay", 'G', 21, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/COMM.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "CommB", 'G', 6, 690, 0, 0, 00h
	._inspect	'V', 'e', "ProgramEventFlag", 'G', 7, 1, 0, 0, 00h
	._inspect	'V', 'e', "JustMeterDataFlag", 'G', 8, 1, 0, 0, 00h
	._inspect	'V', 'e', "JustMeterDateFlag", 'G', 9, 7, 0, 0, 00h
	._inspect	'V', 'e', "JustMeterFlag", 'G', 10, 1, 0, 0, 00h
	._inspect	'V', 'e', "cx", 'G', 11, 188, 0, 0, 00h
	._inspect	'V', 'e', "Readdata_buff", 'G', 12, 32, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Curr", 'G', 14, 12, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Factor", 'G', 15, 16, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Active_power", 'G', 16, 16, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Reactive_power", 'G', 17, 16, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Visual_power", 'G', 18, 16, 0, 0, 00h
	._inspect	'V', 'e', "COMM_Current_Demand", 'G', 19, 8, 0, 0, 00h
	._inspect	'V', 'e', "Freeze_Flag_DayHour", 'G', 20, 2, 0, 0, 00h
	._inspect	'V', 'e', "Comm_DailyOrYear_Slot", 'G', 22, 1, 0, 0, 00h
	._inspect	'V', 'e', "Comm_Firrespon_SecDispos_Buff", 'G', 23, 42, 0, 0, 00h
	._inspect	'V', 'e', "Comm_Firrespon_SecDispos_Uart", 'G', 24, 3, 0, 0, 00h
	._inspect	'V', 'e', "GPRS_Status", 'G', 32, 1, 0, 0, 00h
	._inspect	'V', 'e', "Voltage_ad_data", 'G', 34, 4, 0, 0, 00h
	._inspect	'V', 'e', "Displayfinish_flag", 'G', 35, 1, 0, 0, 00h
	._inspect	'V', 'e', "FullScreenTime", 'G', 36, 2, 0, 0, 00h
	._inspect	'V', 'e', "ad_Flag", 'G', 37, 1, 0, 0, 00h
	._inspect	'V', 'e', "ad_finish_Flag", 'G', 38, 1, 0, 0, 00h
	._inspect	'V', 'e', "meter_model_ok", 'G', 39, 4, 0, 0, 00h
	._inspect	'V', 'e', "fix_ad_data", 'G', 41, 2, 0, 0, 00h
	._inspect	'V', 'e', "comm_plus_energy_01wh", 'G', 43, 72, 0, 0, 00h
	._inspect	'V', 'e', "comm_nega_energy_01wh", 'G', 44, 72, 0, 0, 00h
	._inspect	'F', 'p', "Init_Comm", "$Init_Comm", 'G', 46, 0, 00h, 0
	._inspect	'F', 'p', "Interr_Comm_R", "$Interr_Comm_R", 'G', 47, 0, 00h, 0
	._inspect	'F', 'p', "Interr_Comm_W", "$Interr_Comm_W", 'G', 48, 0, 00h, 0
	._inspect	'F', 'p', "Communication", "$Communication", 'G', 49, 0, 00h, 0
	._inspect	'F', 'p', "FindComCommand", "$FindComCommand", 'G', 50, 0, 00h, 0
	._inspect	'F', 'p', "AnswerComCommand", "$AnswerComCommand", 'G', 51, 0, 00h, 0
	._inspect	'F', 'p', "TransferData", "$TransferData", 'G', 53, 0, 00h, 0
	._inspect	'F', 'p', "GetNowTime", "_GetNowTime", 'G', 54, 0, 00h, 0
	._inspect	'F', 'p', "GetTimeCount", "_GetTimeCount", 'G', 55, 0, 00h, 0
	._inspect	'F', 'p', "F_Ar", "$F_Ar", 'G', 56, 0, 00h, 0
	._inspect	'F', 'p', "ReadData", "$ReadData", 'G', 60, 0, 00h, 0
	._inspect	'F', 'p', "WriteData", "_WriteData", 'G', 61, 0, 00h, 0
	._inspect	'F', 'p', "BroadcastJustTime", "_BroadcastJustTime", 'G', 62, 0, 00h, 0
	._inspect	'F', 'p', "WriteAddress", "_WriteAddress", 'G', 63, 0, 00h, 0
	._inspect	'F', 'p', "WriteBaud", "_WriteBaud", 'G', 64, 0, 00h, 0
	._inspect	'F', 'p', "WritePassword", "_WritePassword", 'G', 65, 0, 00h, 0
	._inspect	'F', 'p', "ClearDemand", "_ClearDemand", 'G', 66, 0, 00h, 0
	._inspect	'F', 'p', "R_W_Data", "_R_W_Data", 'G', 67, 0, 00h, 0
	._inspect	'F', 'p', "ReadLC256", "$ReadLC256", 'G', 68, 0, 00h, 0
	._inspect	'F', 'p', "WriteLC256", "$WriteLC256", 'G', 69, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 70, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 71, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 72, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 73, 0, 00h, 0
	._inspect	'F', 'p', "GetRecordAddr", "$GetRecordAddr", 'G', 74, 0, 00h, 0
	._inspect	'F', 'p', "Delay", "$Delay", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "CalDay", "$CalDay", 'G', 76, 0, 00h, 0
	._inspect	'F', 'p', "ComTime", "$ComTime", 'G', 77, 0, 00h, 0
	._inspect	'F', 'p', "ClearDemandCommAndKey", "$ClearDemandCommAndKey", 'G', 80, 0, 00h, 0
	._inspect	'F', 'p', "Clear_PasswordErr", "$Clear_PasswordErr", 'G', 81, 0, 00h, 0
	._inspect	'F', 'p', "CheckProgramKeyState", "_CheckProgramKeyState", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "IC_Set_Program", "_IC_Set_Program", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "FreezeEvent_Energy", "$FreezeEvent_Energy", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "Read_SystemTime_YMDH", "_Read_SystemTime_YMDH", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "Read_SystemTime_HMS", "_Read_SystemTime_HMS", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "Set_SystemTime_YMDH", "_Set_SystemTime_YMDH", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "Set_SystemTime_HMS", "_Set_SystemTime_HMS", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "Set_DemandPeriod", "_Set_DemandPeriod", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "Set_DemandSkipPeriod", "_Set_DemandSkipPeriod", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "Set_Activem_Erengy_Mode", "_Set_Activem_Erengy_Mode", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "Set_REActivem_Erengy_1_Mode", "_Set_REActivem_Erengy_1_Mode", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "Set_REActivem_Erengy_2_Mode", "_Set_REActivem_Erengy_2_Mode", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "Set_ActivePulseConst", "_Set_ActivePulseConst", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "Set_Erengypoint", "_Set_Erengypoint", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "Set_BILL_Day", "_Set_BILL_Day", 'G', 99, 0, 00h, 0
	._inspect	'F', 'p', "Set_SlotParemeter", "_Set_SlotParemeter", 'G', 100, 0, 00h, 0
	._inspect	'F', 'p', "Set_YearSlot", "_Set_YearSlot", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "Set_ProgWeek", "_Set_ProgWeek", 'G', 102, 0, 00h, 0
	._inspect	'F', 'p', "Set_Holiday", "_Set_Holiday", 'G', 103, 0, 00h, 0
	._inspect	'F', 'p', "Set_DailySlot", "_Set_DailySlot", 'G', 104, 0, 00h, 0
	._inspect	'F', 'p', "Set_LoadRecoedBeginTime", "_Set_LoadRecoedBeginTime", 'G', 105, 0, 00h, 0
	._inspect	'F', 'p', "Set_LoadRecoedPeriod", "_Set_LoadRecoedPeriod", 'G', 106, 0, 00h, 0
	._inspect	'F', 'p', "Set_MeterMode", "_Set_MeterMode", 'G', 107, 0, 00h, 0
	._inspect	'F', 'p', "Set_Meterlocktimes", "_Set_Meterlocktimes", 'G', 108, 0, 00h, 0
	._inspect	'F', 'p', "Set_OutputModel", "_Set_OutputModel", 'G', 109, 0, 00h, 0
	._inspect	'F', 'p', "Exit_WorkRoomState", "_Exit_WorkRoomState", 'G', 110, 0, 00h, 0
	._inspect	'F', 'p', "Read_primary_energy", "_Read_primary_energy", 'G', 111, 0, 00h, 0
	._inspect	'F', 'p', "Set_primary_energy", "_Set_primary_energy", 'G', 112, 0, 00h, 0
	._inspect	'F', 'p', "Read_WorkRoomState", "_Read_WorkRoomState", 'G', 113, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_0_data", "_Read_Freeze_Bit_0_data", 'G', 114, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_1_data", "_Read_Freeze_Bit_1_data", 'G', 115, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_2_data", "_Read_Freeze_Bit_2_data", 'G', 116, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_3_data", "_Read_Freeze_Bit_3_data", 'G', 117, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_4_data", "_Read_Freeze_Bit_4_data", 'G', 118, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_5_data", "_Read_Freeze_Bit_5_data", 'G', 119, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_6_data", "_Read_Freeze_Bit_6_data", 'G', 120, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Bit_7_data", "_Read_Freeze_Bit_7_data", 'G', 121, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Block_data", "_Read_Freeze_Block_data", 'G', 122, 0, 00h, 0
	._inspect	'F', 'p', "Read_Meter_lock_times", "_Read_Meter_lock_times", 'G', 123, 0, 00h, 0
	._inspect	'F', 'p', "Check_Parameter_Len_IS_ok", "$Check_Parameter_Len_IS_ok", 'G', 124, 0, 00h, 0
	._inspect	'F', 'p', "Pre_No_use_leaf_data", "_Pre_No_use_leaf_data", 'G', 125, 0, 00h, 0
	._inspect	'F', 'p', "Set_Display_Number", "_Set_Display_Number", 'G', 126, 0, 00h, 0
	._inspect	'F', 'p', "Set_Commrate", "_Set_Commrate", 'G', 127, 0, 00h, 0
	._inspect	'F', 'p', "Read_Freeze_Date", "_Read_Freeze_Date", 'G', 128, 0, 00h, 0
	._inspect	'F', 'p', "Set_CycleDisplayTime", "_Set_CycleDisplayTime", 'G', 129, 0, 00h, 0
	._inspect	'F', 'p', "Read_Far_IR_Commate", "_Read_Far_IR_Commate", 'G', 130, 0, 00h, 0
	._inspect	'F', 'p', "Set_CriticalVoltage", "_Set_CriticalVoltage", 'G', 131, 0, 00h, 0
	._inspect	'F', 'p', "Set_CommAddr", "_Set_CommAddr", 'G', 132, 0, 00h, 0
	._inspect	'F', 'p', "Set_Show_USER_Code", "_Set_Show_USER_Code", 'G', 133, 0, 00h, 0
	._inspect	'F', 'p', "Read_Sign_Instance_Variable", "_Read_Sign_Instance_Variable", 'G', 134, 0, 00h, 0
	._inspect	'F', 'p', "Read_Meter_Temperature", "_Read_Meter_Temperature", 'G', 135, 0, 00h, 0
	._inspect	'F', 'p', "Read_YearSlot_Table", "_Read_YearSlot_Table", 'G', 136, 0, 00h, 0
	._inspect	'F', 'p', "Read_DailySlot_Table", "_Read_DailySlot_Table", 'G', 137, 0, 00h, 0
	._inspect	'F', 'p', "Comm_Initialize_FLASH", "_Comm_Initialize_FLASH", 'G', 138, 0, 00h, 0
	._inspect	'F', 'p', "Read_Last_loss_voltage_start_time", "_Read_Last_loss_voltage_start_time", 'G', 139, 0, 00h, 0
	._inspect	'F', 'p', "Read_Last_loss_voltage_end_time", "_Read_Last_loss_voltage_end_time", 'G', 140, 0, 00h, 0
	._inspect	'F', 'p', "Set_Freeze_Period_Begin_time", "_Set_Freeze_Period_Begin_time", 'G', 141, 0, 00h, 0
	._inspect	'F', 'p', "Set_Freeze_Period", "_Set_Freeze_Period", 'G', 142, 0, 00h, 0
	._inspect	'F', 'p', "Set_TriffSwitchDate", "_Set_TriffSwitchDate", 'G', 143, 0, 00h, 0
	._inspect	'F', 'p', "Set_Cycle_Key_Display", "_Set_Cycle_Key_Display", 'G', 144, 0, 00h, 0
	._inspect	'F', 'p', "Read_Meter_FILEDATE_VI", "_Read_Meter_FILEDATE_VI", 'G', 145, 0, 00h, 0
	._inspect	'V', 'e', "CommBP", 'G', 147, 2, 0, 0, 00h
	._inspect	'V', 'e', "CurrPC", 'G', 148, 2, 0, 0, 00h
	._inspect	'V', 'e', "WriteDateBuff", 'G', 149, 0, 0, 0, 00h
	._inspect	'F', 'p', "Set_ShowNoKeyRetTime", "_Set_ShowNoKeyRetTime", 'G', 150, 0, 00h, 0
	._inspect	'F', 'p', "CheckPasswordRight", "$CheckPasswordRight", 'G', 151, 0, 00h, 0
	._inspect	'F', 'p', "CheckPasswoerErr", "$CheckPasswoerErr", 'G', 152, 0, 00h, 0
	._inspect	'F', 'p', "AppointTrasfPortBuff", "$AppointTrasfPortBuff", 'G', 153, 0, 00h, 0
	._inspect	'F', 'p', "Crc16l", "$Crc16l", 'G', 154, 0, 00h, 0
	._inspect	'F', 'p', "Set_which_Responsion_Flag", "$Set_which_Responsion_Flag", 'G', 155, 0, 00h, 0
	._inspect	'F', 'p', "Set_JFPG_Triff", "_Set_JFPG_Triff", 'G', 156, 0, 00h, 0
	._inspect	'F', 'p', "Set_Meter_para_Deal", "$Set_Meter_para_Deal", 'G', 158, 0, 00h, 0
	._inspect	'F', 'p', "Read_Display_Number", "_Read_Display_Number", 'G', 159, 0, 00h, 0
	._inspect	'F', 'p', "Read_LostVoltEnergy", "_Read_LostVoltEnergy", 'G', 162, 0, 00h, 0
	._inspect	'F', 'p', "Read_LostVolt_AllEnergy", "_Read_LostVolt_AllEnergy", 'G', 163, 0, 00h, 0
	._inspect	'F', 'p', "RTC_Init", "_RTC_Init", 'G', 164, 0, 00h, 0
	._inspect	'F', 'p', "PowerOn_FullScreen_TimeDetection", "_PowerOn_FullScreen_TimeDetection", 'G', 165, 0, 00h, 0
	._inspect	'F', 'p', "ReadClockBatteryVoltage", "_ReadClockBatteryVoltage", 'G', 167, 0, 00h, 0
	._inspect	'F', 'p', "ReadDisplayBatteryVoltage", "_ReadDisplayBatteryVoltage", 'G', 168, 0, 00h, 0
	._inspect	'F', 'p', "ReadEventReportInfo", "_ReadEventReportInfo", 'G', 170, 0, 00h, 0
	._inspect	'F', 'p', "GetEventReportMode", "_GetEventReportMode", 'G', 171, 0, 00h, 0
	._inspect	'F', 'p', "SetEventReportMode", "_SetEventReportMode", 'G', 172, 0, 00h, 0
	._inspect	'F', 'p', "SetPowerOnFullScreenTime", "_SetPowerOnFullScreenTime", 'G', 174, 0, 00h, 0
	._inspect	'F', 'p', "Set_SystemTime_YMDHHMS", "_Set_SystemTime_YMDHHMS", 'G', 176, 0, 00h, 0
	._inspect	'F', 'p', "GetMeterSoftIdNumber", "_GetMeterSoftIdNumber", 'G', 178, 0, 00h, 0
	._inspect	'F', 'p', "SetMeterSoftIdNumber", "_SetMeterSoftIdNumber", 'G', 179, 0, 00h, 0
	._inspect	'F', 'p', "GetNowMonthComActiveEnergy", "_GetNowMonthComActiveEnergy", 'G', 181, 0, 00h, 0
	._inspect	'F', 'p', "GetLastMonthComActiveEnergy", "_GetLastMonthComActiveEnergy", 'G', 182, 0, 00h, 0
	._inspect	'F', 'p', "Set_Freeze_Day", "_Set_Freeze_Day", 'G', 184, 0, 00h, 0
	._inspect	'F', 'p', "ReadEnergy01Wh", "_ReadEnergy01Wh", 'G', 186, 0, 00h, 0
	._inspect	'F', 'p', "ResetEventReportInfo", "_ResetEventReportInfo", 'G', 188, 0, 00h, 0
	._inspect	'F', 'p', "Clear_EventReportStatus_And_Times", "_Clear_EventReportStatus_And_Times", 'G', 189, 0, 00h, 0
	._inspect	'F', 'p', "Set_ResetReportTime", "_Set_ResetReportTime", 'G', 190, 0, 00h, 0
	._inspect	'F', 'p', "Set_Read_Block_Para", "$Set_Read_Block_Para", 'G', 192, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/645_2007.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "Iterate_Tree_Flag", 'G', 56, 52, 0, 0, 00h
	._inspect	'V', 'e', "Comm_Staut", 'G', 57, 2, 0, 0, 00h
	._inspect	'V', 'e', "Leaf_num_now", 'G', 58, 2, 0, 0, 00h
	._inspect	'V', 'e', "Read_Com_ID", 'G', 59, 4, 0, 0, 00h
	._inspect	'F', 'p', "TransferData_New", "$TransferData_New", 'G', 64, 0, 00h, 0
	._inspect	'F', 'p', "math_Add", "$math_Add", 'G', 70, 0, 00h, 0
	._inspect	'F', 'p', "math_Demand", "$math_Demand", 'G', 80, 0, 00h, 0
	._inspect	'F', 'p', "Check_Data_valid", "$Check_Data_valid", 'G', 85, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/MB_BASE_FUN.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "OB_H", "$OB_H", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "OH_B", "$OH_B", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "CheckTime", "$CheckTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD", "$CheckBCD", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD_NByte", "$CheckBCD_NByte", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "ABS", "_ABS", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ten_seq", "$ten_seq", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "search_unit", "$search_unit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcdnByte", "$HexToBcdnByte", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHexnByte", "$BcdToHexnByte", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "memcpy", "$memcpy", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "format_data", "_format_data", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/Demand.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "TRAFF_RATE", 'G', 55, 1, 0, 0, 00h
	._inspect	'V', 'e', "Demand_Data_New", 'G', 56, 3125, 0, 0, 00h
	._inspect	'V', 'e', "GDemandControl", 'G', 59, 22, 0, 0, 00h
	._inspect	'V', 'e', "Last_Average_Value", 'G', 60, 288, 0, 0, 00h
	._inspect	'V', 'e', "Current_Demand", 'G', 61, 8, 0, 0, 00h
	._inspect	'V', 'e', "demand_start", 'G', 66, 1, 0, 0, 00h
	._inspect	'V', 'e', "demand_init", 'G', 67, 1, 0, 0, 00h
	._inspect	'F', 'p', "ClearDemandArea", "$ClearDemandArea", 'G', 73, 0, 00h, 0
	._inspect	'F', 'p', "Demand_New_Init", "_Demand_New_Init", 'G', 74, 0, 00h, 0
	._inspect	'F', 'p', "Demand_New_Main", "_Demand_New_Main", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "Demand_Accumulator", "_Demand_Accumulator", 'G', 76, 0, 00h, 0
	._inspect	'V', 'e', "DemandputoutNum", 'G', 78, 1, 0, 0, 00h
	._inspect	'V', 'e', "DemandOutPutflagdata", 'G', 79, 1, 0, 0, 00h
	._inspect	'F', 'p', "Demand_Triff_Change", "_Demand_Triff_Change", 'G', 80, 0, 00h, 0
	._inspect	'V', 'e', "Last_Average_Value", 'G', 81, 288, 0, 0, 00h

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/MB_Base_Fun.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "OB_H", "$OB_H", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "OH_B", "$OH_B", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "CheckTime", "$CheckTime", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD", "$CheckBCD", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "CheckBCD_NByte", "$CheckBCD_NByte", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "ABS", "_ABS", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "ten_seq", "$ten_seq", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcd", "$HexToBcd", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHex", "$BcdToHex", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 92, 0, 00h, 0
	._inspect	'F', 'p', "HexToACK", "$HexToACK", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "ACKToHex", "$ACKToHex", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "search_unit", "$search_unit", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "HexToBcdnByte", "$HexToBcdnByte", 'G', 96, 0, 00h, 0
	._inspect	'F', 'p', "BcdToHexnByte", "$BcdToHexnByte", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "memcpy", "$memcpy", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "format_data", "_format_data", 'G', 99, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/datachange.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "sizeof_format", "$sizeof_format", 'G', 10, 0, 00h, 0
	._inspect	'F', 'p', "TimeToLong", "$TimeToLong", 'G', 11, 0, 00h, 0
	._inspect	'F', 'p', "data_change", "$data_change", 'G', 16, 0, 00h, 0
	._inspect	'F', 'p', "TimeIndex", "$TimeIndex", 'G', 17, 0, 00h, 0
	._inspect	'F', 'p', "IsLeapYear", "$IsLeapYear", 'G', 18, 0, 00h, 0
	._inspect	'F', 'p', "CalWeek", "$CalWeek", 'G', 19, 0, 00h, 0
	._inspect	'V', 'e', "Not_Rong_Year", 'G', 20, 0, 0, 0, 00h
	._inspect	'V', 'e', "Rong_Year", 'G', 21, 0, 0, 0, 00h

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/Multi.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'V', 'e', "TRAFF_RATE", 'G', 11, 1, 0, 0, 00h
	._inspect	'V', 'e', "OLD_TRAFF_RATE", 'G', 12, 1, 0, 0, 00h
	._inspect	'V', 'e', "ErrEnergyNumber", 'G', 13, 1, 0, 0, 00h
	._inspect	'V', 'e', "WriteEE_Or_F", 'G', 14, 1, 0, 0, 00h
	._inspect	'V', 'e', "energy_back", 'G', 15, 216, 0, 0, 00h
	._inspect	'V', 'e', "ClockBatteryClear_Flag", 'G', 16, 8, 0, 0, 00h
	._inspect	'V', 'e', "ClockBatteryClearCounter", 'G', 17, 1, 0, 0, 00h
	._inspect	'V', 'e', "TempClockBatteryClearCounter", 'G', 18, 1, 0, 0, 00h
	._inspect	'V', 'e', "Light_Back_Up_Flag", 'G', 20, 1, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_flag", 'G', 21, 1, 0, 0, 00h
	._inspect	'V', 'e', "open_cover_reported", 'G', 22, 1, 0, 0, 00h
	._inspect	'V', 'e', "RamData_Valid_flag", 'G', 23, 16, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_Status", 'G', 24, 12, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_Status_Times", 'G', 25, 96, 0, 0, 00h
	._inspect	'V', 'e', "EventStatus_flag", 'G', 26, 5, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_Status_Backup", 'G', 27, 12, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_Status_communication", 'G', 28, 12, 0, 0, 00h
	._inspect	'V', 'e', "Event_Report_Iterate_flag", 'G', 29, 1, 0, 0, 00h
	._inspect	'V', 'e', "powerup_init_time", 'G', 30, 2, 0, 0, 00h
	._inspect	'F', 'p', "PowerUpProcese", "_PowerUpProcese", 'G', 32, 0, 00h, 0
	._inspect	'F', 'p', "FeedWatchdog", "_FeedWatchdog", 'G', 33, 0, 00h, 0
	._inspect	'F', 'p', "CheckPowerDown", "_CheckPowerDown", 'G', 34, 0, 00h, 0
	._inspect	'F', 'p', "Measure", "_Measure", 'G', 35, 0, 00h, 0
	._inspect	'F', 'p', "OpenCoverCheck", "_OpenCoverCheck", 'G', 36, 0, 00h, 0
	._inspect	'F', 'p', "ReadRTC", "_ReadRTC", 'G', 39, 0, 00h, 0
	._inspect	'F', 'p', "BackupDataToEeprom", "_BackupDataToEeprom", 'G', 40, 0, 00h, 0
	._inspect	'F', 'p', "FindTriff", "_FindTriff", 'G', 41, 0, 00h, 0
	._inspect	'F', 'p', "BackUpEnergyToRam", "_BackUpEnergyToRam", 'G', 42, 0, 00h, 0
	._inspect	'F', 'p', "CheckRamTime", "_CheckRamTime", 'G', 43, 0, 00h, 0
	._inspect	'F', 'p', "Monitor_Program", "_Monitor_Program", 'G', 44, 0, 00h, 0
	._inspect	'F', 'p', "Light_Back_Led", "_Light_Back_Led", 'G', 45, 0, 00h, 0
	._inspect	'F', 'p', "Close_Back_Light", "_Close_Back_Light", 'G', 46, 0, 00h, 0
	._inspect	'F', 'p', "CheckChange", "$CheckChange", 'G', 48, 0, 00h, 0
	._inspect	'F', 'p', "CheckState", "_CheckState", 'G', 49, 0, 00h, 0
	._inspect	'F', 'p', "FreezeData_All", "$FreezeData_All", 'G', 50, 0, 00h, 0
	._inspect	'F', 'p', "Cal_EnergyLimit", "_Cal_EnergyLimit", 'G', 51, 0, 00h, 0
	._inspect	'F', 'p', "Bill_New", "_Bill_New", 'G', 56, 0, 00h, 0
	._inspect	'F', 'p', "Check_Billdate_Validity", "$Check_Billdate_Validity", 'G', 57, 0, 00h, 0
	._inspect	'F', 'p', "RailEnergyValidity", "_RailEnergyValidity", 'G', 58, 0, 00h, 0
	._inspect	'F', 'p', "CheckState_New645", "_CheckState_New645", 'G', 59, 0, 00h, 0
	._inspect	'F', 'p', "PowerUpLossTotalVoltage", "_PowerUpLossTotalVoltage", 'G', 60, 0, 00h, 0
	._inspect	'F', 'p', "Meter_Para_Check", "_Meter_Para_Check", 'G', 65, 0, 00h, 0
	._inspect	'F', 'p', "Check_If_Clear_all", "_Check_If_Clear_all", 'G', 66, 0, 00h, 0
	._inspect	'F', 'p', "ClearClockBatteryTime", "_ClearClockBatteryTime", 'G', 67, 0, 00h, 0
	._inspect	'F', 'p', "IsChangeBattery", "_IsChangeBattery", 'G', 68, 0, 00h, 0
	._inspect	'F', 'p', "LastMouthDayNumber", "_LastMouthDayNumber", 'G', 69, 0, 00h, 0
	._inspect	'F', 'p', "ISAutoBillDay", "_ISAutoBillDay", 'G', 70, 0, 00h, 0
	._inspect	'F', 'p', "CRC", "$CRC", 'G', 72, 0, 00h, 0
	._inspect	'F', 'p', "Meter_Staut_Check_And_Count", "_Meter_Staut_Check_And_Count", 'G', 74, 0, 00h, 0
	._inspect	'F', 'p', "Event_Report_Status_Chk", "$Event_Report_Status_Chk", 'G', 76, 0, 00h, 0
	._inspect	'F', 'p', "Get_Event_Report_Status", "$Get_Event_Report_Status", 'G', 77, 0, 00h, 0
	._inspect	'F', 'p', "Clear_ALLEventReportInfo_NO_ACK", "_Clear_ALLEventReportInfo_NO_ACK", 'G', 79, 0, 00h, 0
	._inspect	'F', 'p', "EventReportState_Expand", "$EventReportState_Expand", 'G', 80, 0, 00h, 0
	._inspect	'F', 'p', "ESAM_ErrReport", "_ESAM_ErrReport", 'G', 81, 0, 00h, 0
	._inspect	'F', 'p', "SwitchOn_Report", "_SwitchOn_Report", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "SwitchOff_Report", "_SwitchOff_Report", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "Overdraft_Report", "_Overdraft_Report", 'G', 84, 0, 00h, 0

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/initram.h", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "IniRam", "_IniRam", 'G', 1, 0, 00h, 0
	._inspect	'F', 'p', "CheckEnergyRom1AndRom2", "$CheckEnergyRom1AndRom2", 'G', 2, 0, 00h, 0
	._inspect	'F', 'p', "checkEnergyRight", "$checkEnergyRight", 'G', 5, 0, 00h, 0
	._inspect	'F', 'p', "Write_TO_Cal_PowerDown_Energy_add", "_Write_TO_Cal_PowerDown_Energy_add", 'G', 6, 0, 00h, 0
	._inspect	'F', 'p', "SetDefault", "_SetDefault", 'G', 7, 0, 00h, 0
	._inspect	'F', 'p', "Retort_New", "$Retort_New", 'G', 8, 0, 00h, 0
	._inspect	'F', 'p', "TotalEnergyRight", "$TotalEnergyRight", 'G', 10, 0, 00h, 0
	._inspect	'F', 'p', "ALL_TotalEnergyRight", "$ALL_TotalEnergyRight", 'G', 11, 0, 00h, 0
	._inspect	'F', 'p', "EnergyAutoRectifyLevel1", "_EnergyAutoRectifyLevel1", 'G', 12, 0, 00h, 0
	._inspect	'F', 'p', "EnergyAutoRectifyLevel2", "_EnergyAutoRectifyLevel2", 'G', 13, 0, 00h, 0
	._inspect	'F', 'p', "Powerdown_to_ThisMonth", "_Powerdown_to_ThisMonth", 'G', 15, 0, 00h, 0
	._inspect	'F', 'p', "CheckEnergyPowerEnergy", "$CheckEnergyPowerEnergy", 'G', 17, 0, 00h, 0
	._inspect	'F', 'p', "ReadMeterPara", "_ReadMeterPara", 'G', 19, 0, 00h, 0
	._inspect	'F', 'p', "IsNormalReset", "$IsNormalReset", 'G', 20, 0, 00h, 0
	._inspect	'F', 'p', "IsHaveSaveData", "_IsHaveSaveData", 'G', 21, 0, 00h, 0
	._inspect	'F', 'p', "Clear_Savedata_flag", "_Clear_Savedata_flag", 'G', 22, 0, 00h, 0
	._inspect	'F', 'p', "ReadEepromEnergy", "_ReadEepromEnergy", 'G', 23, 0, 00h, 0
	._inspect	'F', 'p', "ReadBlock", "$ReadBlock", 'G', 27, 0, 00h, 0
	._inspect	'F', 'p', "IsNormalResetWrite", "_IsNormalResetWrite", 'G', 29, 0, 00h, 0
	._inspect	'F', 'p', "Check_New", "_Check_New", 'G', 31, 0, 00h, 0
	._inspect	'F', 'p', "Para_Process_main", "_Para_Process_main", 'G', 32, 0, 00h, 0
	._inspect	'F', 'p', "ReadEeprom", "_ReadEeprom", 'G', 33, 0, 00h, 0
	._inspect	'F', 'p', "Para_Process_run", "_Para_Process_run", 'G', 34, 0, 00h, 0
	._inspect	'V', 'e', "Parameter_flag", 'G', 35, 5, 0, 0, 00h
	._inspect	'V', 'e', "para_err_times", 'G', 43, 2, 0, 0, 00h

	._inspect	'M', "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord.c", "D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord"
	._inspect	'F', 'p', "My_Memcmp", "$My_Memcmp", 'G', 75, 0, 00h, 0
	._inspect	'F', 'p', "Byte2BCD", "$Byte2BCD", 'G', 76, 0, 00h, 0
	._inspect	'F', 'p', "WriteBuffer", "$WriteBuffer", 'G', 79, 0, 00h, 0
	._inspect	'F', 'p', "FormatBCD", "$FormatBCD", 'G', 80, 0, 00h, 0
	._inspect	'F', 'p', "ComposeRecord", "$ComposeRecord", 'G', 81, 0, 00h, 0
	._inspect	'F', 'p', "SwitchPage", "_SwitchPage", 'G', 82, 0, 00h, 0
	._inspect	'F', 'p', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 83, 0, 00h, 0
	._inspect	'F', 'p', "ReadBuffer", "$ReadBuffer", 'G', 84, 0, 00h, 0
	._inspect	'F', 'p', "CompareBytes", "$CompareBytes", 'G', 85, 0, 00h, 0
	._inspect	'F', 'p', "SaveBuffer", "$SaveBuffer", 'G', 86, 0, 00h, 0
	._inspect	'F', 'p', "LoadToBuffer", "$LoadToBuffer", 'G', 87, 0, 00h, 0
	._inspect	'F', 'p', "GetRecordLength", "$GetRecordLength", 'G', 88, 0, 00h, 0
	._inspect	'F', 'p', "InitSIO4", "_InitSIO4", 'G', 89, 0, 00h, 0
	._inspect	'F', 'p', "FindRecord", "$FindRecord", 'G', 90, 0, 00h, 0
	._inspect	'F', 'p', "SaveIndex", "$SaveIndex", 'G', 91, 0, 00h, 0
	._inspect	'F', 'p', "PrepareCommunication", "$PrepareCommunication", 'G', 93, 0, 00h, 0
	._inspect	'F', 'p', "InitLoadRecord", "_InitLoadRecord", 'G', 94, 0, 00h, 0
	._inspect	'F', 'p', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 95, 0, 00h, 0
	._inspect	'F', 'p', "Minute_Power", "$Minute_Power", 'G', 97, 0, 00h, 0
	._inspect	'F', 'p', "Write_Enable", "_Write_Enable", 'G', 98, 0, 00h, 0
	._inspect	'F', 'p', "Write_Disable", "_Write_Disable", 'G', 99, 0, 00h, 0
	._inspect	'F', 'p', "Read_Status_Register", "_Read_Status_Register", 'G', 100, 0, 00h, 0
	._inspect	'F', 'p', "Write_Status_Register", "$Write_Status_Register", 'G', 101, 0, 00h, 0
	._inspect	'F', 'p', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 102, 0, 00h, 0
	._inspect	'F', 'p', "Write_Page", "$Write_Page", 'G', 103, 0, 00h, 0
	._inspect	'F', 'p', "Continuously_Program", "$Continuously_Program", 'G', 104, 0, 00h, 0
	._inspect	'F', 'p', "Chip_Erase", "_Chip_Erase", 'G', 105, 0, 00h, 0
	._inspect	'F', 'p', "Sector_Erase", "_Sector_Erase", 'G', 106, 0, 00h, 0
	._inspect	'F', 'p', "Check_Sector_Have_Erased", "_Check_Sector_Have_Erased", 'G', 107, 0, 00h, 0
	._inspect	'F', 'p', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 108, 0, 00h, 0
	._inspect	'F', 'p', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 109, 0, 00h, 0
	._inspect	'F', 'p', "Find_Next_Record", "$Find_Next_Record", 'G', 113, 0, 00h, 0
	._inspect	'F', 'p', "Find_Last_Record", "$Find_Last_Record", 'G', 114, 0, 00h, 0
	._inspect	'F', 'p', "Find_First_Record", "$Find_First_Record", 'G', 115, 0, 00h, 0
	._inspect	'F', 'p', "Find_Near_Record", "$Find_Near_Record", 'G', 116, 0, 00h, 0
	._inspect	'F', 'p', "Find_Addr_Record", "$Find_Addr_Record", 'G', 117, 0, 00h, 0
	._inspect	'F', 'p', "Find_Data_Record", "$Find_Data_Record", 'G', 118, 0, 00h, 0
	._inspect	'F', 'p', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 120, 0, 00h, 0
	._inspect	'F', 'p', "Add_Addr", "$Add_Addr", 'G', 121, 0, 00h, 0
	._inspect	'F', 'p', "Change_SortAddr", "$Change_SortAddr", 'G', 122, 0, 00h, 0
	._inspect	'F', 'p', "Get_SortAddr", "$Get_SortAddr", 'G', 123, 0, 00h, 0
	._inspect	'F', 'p', "Get_SortAddr1", "$Get_SortAddr1", 'G', 124, 0, 00h, 0
	._inspect	'F', 'p', "Get_TotalAddr", "$Get_TotalAddr", 'G', 125, 0, 00h, 0
	._inspect	'F', 'p', "Page_equal", "$Page_equal", 'G', 126, 0, 00h, 0
	._inspect	'F', 'p', "Cover_Addr_Find", "$Cover_Addr_Find", 'G', 127, 0, 00h, 0
	._inspect	'F', 'p', "Save_SortIndex", "$Save_SortIndex", 'G', 128, 0, 00h, 0
	._inspect	'F', 'p', "SaveLoadRecord", "_SaveLoadRecord", 'G', 129, 0, 00h, 0
	._inspect	'F', 'p', "My_memcpyRev", "$My_memcpyRev", 'G', 131, 0, 00h, 0
	._inspect	'V', 'e', "Card_WR_Buff", 'G', 132, 512, 0, 0, 00h
	._inspect	'F', 'p', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 135, 0, 00h, 0
	._inspect	'F', 'p', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 136, 0, 00h, 0
	._inspect	'F', 'p', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 137, 0, 00h, 0
	._inspect	'F', 'p', "ConverseString", "$ConverseString", 'G', 138, 0, 00h, 0
	._inspect	'F', 'p', "SaveDayIndex", "$SaveDayIndex", 'G', 141, 0, 00h, 0
	._inspect	'F', 'p', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 142, 0, 00h, 0
	._inspect	'F', 'p', "AddOneDay", "$AddOneDay", 'G', 143, 0, 00h, 0
	._inspect	'F', 'p', "AddOneHour", "$AddOneHour", 'G', 144, 0, 00h, 0
	._inspect	'F', 'p', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 145, 0, 00h, 0
	._inspect	'V', 'd', "Minute_Power_Data", "_Minute_Power_Data", 'G', 150, 72, 0, 0, 00h
	._inspect	'V', 'd', "Read_Count", "_Read_Count", 'G', 151, 3, 0, 0, 00h
	._inspect	'V', 'd', "Fs_Buff", "_Fs_Buff", 'G', 152, 528, 0, 0, 00h
	._inspect	'V', 'd', "Dat_Num", "_Dat_Num", 'G', 153, 1, 0, 0, 00h
	._inspect	'V', 'd', "Set_LoadRecoed_Btime", "_Set_LoadRecoed_Btime", 'G', 154, 6, 0, 0, 00h
	._inspect	'V', 'd', "LoadRecord", "_LoadRecord", 'G', 156, 46, 0, 0, 00h
	._inspect	'V', 'd', "First_Sort", "_First_Sort", 'G', 157, 6, 0, 0, 00h
	._inspect	'V', 'd', "FlashErrStatus", "_FlashErrStatus", 'G', 158, 1, 0, 0, 00h
	._inspect	'V', 'd', "FlashEaseTimes", "_FlashEaseTimes", 'G', 159, 4, 0, 0, 00h
	._inspect	'V', 'd', "user_req_pnt", "_user_req_pnt", 'G', 162, 1, 0, 0, 00h
	._inspect	'V', 'd', "BIT_UNC", "_BIT_UNC", 'G', 164, 8, 0, 0, 00h
	._inspect	'V', 'd', "day_num", "_day_num", 'G', 166, 24, 0, 0, 00h

;## #	FUNCTION Write_Data
;## #  REGISTER ARG    (   wdata)   size   1,   REGISTER R1L
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)


	.SECTION	program,CODE,align
	._inspect	'U', 2, "program", "program", 0
	._file	'D:/TEST/12、RN8302B/HT7038 CODE_backup20160225_2016-4-22/HT7038 CODE/Release_Code/MB4_64A/LoadRecord.c'
	._type	256,'v'
	._type	257,'x',256,1
	._type	257,'m','wdata',0,3
	._func	'Write_Data','G',0,257,$Write_Data,0
	._inspect	'F', 's', "Write_Data", "$Write_Data", 'G', 3
	.align
	._block
	._line	170
	.glb	$Write_Data
$Write_Data:
	._block
	._var	'wdata','R',3,3
	._eblock
	._block
	._var	'wdata','A',3,0
	._block
	._var	'wdata','R',3,3
	._line	171
	mov.b	R1L,_s4trr_addr	;  wdata 
	._eblock
	._line	172
L1:
	btst	03H,_s4ic_addr
	jz	L1
	._line	173
	bclr	03H,_s4ic_addr
	._line	174
	rts	
E1:
	._eblock
M1:
	._efunc	M1
	._inspect	'F', 'd', "Write_Data", "$Write_Data", 'G', 170, 0, 00h, 0
	._inspect	'F', 't', "Write_Data", 'G', 257
	._inspect	'V', 'r', "s4trr_addr", 'G', 171, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 172, 1, 1, 0, 08h
	._inspect	'V', 'r', "s4ic_addr", 'G', 173, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 173, 1, 1, 0, 00h
	._inspect	'F', 'e', "Write_Data", "$Write_Data", 'G', 0, 0


;## #	FUNCTION Read_Data
;## #  REGISTER ARG    (   rdata)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	258,'v'
	._type	259,'O',3
	._type	260,'x',258,1
	._type	260,'m','rdata',0,259
	._func	'Read_Data','G',0,260,$Read_Data,0
	._inspect	'F', 's', "Read_Data", "$Read_Data", 'G', 3
	.align
	._line	176
	.glb	$Read_Data
$Read_Data:
	._block
	._type	261,'O',3
	._var	'rdata','A',261,0
	._line	177
	._block
	._type	262,'O',3
	._var	'rdata','R',262,6
	mov.b	#0ffH,_s4trr_addr
	._line	178
L15:
	btst	03H,_s4ic_addr
	jz	L15
	._line	179
	mov.w	R1,A0	;  rdata  rdata 
	._eblock
	mov.b	_s4trr_addr,[A0]	;  rdata 
	._line	180
	bclr	03H,_s4ic_addr
	._eblock
	._line	181
	rts	
E2:
M2:
	._efunc	M2
	._inspect	'F', 'd', "Read_Data", "$Read_Data", 'G', 176, 0, 00h, 0
	._inspect	'F', 't', "Read_Data", 'G', 260
	._inspect	'V', 'r', "s4trr_addr", 'G', 177, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 178, 1, 1, 0, 08h
	._inspect	'V', 'r', "s4trr_addr", 'G', 179, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 180, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 180, 1, 1, 0, 00h
	._inspect	'F', 'e', "Read_Data", "$Read_Data", 'G', 0, 0


;## #	FUNCTION Write_Command
;## #  REGISTER ARG    ( command)   size   1,   REGISTER R1L
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	263,'v'
	._type	264,'x',263,1
	._type	264,'m','command',0,3
	._func	'Write_Command','G',0,264,$Write_Command,0
	._inspect	'F', 's', "Write_Command", "$Write_Command", 'G', 3
	.align
	._line	183
	.glb	$Write_Command
$Write_Command:
	._block
	._var	'command','A',3,0
	._line	185
	._block
	._var	'command','R',3,3
	bclr	0,_p0_addr
	._line	187
	mov.b	R1L,_s4trr_addr	;  command 
	._eblock
	._line	188
L29:
	btst	03H,_s4ic_addr
	jz	L29
	._line	189
	bclr	03H,_s4ic_addr
	._line	190
	bset	0,_p0_addr
	._eblock
	._line	191
	rts	
E3:
M3:
	._efunc	M3
	._inspect	'F', 'd', "Write_Command", "$Write_Command", 'G', 183, 0, 00h, 0
	._inspect	'F', 't', "Write_Command", 'G', 264
	._inspect	'V', 'r', "p0_addr", 'G', 185, 1, 1, 0, 01h
	._inspect	'V', 'r', "s4trr_addr", 'G', 187, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 188, 1, 1, 0, 08h
	._inspect	'V', 'r', "s4ic_addr", 'G', 189, 1, 1, 0, 00h
	._inspect	'V', 'r', "s4ic_addr", 'G', 189, 1, 1, 0, 00h
	._inspect	'V', 'r', "p0_addr", 'G', 190, 1, 1, 0, 01h
	._inspect	'F', 'e', "Write_Command", "$Write_Command", 'G', 0, 0


;## #	FUNCTION Write_Enable
;## #	FRAME	AUTO	(  Ndelay)	size  2,	offset -3
;## #	FRAME	AUTO	(   state)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(3)	Context Size(5)

	._type	265,'v'
	._type	266,'v'
	._type	267,'x',265,1
	._type	267,'m','',0,266
	._func	'Write_Enable','G',3,267,_Write_Enable,0
	._inspect	'F', 's', "Write_Enable", "_Write_Enable", 'G', 8
	.align
	._line	194
	.glb	_Write_Enable
_Write_Enable:
	enter	#03H
	._block
	._type	270,'g','b0',0,1,3
	._type	271,'g','b1',0,1,3
	._type	272,'g','b2',0,1,3
	._type	273,'g','b3',0,1,3
	._type	274,'g','b4',0,1,3
	._type	275,'g','b5',0,1,3
	._type	276,'g','b6',0,1,3
	._type	277,'g','b7',0,1,3
	._type	269,'S','BIT',1
	._type	269,'m','b0',270,0
	._type	269,'m','b1',271,1
	._type	269,'m','b2',272,2
	._type	269,'m','b3',273,3
	._type	269,'m','b4',274,4
	._type	269,'m','b5',275,5
	._type	269,'m','b6',276,6
	._type	269,'m','b7',277,7
	._type	268,'U','BYTE_BIT',1
	._type	268,'m','bit',269,0
	._type	268,'m','byte',3,0
	._var	'state','A',268,-1
	._var	'Ndelay','A',18,-3
	._line	196
	mov.w	#0000H,-3[FB]	;  Ndelay 
	._line	198
	mov.b	#06H,R1L
	._inspect	'S', 'c', "Write_Command", "$Write_Command", 'G', 0, 198
	jsr	$Write_Command
L43:
	._line	200
	._block
	._line	201
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 201
	jsr	_Read_Status_Register
	mov.b	R0L,-1[FB]	;  state 
	._line	202
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 202
	jsr	_FeedWatchdog
	._line	203
	add.w	#0001H,-3[FB]	;  Ndelay 
	._eblock
	btst	01H,-1[FB]	;  state 
	jnz	L47
	cmp.w	#03e8H,-3[FB]	;  Ndelay 
	jltu	L43
L47:
	._eblock
	._line	206
	exitd	
E4:
M4:
	._efunc	M4
	._inspect	'F', 'd', "Write_Enable", "_Write_Enable", 'G', 194, 0, 00h, 0
	._inspect	'F', 't', "Write_Enable", 'G', 267
	._inspect	'F', 'r', "Write_Command", "$Write_Command", 'G', 198, 0, 00h, 0
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 201, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 202, 0, 00h, 0
	._inspect	'F', 'e', "Write_Enable", "_Write_Enable", 'G', 0, 0


;## #	FUNCTION Write_Disable
;## #	FRAME	AUTO	(  Ndelay)	size  2,	offset -3
;## #	FRAME	AUTO	(   state)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(3)	Context Size(5)

	._type	278,'v'
	._type	279,'v'
	._type	280,'x',278,1
	._type	280,'m','',0,279
	._func	'Write_Disable','G',3,280,_Write_Disable,0
	._inspect	'F', 's', "Write_Disable", "_Write_Disable", 'G', 8
	.align
	._line	209
	.glb	_Write_Disable
_Write_Disable:
	enter	#03H
	._block
	._var	'state','A',268,-1
	._var	'Ndelay','A',18,-3
	._line	211
	mov.w	#0000H,-3[FB]	;  Ndelay 
	._line	213
	mov.b	#04H,R1L
	._inspect	'S', 'c', "Write_Command", "$Write_Command", 'G', 0, 213
	jsr	$Write_Command
L83:
	._line	215
	._block
	._line	216
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 216
	jsr	_Read_Status_Register
	mov.b	R0L,-1[FB]	;  state 
	._line	217
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 217
	jsr	_FeedWatchdog
	._line	218
	add.w	#0001H,-3[FB]	;  Ndelay 
	._eblock
	btst	01H,-1[FB]	;  state 
	jz	L87
	cmp.w	#03e8H,-3[FB]	;  Ndelay 
	jltu	L83
L87:
	._eblock
	._line	220
	exitd	
E5:
M5:
	._efunc	M5
	._inspect	'F', 'd', "Write_Disable", "_Write_Disable", 'G', 209, 0, 00h, 0
	._inspect	'F', 't', "Write_Disable", 'G', 280
	._inspect	'F', 'r', "Write_Command", "$Write_Command", 'G', 213, 0, 00h, 0
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 216, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 217, 0, 00h, 0
	._inspect	'F', 'e', "Write_Disable", "_Write_Disable", 'G', 0, 0


;## #	FUNCTION Read_Status_Register
;## #	FRAME	AUTO	(    RDSR)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(1)	Context Size(5)

	._type	281,'v'
	._type	282,'x',3,1
	._type	282,'m','',0,281
	._func	'Read_Status_Register','G',1,282,_Read_Status_Register,0
	._inspect	'F', 's', "Read_Status_Register", "_Read_Status_Register", 'G', 6
	.align
	._line	223
	.glb	_Read_Status_Register
_Read_Status_Register:
	enter	#01H
	._block
	._var	'RDSR','A',3,-1
	._line	226
	bclr	0,_p0_addr
	._line	227
	mov.b	#05H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 227
	jsr	$Write_Data
	._line	228
	mova	-1[FB],R1	;  RDSR 
	._inspect	'S', 'c', "Read_Data", "$Read_Data", 'G', 0, 228
	jsr	$Read_Data
	._line	229
	bset	0,_p0_addr
	._line	230
	mov.b	-1[FB],R0L	;  RDSR 
	exitd	
E6:
	._eblock
M6:
	._efunc	M6
	._inspect	'F', 'd', "Read_Status_Register", "_Read_Status_Register", 'G', 223, 0, 00h, 0
	._inspect	'F', 't', "Read_Status_Register", 'G', 282
	._inspect	'V', 'r', "p0_addr", 'G', 226, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 227, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data", "$Read_Data", 'G', 228, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 229, 1, 1, 0, 01h
	._inspect	'F', 'e', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 0


;## #	FUNCTION Write_Status_Register
;## #	FRAME	AUTO	(  status)	size  1,	offset -1
;## #  REGISTER ARG    (  status)   size   1,   REGISTER R1L
;## #	ARG Size(0)	Auto Size(1)	Context Size(5)

	._type	283,'x',3,1
	._type	283,'m','status',0,3
	._func	'Write_Status_Register','G',1,283,$Write_Status_Register,0
	._inspect	'F', 's', "Write_Status_Register", "$Write_Status_Register", 'G', 6
	.align
	._line	236
	.glb	$Write_Status_Register
$Write_Status_Register:
	enter	#01H
	mov.b	R1L,-1[FB]	;  status  status 
	._block
	._var	'status','A',3,-1
	._var	'unc','A',18,0
	._line	239
	._inspect	'S', 'c', "Write_Enable", "_Write_Enable", 'G', 0, 239
	jsr	_Write_Enable
	._line	240
	bclr	0,_p0_addr
	._line	241
	mov.b	#01H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 241
	jsr	$Write_Data
	._line	242
	mov.b	-1[FB],R1L	;  status 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 242
	jsr	$Write_Data
	._line	243
	bset	0,_p0_addr
	._line	244
	._inspect	'S', 'c', "Write_Disable", "_Write_Disable", 'G', 0, 244
	jsr	_Write_Disable
	._line	245
	mov.b	#01H,R0L
	exitd	
E7:
	._eblock
M7:
	._efunc	M7
	._inspect	'F', 'd', "Write_Status_Register", "$Write_Status_Register", 'G', 236, 0, 00h, 0
	._inspect	'F', 't', "Write_Status_Register", 'G', 283
	._inspect	'F', 'r', "Write_Enable", "_Write_Enable", 'G', 239, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 240, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 241, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 242, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 243, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Disable", "_Write_Disable", 'G', 244, 0, 00h, 0
	._inspect	'F', 'e', "Write_Status_Register", "$Write_Status_Register", 'G', 0, 0


;## #	FUNCTION Read_Data_Bytes
;## #	FRAME	AUTO	(addrUnion)	size  4,	offset -6
;## #	FRAME	AUTO	(       i)	size  2,	offset -6
;## #	FRAME	AUTO	( RcvBuff)	size  2,	offset -2
;## #  FRAME   ARG (FlashAddr)  size   4,    offset 5
;## #  FRAME   ARG (    rlen)  size   2,    offset 9
;## #  REGISTER ARG    ( RcvBuff)   size   2,   REGISTER R2
;## #	ARG Size(6)	Auto Size(6)	Context Size(5)

	._type	284,'v'
	._type	285,'O',3
	._type	286,'x',284,3
	._type	286,'m','FlashAddr',0,7
	._type	286,'m','RcvBuff',0,285
	._type	286,'m','rlen',0,18
	._func	'Read_Data_Bytes','G',6,286,$Read_Data_Bytes,0
	._inspect	'F', 's', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 11
	.align
	._line	249
	.glb	$Read_Data_Bytes
$Read_Data_Bytes:
	enter	#06H
	mov.w	R2,-2[FB]	;  RcvBuff  RcvBuff 
	._block
	._var	'FlashAddr','A',7,5
	._type	287,'O',3
	._var	'RcvBuff','A',287,-2
	._var	'rlen','A',18,9
	._type	289,'S','',4
	._type	289,'m','Byte0',3,0
	._type	289,'m','Byte1',3,1
	._type	289,'m','Byte2',3,2
	._type	289,'m','Byte3',3,3
	._type	291,'g','Pdummy',0,8,7
	._type	292,'g','Paddr',0,24,7
	._type	290,'S','',4
	._type	290,'m','Pdummy',291,0
	._type	290,'m','Paddr',292,8
	._type	294,'g','Sdummy',0,12,7
	._type	295,'g','Saddr',0,20,7
	._type	293,'S','',4
	._type	293,'m','Sdummy',294,0
	._type	293,'m','Saddr',295,12
	._type	288,'U','FlashAddr32M',4
	._type	288,'m','addr',7,0
	._type	288,'m','AsByte',289,0
	._type	288,'m','PageAddr',290,0
	._type	288,'m','SectorAddr',293,0
	._var	'addrUnion','A',288,-6
	._var	'i','A',18,-6
	._line	253
	cmp.w	#0000H,9[FB]	;  rlen 
	jeq	L167
	cmp.w	#0200H,9[FB]	;  rlen 
	jleu	L119
L167:
	._line	254
	._block
	._line	255
	exitd	
	._eblock
L119:
	._line	258
	bclr	0,_p0_addr
	._line	261
	mov.b	#03H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 261
	jsr	$Write_Data
	._line	263
	mov.w	5[FB],-6[FB]	;  FlashAddr  addrUnion 
	mov.w	5+2[FB],-6+2[FB]	;  FlashAddr  addrUnion 
	._line	265
	mov.b	-4[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 265
	jsr	$Write_Data
	._line	267
	mov.b	-5[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 267
	jsr	$Write_Data
	._line	269
	mov.b	-6[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 269
	jsr	$Write_Data
	._line	271
	mov.w	#0000H,-6[FB]	;  i 
L147:
	._line	271
	cmp.w	9[FB],-6[FB]	;  rlen  i 
	jgeu	L151
	._line	272
	._block
	._line	273
	mov.w	-2[FB],R1	;  RcvBuff 
	add.w	-6[FB],R1	;  i 
	._inspect	'S', 'c', "Read_Data", "$Read_Data", 'G', 0, 273
	jsr	$Read_Data
	._eblock
	add.w	#0001H,-6[FB]	;  i 
	jmp	L147
L151:
	._line	277
	bset	0,_p0_addr
	._eblock
	._line	278
	exitd	
E8:
M8:
	._efunc	M8
	._inspect	'F', 'd', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 249, 0, 00h, 0
	._inspect	'F', 't', "Read_Data_Bytes", 'G', 286
	._inspect	'V', 'r', "p0_addr", 'G', 258, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 261, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 265, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 267, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 269, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data", "$Read_Data", 'G', 273, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 277, 1, 1, 0, 01h
	._inspect	'F', 'e', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 0


;## #	FUNCTION Write_Page
;## #	FRAME	AUTO	(addrUnion)	size  4,	offset -8
;## #	FRAME	AUTO	(       i)	size  2,	offset -8
;## #	FRAME	AUTO	(  Ndelay)	size  2,	offset -4
;## #	FRAME	AUTO	(WriteBuff)	size  2,	offset -2
;## #	FRAME	AUTO	(   state)	size  1,	offset -8
;## #  FRAME   ARG (FlashAddr)  size   4,    offset 5
;## #  FRAME   ARG (    tlen)  size   2,    offset 9
;## #  REGISTER ARG    (WriteBuff)   size   2,   REGISTER R2
;## #	ARG Size(6)	Auto Size(8)	Context Size(5)

	._type	296,'O',3
	._type	297,'x',16,3
	._type	297,'m','FlashAddr',0,7
	._type	297,'m','WriteBuff',0,296
	._type	297,'m','tlen',0,18
	._func	'Write_Page','G',8,297,$Write_Page,0
	._inspect	'F', 's', "Write_Page", "$Write_Page", 'G', 13
	.align
	._line	282
	.glb	$Write_Page
$Write_Page:
	enter	#08H
	mov.w	R2,-2[FB]	;  WriteBuff  WriteBuff 
	._block
	._var	'FlashAddr','A',7,5
	._type	298,'O',3
	._var	'WriteBuff','A',298,-2
	._var	'tlen','A',18,9
	._var	'addrUnion','A',288,-8
	._var	'i','A',18,-8
	._var	'state','A',268,-8
	._var	'unc','A',3,0
	._var	'Ndelay','A',18,-4
	._line	287
	mov.w	#0000H,-4[FB]	;  Ndelay 
	._line	289
	mov.w	5[FB],-8[FB]	;  FlashAddr  addrUnion 
	mov.w	5+2[FB],-8+2[FB]	;  FlashAddr  addrUnion 
	._line	290
	mov.b	-8[FB],R0L	;  addrUnion 
	mov.b	#00H,R0H
	add.w	9[FB],R0	;  tlen 
	cmp.w	#0100H,R0
	jgtu	L255
	cmp.w	#0000H,9[FB]	;  tlen 
	jne	L173
L255:
	._line	291
	._block
	._line	292
	mov.w	#0ffffH,R0
	exitd	
	._eblock
L173:
	._line	294
	._inspect	'S', 'c', "Write_Enable", "_Write_Enable", 'G', 0, 294
	jsr	_Write_Enable
	._line	297
	bclr	0,_p0_addr
	._line	300
	mov.b	#02H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 300
	jsr	$Write_Data
	._line	302
	mov.w	5[FB],-8[FB]	;  FlashAddr  addrUnion 
	mov.w	5+2[FB],-8+2[FB]	;  FlashAddr  addrUnion 
	._line	304
	mov.b	-6[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 304
	jsr	$Write_Data
	._line	306
	mov.b	-7[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 306
	jsr	$Write_Data
	._line	308
	mov.b	-8[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 308
	jsr	$Write_Data
	._line	311
	mov.w	#0000H,-8[FB]	;  i 
L201:
	._line	311
	cmp.w	9[FB],-8[FB]	;  tlen  i 
	jgeu	L205
	._line	312
	._block
	._line	313
	mov.w	-2[FB],A0	;  WriteBuff 
	add.w	-8[FB],A0	;  i 
	mov.b	[A0],R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 313
	jsr	$Write_Data
	._eblock
	add.w	#0001H,-8[FB]	;  i 
	jmp	L201
L205:
	._line	316
	bset	0,_p0_addr
	._line	317
	mov.w	#0001H,R1
	._inspect	'S', 'c', "Delay", "$Delay", 'G', 0, 317
	jsr	$Delay
L213:
	._line	320
	._block
	._line	321
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 321
	jsr	_Read_Status_Register
	mov.b	R0L,-8[FB]	;  state 
	._line	322
	add.w	#0001H,-4[FB]	;  Ndelay 
	._line	323
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 323
	jsr	_FeedWatchdog
	._eblock
	btst	00H,-8[FB]	;  state 
	jz	L217
	cmp.w	#0c350H,-4[FB]	;  Ndelay 
	jleu	L213
L217:
	._line	327
	._inspect	'S', 'c', "Write_Disable", "_Write_Disable", 'G', 0, 327
	jsr	_Write_Disable
	._line	329
	cmp.w	#0c350H,-4[FB]	;  Ndelay 
	jgeu	L237
	._line	330
	mov.w	#0000H,R0
	exitd	
	._line	331
L237:
	._line	332
	mov.w	#0ffffH,R0
	exitd	
E9:
	._eblock
M9:
	._efunc	M9
	._inspect	'F', 'd', "Write_Page", "$Write_Page", 'G', 282, 0, 00h, 0
	._inspect	'F', 't', "Write_Page", 'G', 297
	._inspect	'F', 'r', "Write_Enable", "_Write_Enable", 'G', 294, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 297, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 300, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 304, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 306, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 308, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 313, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 316, 1, 1, 0, 01h
	._inspect	'F', 'r', "Delay", "$Delay", 'G', 317, 0, 00h, 0
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 321, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 323, 0, 00h, 0
	._inspect	'F', 'r', "Write_Disable", "_Write_Disable", 'G', 327, 0, 00h, 0
	._inspect	'F', 'e', "Write_Page", "$Write_Page", 'G', 0, 0


;## #	FUNCTION Chip_Erase
;## #	FRAME	AUTO	(  Ndelay)	size  4,	offset -5
;## #	FRAME	AUTO	(   state)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(5)	Context Size(5)

	._type	299,'v'
	._type	300,'x',16,1
	._type	300,'m','',0,299
	._func	'Chip_Erase','G',5,300,_Chip_Erase,0
	._inspect	'F', 's', "Chip_Erase", "_Chip_Erase", 'G', 10
	.align
	._line	400
	.glb	_Chip_Erase
_Chip_Erase:
	enter	#05H
	._block
	._var	'state','A',268,-1
	._var	'Ndelay','A',7,-5
	._line	402
	mov.w	#0000H,-5[FB]	;  Ndelay 
	mov.w	#0000H,-5+2[FB]	;  Ndelay 
	._line	404
	._inspect	'S', 'c', "Write_Enable", "_Write_Enable", 'G', 0, 404
	jsr	_Write_Enable
	._line	406
	bclr	0,_p0_addr
	._line	407
	mov.b	#60H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 407
	jsr	$Write_Data
	._line	408
	bset	0,_p0_addr
	._line	410
	mov.w	#0005H,R1
	._inspect	'S', 'c', "Delay", "$Delay", 'G', 0, 410
	jsr	$Delay
L271:
	._line	412
	._block
	._line	413
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 413
	jsr	_Read_Status_Register
	mov.b	R0L,-1[FB]	;  state 
	._line	414
	mov.w	#0001H,R1
	._inspect	'S', 'c', "Delay", "$Delay", 'G', 0, 414
	jsr	$Delay
	._line	415
	add.w	#0001H,-5[FB]	;  Ndelay 
	adcf.w	-5+2[FB]	;  Ndelay 
	._line	416
	._inspect	'S', 'c', "CheckPowerDown", "_CheckPowerDown", 'G', 0, 416
	jsr	_CheckPowerDown
	._eblock
	btst	00H,-1[FB]	;  state 
	jz	L275
	cmp.w	#0001H,-5+2[FB]	;  Ndelay 
	jltu	L271
	jgtu	M10
	cmp.w	#86a0H,-5[FB]	;  Ndelay 
	jleu	L271
M10:
L275:
	._line	419
	._inspect	'S', 'c', "Write_Disable", "_Write_Disable", 'G', 0, 419
	jsr	_Write_Disable
	._line	421
	cmp.w	#0001H,-5+2[FB]	;  Ndelay 
	jgtu	L295
	jltu	M11
	cmp.w	#86a0H,-5[FB]	;  Ndelay 
	jgeu	L295
M11:
	._line	422
	mov.w	#0000H,R0
	exitd	
	._line	423
L295:
	._line	424
	mov.w	#0ffffH,R0
	exitd	
E10:
	._eblock
M12:
	._efunc	M12
	._inspect	'F', 'd', "Chip_Erase", "_Chip_Erase", 'G', 400, 0, 00h, 0
	._inspect	'F', 't', "Chip_Erase", 'G', 300
	._inspect	'F', 'r', "Write_Enable", "_Write_Enable", 'G', 404, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 406, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 407, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 408, 1, 1, 0, 01h
	._inspect	'F', 'r', "Delay", "$Delay", 'G', 410, 0, 00h, 0
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 413, 0, 00h, 0
	._inspect	'F', 'r', "Delay", "$Delay", 'G', 414, 0, 00h, 0
	._inspect	'F', 'r', "CheckPowerDown", "_CheckPowerDown", 'G', 416, 0, 00h, 0
	._inspect	'F', 'r', "Write_Disable", "_Write_Disable", 'G', 419, 0, 00h, 0
	._inspect	'F', 'e', "Chip_Erase", "_Chip_Erase", 'G', 0, 0


;## #	FUNCTION Sector_Erase
;## #	FRAME	AUTO	(addrUnion)	size  4,	offset -8
;## #	FRAME	AUTO	(  Ndelay)	size  4,	offset -4
;## #	FRAME	AUTO	(   state)	size  1,	offset -8
;## #  FRAME   ARG (FlashAddr)  size   4,    offset 5
;## #	ARG Size(4)	Auto Size(8)	Context Size(5)

	._type	301,'x',16,1
	._type	301,'m','FlashAddr',0,7
	._func	'Sector_Erase','G',8,301,_Sector_Erase,0
	._inspect	'F', 's', "Sector_Erase", "_Sector_Erase", 'G', 13
	.align
	._line	434
	.glb	_Sector_Erase
_Sector_Erase:
	enter	#08H
	._block
	._var	'FlashAddr','A',7,5
	._var	'addrUnion','A',288,-8
	._var	'state','A',268,-8
	._var	'Ndelay','A',7,-4
	._line	437
	mov.w	#0000H,-4[FB]	;  Ndelay 
	mov.w	#0000H,-4+2[FB]	;  Ndelay 
	._line	439
	._inspect	'S', 'c', "Write_Enable", "_Write_Enable", 'G', 0, 439
	jsr	_Write_Enable
	._line	441
	bclr	0,_p0_addr
	._line	442
	mov.b	#20H,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 442
	jsr	$Write_Data
	._line	444
	mov.w	5[FB],-8[FB]	;  FlashAddr  addrUnion 
	mov.w	5+2[FB],-8+2[FB]	;  FlashAddr  addrUnion 
	._line	447
	mov.b	-6[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 447
	jsr	$Write_Data
	._line	449
	mov.b	-7[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 449
	jsr	$Write_Data
	._line	451
	mov.b	-8[FB],R1L	;  addrUnion 
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 451
	jsr	$Write_Data
	._line	452
	bset	0,_p0_addr
	._line	454
	mov.w	#0005H,R1
	._inspect	'S', 'c', "Delay", "$Delay", 'G', 0, 454
	jsr	$Delay
L317:
	._line	456
	._block
	._line	457
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 457
	jsr	_Read_Status_Register
	mov.b	R0L,-8[FB]	;  state 
	._line	458
	mov.w	#0001H,R1
	._inspect	'S', 'c', "Delay", "$Delay", 'G', 0, 458
	jsr	$Delay
	._line	459
	add.w	#0001H,-4[FB]	;  Ndelay 
	adcf.w	-4+2[FB]	;  Ndelay 
	._line	460
	._inspect	'S', 'c', "CheckPowerDown", "_CheckPowerDown", 'G', 0, 460
	jsr	_CheckPowerDown
	._eblock
	btst	00H,-8[FB]	;  state 
	jz	L321
	cmp.w	#0000H,-4+2[FB]	;  Ndelay 
	jltu	L317
	jgtu	M13
	cmp.w	#01f4H,-4[FB]	;  Ndelay 
	jleu	L317
M13:
L321:
	._line	464
	._inspect	'S', 'c', "Write_Disable", "_Write_Disable", 'G', 0, 464
	jsr	_Write_Disable
	._line	466
	add.w	#0001H,_FlashEaseTimes
	adcf.w	_FlashEaseTimes+2
	._line	468
	cmp.w	#0000H,-4+2[FB]	;  Ndelay 
	jgtu	L341
	jltu	M14
	cmp.w	#01f4H,-4[FB]	;  Ndelay 
	jgeu	L341
M14:
	._line	469
	mov.w	#0000H,R0
	exitd	
	._line	470
L341:
	._line	471
	mov.w	#0ffffH,R0
	exitd	
E11:
	._eblock
M15:
	._efunc	M15
	._inspect	'F', 'd', "Sector_Erase", "_Sector_Erase", 'G', 434, 0, 00h, 0
	._inspect	'F', 't', "Sector_Erase", 'G', 301
	._inspect	'F', 'r', "Write_Enable", "_Write_Enable", 'G', 439, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 441, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 442, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 447, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 449, 0, 00h, 0
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 451, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 452, 1, 1, 0, 01h
	._inspect	'F', 'r', "Delay", "$Delay", 'G', 454, 0, 00h, 0
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 457, 0, 00h, 0
	._inspect	'F', 'r', "Delay", "$Delay", 'G', 458, 0, 00h, 0
	._inspect	'F', 'r', "CheckPowerDown", "_CheckPowerDown", 'G', 460, 0, 00h, 0
	._inspect	'F', 'r', "Write_Disable", "_Write_Disable", 'G', 464, 0, 00h, 0
	._inspect	'V', 'r', "FlashEaseTimes", 'G', 466, 4, 0, 0, 00h
	._inspect	'F', 'e', "Sector_Erase", "_Sector_Erase", 'G', 0, 0


;## #	FUNCTION ReadID
;## #	FRAME	AUTO	(DeviceID)	size  2,	offset -4
;## #	FRAME	AUTO	(ManufacturerID)	size  2,	offset -2
;## #  REGISTER ARG    (ManufacturerID)   size   2,   REGISTER R1
;## #  REGISTER ARG    (DeviceID)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	302,'v'
	._type	303,'O',3
	._type	304,'O',3
	._type	305,'x',302,2
	._type	305,'m','ManufacturerID',-2,303
	._type	305,'m','DeviceID',-4,304
	._func	'ReadID','G',4,305,$ReadID,0
	._inspect	'F', 's', "ReadID", "$ReadID", 'G', 9
	.align
	._line	480
	.glb	$ReadID
$ReadID:
	enter	#04H
	mov.w	R1,-2[FB]	;  ManufacturerID  ManufacturerID 
	mov.w	R2,-4[FB]	;  DeviceID  DeviceID 
	._block
	._type	306,'O',3
	._var	'ManufacturerID','A',306,-2
	._type	307,'O',3
	._var	'DeviceID','A',307,-4
	._line	483
	bclr	0,_p0_addr
	._line	485
	mov.w	#0000H,R1	;  unc 
	._block
	._var	'unc','R',18,6
	._eblock
	mov.w	R1,R0	;  unc  unc 
	._block
	._var	'unc','R',18,5
L363:
	add.w	#0001H,R0	;  unc 
	cmp.w	#00ffH,R0	;  unc 
	jltu	L363
	._eblock
	._line	486
	mov.b	#9fH,R1L
	._inspect	'S', 'c', "Write_Data", "$Write_Data", 'G', 0, 486
	jsr	$Write_Data
	._line	487
	mov.w	-2[FB],R1	;  ManufacturerID 
	._inspect	'S', 'c', "Read_Data", "$Read_Data", 'G', 0, 487
	jsr	$Read_Data
	._line	488
	mov.w	-4[FB],R1	;  DeviceID 
	._inspect	'S', 'c', "Read_Data", "$Read_Data", 'G', 0, 488
	jsr	$Read_Data
	._line	490
	bset	0,_p0_addr
	._eblock
	._line	491
	exitd	
E12:
M16:
	._efunc	M16
	._inspect	'F', 'd', "ReadID", "$ReadID", 'G', 480, 0, 00h, 0
	._inspect	'F', 't', "ReadID", 'G', 305
	._inspect	'V', 'r', "p0_addr", 'G', 483, 1, 1, 0, 01h
	._inspect	'F', 'r', "Write_Data", "$Write_Data", 'G', 486, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data", "$Read_Data", 'G', 487, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data", "$Read_Data", 'G', 488, 0, 00h, 0
	._inspect	'V', 'r', "p0_addr", 'G', 490, 1, 1, 0, 01h
	._inspect	'F', 'e', "ReadID", "$ReadID", 'G', 0, 0


;## #	FUNCTION ReadData_To_Cob
;## #	FRAME	AUTO	(recordtime)	size  7,	offset -16
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -9
;## #	FRAME	AUTO	(  nblock)	size  2,	offset -5
;## #	FRAME	AUTO	(rblockAddr)	size  2,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset 5
;## #	FRAME	AUTO	(     tmp)	size  1,	offset -1
;## #  FRAME   ARG (    kind)  size   1,    offset 5
;## #  REGISTER ARG    (rblockAddr)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(16)	Context Size(5)

	._type	308,'O',18
	._type	309,'x',16,2
	._type	309,'m','rblockAddr',0,308
	._type	309,'m','kind',0,3
	._func	'ReadData_To_Cob','G',16,309,$ReadData_To_Cob,0
	._inspect	'F', 's', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 21
	.align
	._line	503
	.glb	$ReadData_To_Cob
$ReadData_To_Cob:
	enter	#010H
	mov.w	R1,-3[FB]	;  rblockAddr  rblockAddr 
	._block
	._type	310,'O',18
	._var	'rblockAddr','A',310,-3
	._var	'kind','A',3,5
	._var	'i','A',3,5
	._var	'tmp','A',3,-1
	._var	'nblock','A',18,-5
	._var	'FlashAddr','A',288,-9
	._type	311,'S','DATEANDTIME_DEF',7
	._type	311,'m','Year',3,0
	._type	311,'m','Month',3,1
	._type	311,'m','Day',3,2
	._type	311,'m','Hour',3,3
	._type	311,'m','Min',3,4
	._type	311,'m','Sec',3,5
	._type	311,'m','Week',3,6
	._var	'recordtime','A',311,-16
	._line	509
	mov.w	-3[FB],A0	;  rblockAddr 
	mov.w	[A0],-5[FB]	;  nblock 
	._line	511
	mova	-9[FB],R2	;  FlashAddr 
	mov.w	-5[FB],R1	;  nblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 511
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L379
	._line	512
	mov.w	#0ffffH,R0
	exitd	
L379:
	._line	515
	cmp.b	#02H,5[FB]	;  kind 
	jltu	L397
	mov.b	#07H,R0L
	jmp	L399
L397:
	mov.b	#20H,R0L
L399:
	._block
	._var	'nLength','R',3,1
	._line	516
	mov.b	#00H,R0H
	._eblock
	push.w	R0
	._inspect	'S', 'p', 2
	mov.w	#_Co,R2
	push.w	-9+2[FB]	;  FlashAddr 
	push.w	-9[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 516
	jsr	$Read_Data_Bytes
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	517
	mova	-16[FB],R2	;  recordtime 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 517
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	518
	mov.b	#00H,-11[FB]	;  recordtime 
	._line	519
	cmp.b	#0aaH,_Co
	jne	L595
	cmp.b	#04H,_Co+1
	jgtu	L595
	mov.b	_Co+1,R0L
	jeq	L595
	mova	-16[FB],R1	;  recordtime 
	._inspect	'S', 'c', "CheckTime", "$CheckTime", 'G', 0, 519
	jsr	$CheckTime
	mov.b	R0L,R0H
	jne	L401
L595:
	._line	520
	mov.w	#0ffffH,R0
	exitd	
L401:
	._line	522
	mov.b	_Co+1,R0L
	mov.b	#00H,R0H
	add.w	-5[FB],R0	;  nblock  mmblock 
	._block
	._var	'mmblock','R',18,5
	._line	524
	cmp.b	#00H,5[FB]	;  kind 
	jeq	L581
	cmp.b	#03H,5[FB]	;  kind 
	jne	L463
	._eblock
L581:
	._line	525
	mov.w	#0000H,R0
	exitd	
L463:
	._block
	._var	'mmblock','R',18,5
	._line	528
	cmp.b	#01H,5[FB]	;  kind 
	jne	L521
	._eblock
	._line	529
	._block
	._line	530
	mov.b	#20H,-1[FB]	;  tmp 
	._line	531
	add.w	#0001H,-5[FB]	;  nblock 
	._line	532
	mov.b	#01H,5[FB]	;  i 
L491:
	._line	532
	cmp.b	_Co+1,5[FB]	;  i 
	jgeu	L495
	._line	533
	._block
	._line	534
	cmp.w	#0f600H,-5[FB]	;  nblock 
	jltu	L503
	._line	535
	._block
	._line	536
	mov.w	#0000H,-5[FB]	;  nblock 
	._line	537
	mov.w	#4000H,-9[FB]	;  FlashAddr 
	mov.w	#0001H,-9+2[FB]	;  FlashAddr 
	._eblock
L503:
	._line	540
	mova	-9[FB],R2	;  FlashAddr 
	mov.w	-5[FB],R1	;  nblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 540
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L513
	._line	541
	mov.w	#0ffffH,R0
	exitd	
L513:
	._line	542
	push.w	#0020H
	._inspect	'S', 'p', 2
	mov.b	-1[FB],R0L	;  tmp 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0
	push.w	-9+2[FB]	;  FlashAddr 
	push.w	-9[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	mov.w	R0,R2
	._inspect	'S', 'c', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 542
	jsr	$Read_Data_Bytes
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	543
	add.b	#20H,-1[FB]	;  tmp 
	._line	544
	add.w	#0001H,-5[FB]	;  nblock 
	._eblock
	inc.b	5[FB]	;  i 
	jmp	L491
L495:
	._line	546
	mov.w	#0001H,R0
	exitd	
	._eblock
L521:
	._block
	._var	'mmblock','R',18,5
	._line	549
	cmp.w	#0f600H,R0	;  mmblock 
	jltu	L531
	._eblock
	._line	550
	._block
	._block
	._var	'mmblock','R',18,5
	._line	552
	mov.w	#0000H,R2
	divu.w	#0f600H
	._eblock
	mov.w	R2,R0	;  mmblock  mmblock 
	._block
	._var	'mmblock','R',18,5
	._eblock
L531:
	._line	555
	mov.w	-3[FB],A0	;  rblockAddr 
	mov.w	R0,[A0]	;  mmblock 
	._eblock
	._line	556
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 556
	jsr	_FeedWatchdog
	._line	557
	mov.w	#0002H,R0
	exitd	
E13:
	._eblock
M17:
	._efunc	M17
	._inspect	'F', 'd', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 503, 0, 00h, 0
	._inspect	'F', 't', "ReadData_To_Cob", 'G', 309
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 511, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 516, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 516, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 517, 1280, 0, 0, 00h
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 517, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 519, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 519, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 519, 1280, 0, 0, 00h
	._inspect	'F', 'r', "CheckTime", "$CheckTime", 'G', 519, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 522, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 532, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 540, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 542, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 542, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 556, 0, 00h, 0
	._inspect	'F', 'e', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 6, 0


;## #	FUNCTION NeedToRecord
;## #	FRAME	AUTO	(timeCounter)	size  2,	offset -7
;## #	FRAME	AUTO	(   rTime)	size  2,	offset -5
;## #	FRAME	AUTO	(    temp)	size  1,	offset -3
;## #	FRAME	AUTO	(    flag)	size  1,	offset -2
;## #	FRAME	AUTO	(    mask)	size  1,	offset -1
;## #  REGISTER ARG    (   rTime)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(7)	Context Size(5)

	._type	312,'S','DATA_TIME',6
	._type	312,'m','Year',3,0
	._type	312,'m','Month',3,1
	._type	312,'m','Day',3,2
	._type	312,'m','Hour',3,3
	._type	312,'m','Min',3,4
	._type	312,'m','Sec',3,5
	._type	313,'O',312
	._type	314,'x',3,1
	._type	314,'m','rTime',-5,313
	._func	'NeedToRecord','G',7,314,$NeedToRecord,0
	._inspect	'F', 's', "NeedToRecord", "$NeedToRecord", 'G', 12
	.align
	._line	562
	.glb	$NeedToRecord
$NeedToRecord:
	enter	#07H
	mov.w	R1,-5[FB]	;  rTime  rTime 
	._block
	._type	315,'O',312
	._var	'rTime','A',315,-5
	._var	'mask','A',3,-1
	._var	'flag','A',3,-2
	._var	'timeCounter','A',18,-7
	._var	'temp','A',3,-3
	._line	570
	mov.w	#0100H,-2[FB]	;  flag 
	._line	572
	mov.b	_Meter_Parameter+356,R0L
	jne	L597
	._line	573
	._block
	._line	574
	mov.b	#00H,R0L
	exitd	
	._eblock
L597:
	._line	578
	mova	-3[FB],R2	;  temp 
	mov.w	-5[FB],A0	;  rTime 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 578
	jsr	$BCD2Byte
	._line	579
	mov.b	-3[FB],R0L	;  temp 
	mov.b	#00H,R0H
	mul.w	#003cH,R0
	mov.w	R0,-7[FB]	;  timeCounter 
	._line	580
	mova	-3[FB],R2	;  temp 
	mov.w	-5[FB],A0	;  rTime 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 580
	jsr	$BCD2Byte
	._line	581
	mov.b	-3[FB],R0L	;  temp 
	mov.b	#00H,R0H
	add.w	R0,-7[FB]	;  timeCounter 
	._line	583
	mov.b	#00H,R1H	;  i 
	._block
	._var	'i','R',3,4
	._eblock
	mov.b	R1H,R1L	;  i  i 
	._block
	._var	'i','R',3,3
L607:
	._eblock
	._line	586
	._block
	._block
	._var	'i','R',3,3
	._line	587
	mov.b	R1L,A0
	shl.w	#01H,A0
	mov.w	-7[FB],R0	;  timeCounter 
	mov.w	#0000H,R2
	divu.w	_Meter_Parameter+364[A0]
	cmp.w	#0000H,R2
	jne	L619
	._line	588
	or.b	-1[FB],-2[FB]	;  mask  flag 
L619:
	._eblock
	._eblock
	._line	584
	._block
	._block
	._var	'i','R',3,3
	._line	590
	shl.b	#01H,-1[FB]	;  mask 
	._eblock
	add.b	#01H,R1L	;  i 
	cmp.b	#06H,R1L	;  i 
	jltu	L607
	._eblock
	._line	593
	mov.b	_Meter_Parameter+356,R0L
	and.b	-2[FB],R0L	;  flag 
	exitd	
E14:
	._eblock
M18:
	._efunc	M18
	._inspect	'F', 'd', "NeedToRecord", "$NeedToRecord", 'G', 562, 0, 00h, 0
	._inspect	'F', 't', "NeedToRecord", 'G', 314
	._inspect	'V', 'r', "Meter_Parameter", 'G', 572, 623, 0, 0, 00h
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 578, 0, 00h, 0
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 580, 0, 00h, 0
	._inspect	'V', 'r', "Meter_Parameter", 'G', 587, 623, 0, 0, 00h
	._inspect	'V', 'r', "Meter_Parameter", 'G', 593, 623, 0, 0, 00h
	._inspect	'F', 'e', "NeedToRecord", "$NeedToRecord", 'G', 0, 0


;## #	FUNCTION ComposeRecord1
;## #	FRAME	AUTO	(  __TMP2)	size  2,	offset -8
;## #	FRAME	AUTO	(  __TMP1)	size  2,	offset -8
;## #	FRAME	AUTO	(       i)	size  2,	offset -6
;## #	FRAME	AUTO	(       p)	size  2,	offset -4
;## #	FRAME	AUTO	( rRecord)	size  2,	offset -2
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(8)	Context Size(5)

	._type	317,'Z',3,3
	._type	318,'Z',3,3
	._type	319,'Z',3,3
	._type	320,'Z',3,3
	._type	321,'Z',3,3
	._type	322,'Z',3,3
	._type	323,'Z',2,3
	._type	316,'S','RECORD1',20
	._type	316,'m','VA',317,0
	._type	316,'m','VB',318,3
	._type	316,'m','VC',319,6
	._type	316,'m','IA',320,9
	._type	316,'m','IB',321,12
	._type	316,'m','IC',322,15
	._type	316,'m','Freq',323,18
	._type	324,'O',316
	._type	325,'x',16,1
	._type	325,'m','rRecord',-2,324
	._func	'ComposeRecord1','G',8,325,$ComposeRecord1,0
	._inspect	'F', 's', "ComposeRecord1", "$ComposeRecord1", 'G', 13
	.align
	._line	599
	.glb	$ComposeRecord1
$ComposeRecord1:
	enter	#08H
	mov.w	R1,-2[FB]	;  rRecord  rRecord 
	._block
	._type	326,'O',316
	._var	'rRecord','A',326,-2
	._var	'i','A',18,-6
	._type	327,'O',3
	._var	'p','A',327,-4
	._line	603
	._block
	._type	328,'O',316
	._var	'rRecord','R',328,6
	mov.w	R1,-4[FB]	;  rRecord  p 
	._eblock
	._line	604
	mov.w	#0000H,-6[FB]	;  i 
L635:
	._line	605
	._block
	._line	606
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.w	-4[FB],R1	;  p 
	mov.w	-6[FB],A0	;  i 
	shl.w	#02H,A0
	push.w	#0000H
	push.w	#0064H
	._inspect	'S', 'p', 4
	mov.w	_Volt+2[A0],R2
	mov.w	_Volt[A0],R0
	mov.w	R1,-8[FB]	;  __TMP1 
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 606
	jsr.a	__i4divU
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-8[FB],R2	;  __TMP1 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 606
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	607
	add.w	#0003H,-4[FB]	;  p 
	._eblock
	add.w	#0001H,-6[FB]	;  i 
	cmp.w	#0003H,-6[FB]	;  i 
	jltu	L635
	._line	610
	mov.w	#0000H,-6[FB]	;  i 
L647:
	._line	611
	._block
	._line	612
	push.w	#0fdfcH
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#1301H
	._inspect	'S', 'p', 2
	mov.w	-4[FB],R2	;  p 
	mov.w	-6[FB],R1	;  i 
	shl.w	#02H,R1
	mov.w	#_COMM_Curr,R0
	add.w	R0,R1
	._inspect	'S', 'c', "data_change", "$data_change", 'G', 0, 612
	jsr	$data_change
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	613
	add.w	#0003H,-4[FB]	;  p 
	._eblock
	add.w	#0001H,-6[FB]	;  i 
	cmp.w	#0003H,-6[FB]	;  i 
	jltu	L647
	._line	617
	push.b	#02H
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R1	;  rRecord 
	add.w	#0012H,R1
	push.w	#0000H
	push.w	#2710H
	._inspect	'S', 'p', 4
	mov.w	_Freq,R0
	mov.w	_Freq+2,R2
	mov.w	R1,-8[FB]	;  __TMP2 
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 617
	jsr.a	__i4divU
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-8[FB],R2	;  __TMP2 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 617
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	619
	mov.w	#0000H,R0
	exitd	
E15:
	._eblock
M19:
	._efunc	M19
	._inspect	'F', 'd', "ComposeRecord1", "$ComposeRecord1", 'G', 599, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord1", 'G', 325
	._inspect	'V', 'r', "Volt", 'G', 606, 12, 0, 0, 00h
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 606, 0, 00h, 0
	._inspect	'V', 'r', "COMM_Curr", 'G', 612, 12, 0, 0, 00h
	._inspect	'F', 'r', "data_change", "$data_change", 'G', 612, 0, 00h, 0
	._inspect	'V', 'r', "Freq", 'G', 617, 16, 0, 0, 00h
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 617, 0, 00h, 0
	._inspect	'F', 'e', "ComposeRecord1", "$ComposeRecord1", 'G', 6, 0


;## #	FUNCTION ComposeRecord2
;## #	FRAME	AUTO	(  __TMP3)	size  2,	offset -6
;## #	FRAME	AUTO	(pointer1)	size  2,	offset -6
;## #	FRAME	AUTO	( rRecord)	size  2,	offset -4
;## #	FRAME	AUTO	(       i)	size  1,	offset -2
;## #	FRAME	AUTO	(temp_byte)	size  1,	offset -1
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(6)	Context Size(5)

	._type	330,'Z',3,3
	._type	331,'Z',3,3
	._type	332,'Z',3,3
	._type	333,'Z',3,3
	._type	334,'Z',3,3
	._type	335,'Z',3,3
	._type	336,'Z',3,3
	._type	337,'Z',3,3
	._type	338,'Z',3,3
	._type	339,'Z',3,3
	._type	340,'Z',3,3
	._type	341,'Z',3,3
	._type	342,'Z',4,3
	._type	329,'S','RECORD2',42
	._type	329,'m','ActiveFlag',3,0
	._type	329,'m','ReactiveFlag',3,1
	._type	329,'m','PA',330,2
	._type	329,'m','PB',331,5
	._type	329,'m','PC',332,8
	._type	329,'m','PAll',333,11
	._type	329,'m','RA',334,14
	._type	329,'m','RB',335,17
	._type	329,'m','RC',336,20
	._type	329,'m','RAll',337,23
	._type	329,'m','SA',338,26
	._type	329,'m','SB',339,29
	._type	329,'m','SC',340,32
	._type	329,'m','SALL',341,35
	._type	329,'m','no_ues',342,38
	._type	343,'O',329
	._type	344,'x',16,1
	._type	344,'m','rRecord',-4,343
	._func	'ComposeRecord2','G',6,344,$ComposeRecord2,0
	._inspect	'F', 's', "ComposeRecord2", "$ComposeRecord2", 'G', 11
	.align
	._line	625
	.glb	$ComposeRecord2
$ComposeRecord2:
	enter	#06H
	mov.w	R1,-4[FB]	;  rRecord  rRecord 
	._block
	._type	345,'O',329
	._var	'rRecord','A',345,-4
	._var	'i','A',3,-2
	._type	348,'g','b0',0,1,3
	._type	349,'g','b1',0,1,3
	._type	350,'g','b2',0,1,3
	._type	351,'g','b3',0,1,3
	._type	352,'g','b4',0,1,3
	._type	353,'g','b5',0,1,3
	._type	354,'g','b6',0,1,3
	._type	355,'g','b7',0,1,3
	._type	347,'S','bit_def',1
	._type	347,'m','b0',348,0
	._type	347,'m','b1',349,1
	._type	347,'m','b2',350,2
	._type	347,'m','b3',351,3
	._type	347,'m','b4',352,4
	._type	347,'m','b5',353,5
	._type	347,'m','b6',354,6
	._type	347,'m','b7',355,7
	._type	346,'U','byte_def',1
	._type	346,'m','bit',347,0
	._type	346,'m','byte',3,0
	._var	'temp_byte','A',346,-1
	._type	356,'O',3
	._var	'pointer1','A',356,-6
	._type	357,'O',3
	._type	358,'O',3
	._type	359,'Z',4,358
	._var	'SourceDP','A',359,0
	._line	634
	tst.b	#08H,_Meter_States+4
	bmnz	0,-1[FB]	;  temp_byte 
	._line	635
	tst.b	#01H,_Meter_States+4
	bmnz	1,-1[FB]	;  temp_byte 
	._line	636
	tst.b	#02H,_Meter_States+4
	bmnz	2,-1[FB]	;  temp_byte 
	._line	637
	tst.b	#04H,_Meter_States+4
	bmnz	3,-1[FB]	;  temp_byte 
	._line	638
	mov.w	-4[FB],A0	;  rRecord 
	mov.b	-1[FB],[A0]	;  temp_byte 
	and.b	#0fH,[A0]
	._line	639
	tst.b	#80H,_Meter_States+4
	bmnz	4,-1[FB]	;  temp_byte 
	._line	640
	tst.b	#10H,_Meter_States+4
	bmnz	5,-1[FB]	;  temp_byte 
	._line	641
	tst.b	#20H,_Meter_States+4
	bmnz	6,-1[FB]	;  temp_byte 
	._line	642
	tst.b	#40H,_Meter_States+4
	bmnz	7,-1[FB]	;  temp_byte 
	._line	643
	mov.b	-1[FB],R0L	;  temp_byte 
	shl.b	#-4,R0L
	mov.w	-4[FB],A0	;  rRecord 
	mov.b	R0L,0001H[A0]
	._line	645
	mov.w	#_Minute_Power_Data+40,-6[FB]	;  pointer1 
	._line	646
	mov.b	#00H,-2[FB]	;  i 
L665:
	._line	647
	._block
	._line	648
	mov.b	-2[FB],R1H	;  i 
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R0L
	and.b	-1[FB],R0L	;  temp_byte 
	jeq	L677
	._line	649
	mov.w	-6[FB],A0	;  pointer1 
	not.w	2[A0]
	neg.w	[A0]
	adcf.w	2[A0]
L677:
	._line	650
	mov.b	-2[FB],R0L	;  i 
	jne	L681
	._line	651
	mov.w	-4[FB],R0	;  rRecord  pointer2 
	add.w	#000bH,R0	;  pointer2 
	._block
	._type	360,'O',3
	._var	'pointer2','R',360,5
	jmp	L693
	._eblock
	._line	652
L681:
	cmp.b	#04H,-2[FB]	;  i 
	jne	L691
	._line	653
	mov.w	-4[FB],R0	;  rRecord  pointer2 
	add.w	#0017H,R0	;  pointer2 
	._block
	._type	361,'O',3
	._var	'pointer2','R',361,5
	jmp	L693
	._eblock
	._line	654
L691:
	._line	655
	mov.b	-2[FB],R0L	;  i 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mul.w	#0003H,R0
	add.w	-4[FB],R0	;  rRecord 
	add.w	#0002H,R0	;  pointer2 
	._block
	._type	362,'O',3
	._var	'pointer2','R',362,5
L693:
	._line	656
	push.w	#0fcfaH
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#1301H
	._inspect	'S', 'p', 2
	._eblock
	mov.w	-6[FB],R1	;  pointer1 
	mov.w	R0,R2
	._inspect	'S', 'c', "data_change", "$data_change", 'G', 0, 656
	jsr	$data_change
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	657
	add.w	#0004H,-6[FB]	;  pointer1 
	._eblock
	inc.b	-2[FB]	;  i 
	cmp.b	#08H,-2[FB]	;  i 
	jltu	L665
	._line	659
	mov.b	#00H,-2[FB]	;  i 
L701:
	._line	660
	._block
	._line	661
	mov.b	-2[FB],R0L	;  i 
	jne	L713
	._line	662
	mov.w	-4[FB],R0	;  rRecord  pointer2 
	add.w	#0023H,R0	;  pointer2 
	._block
	._type	363,'O',3
	._var	'pointer2','R',363,5
	jmp	L715
	._eblock
	._line	663
L713:
	._line	664
	mov.b	-2[FB],R0L	;  i 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mul.w	#0003H,R0
	add.w	-4[FB],R0	;  rRecord 
	add.w	#001aH,R0	;  pointer2 
	._block
	._type	364,'O',3
	._var	'pointer2','R',364,5
L715:
	._line	665
	push.b	#03H
	._inspect	'S', 'p', 1
	._eblock
	mov.b	-2[FB],A0	;  i 
	shl.w	#02H,A0
	push.w	#0000H
	push.w	#0064H
	._inspect	'S', 'p', 4
	mov.w	R0,R1
	mov.w	_Visual_power+2[A0],R2
	mov.w	_Visual_power[A0],R0
	mov.w	R1,-6[FB]	;  __TMP3 
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 665
	jsr.a	__i4divU
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-6[FB],R2	;  __TMP3 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 665
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._eblock
	inc.b	-2[FB]	;  i 
	cmp.b	#04H,-2[FB]	;  i 
	jltu	L701
	._line	667
	mov.w	#0000H,R0
	exitd	
E16:
	._eblock
M20:
	._efunc	M20
	._inspect	'F', 'd', "ComposeRecord2", "$ComposeRecord2", 'G', 625, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord2", 'G', 344
	._inspect	'V', 'r', "Meter_States", 'G', 634, 18, 0, 0, 08h
	._inspect	'V', 'r', "Meter_States", 'G', 635, 18, 0, 0, 01h
	._inspect	'V', 'r', "Meter_States", 'G', 636, 18, 0, 0, 02h
	._inspect	'V', 'r', "Meter_States", 'G', 637, 18, 0, 0, 04h
	._inspect	'V', 'r', "Meter_States", 'G', 639, 18, 0, 0, 080h
	._inspect	'V', 'r', "Meter_States", 'G', 640, 18, 0, 0, 010h
	._inspect	'V', 'r', "Meter_States", 'G', 641, 18, 0, 0, 020h
	._inspect	'V', 'r', "Meter_States", 'G', 642, 18, 0, 0, 040h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 645, 72, 0, 0, 00h
	._inspect	'F', 'r', "data_change", "$data_change", 'G', 656, 0, 00h, 0
	._inspect	'V', 'r', "Visual_power", 'G', 665, 16, 0, 0, 00h
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 665, 0, 00h, 0
	._inspect	'F', 'e', "ComposeRecord2", "$ComposeRecord2", 'G', 6, 0


;## #	FUNCTION ComposeRecord3
;## #	FRAME	AUTO	(       i)	size  2,	offset -4
;## #	FRAME	AUTO	(       p)	size  2,	offset -2
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	366,'Z',2,3
	._type	367,'Z',2,3
	._type	368,'Z',2,3
	._type	369,'Z',2,3
	._type	365,'S','RECORD3',8
	._type	365,'m','Factor',366,0
	._type	365,'m','FactorA',367,2
	._type	365,'m','FactorB',368,4
	._type	365,'m','FactorC',369,6
	._type	370,'O',365
	._type	371,'x',16,1
	._type	371,'m','rRecord',0,370
	._func	'ComposeRecord3','G',4,371,$ComposeRecord3,0
	._inspect	'F', 's', "ComposeRecord3", "$ComposeRecord3", 'G', 9
	.align
	._line	673
	.glb	$ComposeRecord3
$ComposeRecord3:
	enter	#04H
	._block
	._type	372,'O',365
	._var	'rRecord','A',372,0
	._var	'i','A',16,-4
	._type	373,'O',3
	._var	'p','A',373,-2
	._line	678
	._block
	._type	374,'O',365
	._var	'rRecord','R',374,6
	mov.w	R1,-2[FB]	;  rRecord  p 
	._eblock
	._line	679
	mov.w	#0000H,-4[FB]	;  i 
L733:
	._line	680
	._block
	._line	681
	push.w	#0fdfaH
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#1201H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  p 
	mov.w	-4[FB],R1	;  i 
	shl.w	#02H,R1
	mov.w	#_COMM_Factor,R0
	add.w	R0,R1
	._inspect	'S', 'c', "data_change", "$data_change", 'G', 0, 681
	jsr	$data_change
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	682
	add.w	#0002H,-2[FB]	;  p 
	._eblock
	add.w	#0001H,-4[FB]	;  i 
	cmp.w	#0004H,-4[FB]	;  i 
	jlt	L733
	._line	684
	mov.w	#0000H,R0
	exitd	
E17:
	._eblock
M21:
	._efunc	M21
	._inspect	'F', 'd', "ComposeRecord3", "$ComposeRecord3", 'G', 673, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord3", 'G', 371
	._inspect	'V', 'r', "COMM_Factor", 'G', 681, 16, 0, 0, 00h
	._inspect	'F', 'r', "data_change", "$data_change", 'G', 681, 0, 00h, 0
	._inspect	'F', 'e', "ComposeRecord3", "$ComposeRecord3", 'G', 6, 0


;## #	FUNCTION ComposeRecord4
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	375,'S','RECORD4',8
	._type	375,'m','PP',7,0
	._type	375,'m','NP',7,4
	._type	376,'O',375
	._type	377,'x',16,1
	._type	377,'m','rRecord',0,376
	._func	'ComposeRecord4','G',0,377,$ComposeRecord4,0
	._inspect	'F', 's', "ComposeRecord4", "$ComposeRecord4", 'G', 3
	.align
	._line	690
	.glb	$ComposeRecord4
$ComposeRecord4:
	._block
	._type	378,'O',375
	._var	'rRecord','A',378,0
	._line	691
	._block
	._type	379,'O',375
	._var	'rRecord','R',379,6
	mov.w	R1,A0	;  rRecord  rRecord 
	._eblock
	mov.w	_This_Month_Data,[A0]	;  rRecord 
	mov.w	_This_Month_Data+2,2[A0]	;  rRecord 
	._block
	._type	380,'O',375
	._var	'rRecord','R',380,9
	._line	692
	mov.w	_This_Month_Data+36,0004H[A0]
	mov.w	_This_Month_Data+36+2,0004H+2H[A0]
	._eblock
	._line	693
	mov.w	#0000H,R0
	rts	
E18:
	._eblock
M22:
	._efunc	M22
	._inspect	'F', 'd', "ComposeRecord4", "$ComposeRecord4", 'G', 690, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord4", 'G', 377
	._inspect	'V', 'r', "This_Month_Data", 'G', 691, 803, 0, 0, 00h
	._inspect	'V', 'r', "This_Month_Data", 'G', 692, 803, 0, 0, 00h
	._inspect	'F', 'e', "ComposeRecord4", "$ComposeRecord4", 'G', 0, 0


;## #	FUNCTION ComposeRecord5
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	381,'S','RECORD5',16
	._type	381,'m','Quad1',7,0
	._type	381,'m','Quad2',7,4
	._type	381,'m','Quad3',7,8
	._type	381,'m','Quad4',7,12
	._type	382,'O',381
	._type	383,'x',16,1
	._type	383,'m','rRecord',0,382
	._func	'ComposeRecord5','G',0,383,$ComposeRecord5,0
	._inspect	'F', 's', "ComposeRecord5", "$ComposeRecord5", 'G', 3
	.align
	._line	699
	.glb	$ComposeRecord5
$ComposeRecord5:
	._block
	._type	384,'O',381
	._var	'rRecord','A',384,0
	._line	700
	._block
	._type	385,'O',381
	._var	'rRecord','R',385,6
	mov.w	R1,A0	;  rRecord  rRecord 
	._eblock
	mov.w	_This_Month_Data+72,[A0]	;  rRecord 
	mov.w	_This_Month_Data+72+2,2[A0]	;  rRecord 
	._block
	._type	386,'O',381
	._var	'rRecord','R',386,9
	._line	701
	mov.w	_This_Month_Data+108,0004H[A0]
	mov.w	_This_Month_Data+108+2,0004H+2H[A0]
	._line	702
	mov.w	_This_Month_Data+144,0008H[A0]
	mov.w	_This_Month_Data+144+2,0008H+2H[A0]
	._line	703
	mov.w	_This_Month_Data+180,000cH[A0]
	mov.w	_This_Month_Data+180+2,000cH+2H[A0]
	._eblock
	._line	704
	mov.w	#0000H,R0
	rts	
E19:
	._eblock
M23:
	._efunc	M23
	._inspect	'F', 'd', "ComposeRecord5", "$ComposeRecord5", 'G', 699, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord5", 'G', 383
	._inspect	'V', 'r', "This_Month_Data", 'G', 700, 803, 0, 0, 00h
	._inspect	'V', 'r', "This_Month_Data", 'G', 701, 803, 0, 0, 00h
	._inspect	'V', 'r', "This_Month_Data", 'G', 702, 803, 0, 0, 00h
	._inspect	'V', 'r', "This_Month_Data", 'G', 703, 803, 0, 0, 00h
	._inspect	'F', 'e', "ComposeRecord5", "$ComposeRecord5", 'G', 0, 0

	._inspect	'V', 'e', "Last_Average_Value", 'G', 709, 288, 0, 0, 00h

;## #	FUNCTION ComposeRecord6
;## #	FRAME	AUTO	( rRecord)	size  2,	offset -2
;## #  REGISTER ARG    ( rRecord)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	388,'Z',3,3
	._type	389,'Z',3,3
	._type	387,'S','RECORD6',6
	._type	387,'m','DemandActive',388,0
	._type	387,'m','DemandReactive',389,3
	._type	390,'O',387
	._type	391,'x',16,1
	._type	391,'m','rRecord',-2,390
	._func	'ComposeRecord6','G',2,391,$ComposeRecord6,0
	._inspect	'F', 's', "ComposeRecord6", "$ComposeRecord6", 'G', 7
	.align
	._line	712
	.glb	$ComposeRecord6
$ComposeRecord6:
	enter	#02H
	mov.w	R1,-2[FB]	;  rRecord  rRecord 
	._block
	._type	392,'O',387
	._var	'rRecord','A',392,-2
	._var	'l_temp','A',7,0
	._line	715
	push.w	#0fcfaH
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#1301H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  rRecord 
	mov.w	#_Current_Demand,R1
	._inspect	'S', 'c', "data_change", "$data_change", 'G', 0, 715
	jsr	$data_change
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	718
	push.w	#0fcfaH
	._inspect	'S', 'p', 2
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#1301H
	._inspect	'S', 'p', 2
	mov.w	-2[FB],R2	;  rRecord 
	add.w	#0003H,R2
	mov.w	#_Current_Demand+4,R1
	._inspect	'S', 'c', "data_change", "$data_change", 'G', 0, 718
	jsr	$data_change
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	719
	mov.w	#0000H,R0
	exitd	
E20:
	._eblock
M24:
	._efunc	M24
	._inspect	'F', 'd', "ComposeRecord6", "$ComposeRecord6", 'G', 712, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord6", 'G', 391
	._inspect	'V', 'r', "Current_Demand", 'G', 715, 8, 0, 0, 00h
	._inspect	'F', 'r', "data_change", "$data_change", 'G', 715, 0, 00h, 0
	._inspect	'V', 'r', "Current_Demand", 'G', 718, 8, 0, 0, 00h
	._inspect	'F', 'r', "data_change", "$data_change", 'G', 718, 0, 00h, 0
	._inspect	'F', 'e', "ComposeRecord6", "$ComposeRecord6", 'G', 6, 0


;## #	FUNCTION Get_Physicaladdress_From_Block
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -4
;## #  REGISTER ARG    (   block)   size   2,   REGISTER R1
;## #  REGISTER ARG    (    addr)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	393,'O',7
	._type	394,'x',16,2
	._type	394,'m','block',0,18
	._type	394,'m','addr',0,393
	._func	'Get_Physicaladdress_From_Block','G',4,394,$Get_Physicaladdress_From_Block,0
	._inspect	'F', 's', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 9
	.align
	._line	730
	.glb	$Get_Physicaladdress_From_Block
$Get_Physicaladdress_From_Block:
	enter	#04H
	._block
	._var	'block','A',18,0
	._type	395,'O',7
	._var	'addr','A',395,0
	._var	'FlashAddr','A',288,-4
	._line	733
	._block
	._var	'block','R',18,6
	._type	396,'O',7
	._var	'addr','R',396,7
	cmp.w	#0f600H,R1	;  block 
	jleu	L755
	._eblock
	._line	734
	mov.w	#0000H,R0
	exitd	
L755:
	._block
	._var	'block','R',18,6
	._type	397,'O',7
	._var	'addr','R',397,7
	._line	737
	mov.w	#4000H,-4[FB]	;  FlashAddr 
	mov.w	#0001H,-4+2[FB]	;  FlashAddr 
	._line	738
	mov.w	R1,R0	;  block  block 
	._eblock
	shl.w	#-07H,R1
	._block
	._var	'block','R',18,5
	._type	398,'O',7
	._var	'addr','R',398,7
	mov.w	#0000H,R3
	mov.w	R0,A0	;  block  block 
	._eblock
	mov.w	R2,A1	;  addr  addr 
	mov.w	-4[FB],R0	;  FlashAddr 
	mov.w	-4+2[FB],R2	;  FlashAddr 
	shl.l	#-8,R2R0
	shl.l	#-4,R2R0
	and.w	#000fH,R2
	._block
	._var	'block','R',18,9
	._type	399,'O',7
	._var	'addr','R',399,10
	add.w	R1,R0
	adc.w	R3,R2
	shl.l	#8H,R2R0
	shl.l	#04H,R2R0
	and.w	#0fffH,-4[FB]	;  FlashAddr 
	and.w	#0f000H,R0
	or.w	R0,-4[FB]	;  FlashAddr 
	mov.w	R2,-4+2[FB]	;  FlashAddr 
	._line	740
	and.w	#007fH,A0
	._eblock
	._block
	._type	400,'O',7
	._var	'addr','R',400,10
	shl.w	#05H,A0
	mov.w	A0,R0
	mov.w	#0000H,R2
	and.w	#0f000H,-4[FB]	;  FlashAddr 
	and.w	#0fffH,R0
	or.w	R0,-4[FB]	;  FlashAddr 
	._line	742
	mov.w	-4[FB],[A1]	;  FlashAddr  addr 
	mov.w	-4+2[FB],2[A1]	;  FlashAddr  addr 
	._eblock
	._line	743
	mov.w	#0001H,R0
	exitd	
E21:
	._eblock
M25:
	._efunc	M25
	._inspect	'F', 'd', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 730, 0, 00h, 0
	._inspect	'F', 't', "Get_Physicaladdress_From_Block", 'G', 394
	._inspect	'F', 'e', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 0


;## #	FUNCTION Get_Block_From_PhysicalAddress
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -4
;## #  FRAME   ARG (    addr)  size   4,    offset 5
;## #  REGISTER ARG    (   block)   size   2,   REGISTER R1
;## #	ARG Size(4)	Auto Size(4)	Context Size(5)

	._type	401,'O',18
	._type	402,'x',16,2
	._type	402,'m','block',0,401
	._type	402,'m','addr',0,7
	._func	'Get_Block_From_PhysicalAddress','G',4,402,$Get_Block_From_PhysicalAddress,0
	._inspect	'F', 's', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 9
	.align
	._line	754
	.glb	$Get_Block_From_PhysicalAddress
$Get_Block_From_PhysicalAddress:
	enter	#04H
	._block
	._type	403,'O',18
	._var	'block','A',403,0
	._var	'addr','A',7,5
	._var	'FlashAddr','A',288,-4
	._line	758
	._block
	._type	404,'O',18
	._var	'block','R',404,6
	mov.w	5[FB],-4[FB]	;  addr  FlashAddr 
	mov.w	5+2[FB],-4+2[FB]	;  addr  FlashAddr 
	._line	759
	cmp.w	#0001H,-4+2[FB]	;  FlashAddr 
	jltu	L847
	jgtu	M26
	cmp.w	#4000H,-4[FB]	;  FlashAddr 
	jltu	L847
M26:
	cmp.w	#001fH,-4+2[FB]	;  FlashAddr 
	jgtu	L847
	jltu	M27
	cmp.w	#0ffffH,-4[FB]	;  FlashAddr 
	jgtu	L847
M27:
	mov.b	-4[FB],R0L	;  FlashAddr 
	and.b	#1fH,R0L
	jz	L769
	._eblock
L847:
	._line	760
	mov.w	#0ffffH,R0
	exitd	
L769:
	._block
	._type	405,'O',18
	._var	'block','R',405,6
	._line	762
	sub.w	#4000H,-4[FB]	;  FlashAddr 
	sbb.w	#0001H,-4+2[FB]	;  FlashAddr 
	._line	763
	mov.w	-4[FB],R0	;  FlashAddr 
	mov.w	-4+2[FB],R2	;  FlashAddr 
	shl.l	#-8,R2R0
	shl.l	#-4,R2R0
	and.w	#000fH,R2
	._eblock
	._block
	._var	'nnblock','R',18,5
	._type	406,'O',18
	._var	'block','R',406,6
	._line	764
	shl.w	#07H,R0	;  nnblock 
	._line	765
	mov.w	R0,R3	;  nnblock  nnblock 
	._eblock
	mov.w	-4[FB],R0	;  FlashAddr 
	mov.w	-4+2[FB],R2	;  FlashAddr 
	shl.l	#-5,R2R0
	._block
	._type	407,'O',18
	._var	'block','R',407,6
	._var	'nnblock','R',18,8
	and.w	#007fH,R0
	add.w	R0,R3	;  nnblock 
	._line	767
	cmp.w	#0f600H,R3	;  nnblock 
	jleu	L815
	._eblock
	._line	768
	mov.w	#0ffffH,R0
	exitd	
L815:
	._block
	._type	408,'O',18
	._var	'block','R',408,6
	._var	'nnblock','R',18,8
	._line	770
	mov.w	R1,A0	;  block  block 
	._eblock
	mov.w	R3,[A0]	;  nnblock  block 
	._line	771
	mov.w	#0000H,R0
	exitd	
E22:
	._eblock
M28:
	._efunc	M28
	._inspect	'F', 'd', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 754, 0, 00h, 0
	._inspect	'F', 't', "Get_Block_From_PhysicalAddress", 'G', 402
	._inspect	'F', 'e', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 0, 0


;## #	FUNCTION SaveLoadRecord
;## #	FRAME	AUTO	(   nDate)	size  6,	offset -20
;## #	FRAME	AUTO	(FlashAddre)	size  4,	offset -14
;## #	FRAME	AUTO	(       i)	size  2,	offset -10
;## #	FRAME	AUTO	(needsave)	size  2,	offset -8
;## #	FRAME	AUTO	(  nblock)	size  2,	offset -6
;## #	FRAME	AUTO	(oldblock)	size  2,	offset -4
;## #	FRAME	AUTO	(  __TMP4)	size  1,	offset -2
;## #	FRAME	AUTO	(     tmp)	size  1,	offset -2
;## #	FRAME	AUTO	(nSaveFlag)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(20)	Context Size(5)

	._type	409,'v'
	._type	410,'x',16,1
	._type	410,'m','',0,409
	._func	'SaveLoadRecord','G',20,410,_SaveLoadRecord,0
	._inspect	'F', 's', "SaveLoadRecord", "_SaveLoadRecord", 'G', 25
	.align
	._line	777
	.glb	_SaveLoadRecord
_SaveLoadRecord:
	enter	#014H
	._block
	._var	'nSaveFlag','A',3,-1
	._type	411,'O',3
	._var	'nPage','A',18,0
	._var	'nByte','A',18,0
	._var	'tmp','A',3,-2
	._var	'nHour','A',3,0
	._var	'nMinute','A',3,0
	._var	'nDate','A',312,-20
	._var	'oldblock','A',18,-4
	._var	'nblock','A',18,-6
	._var	'needsave','A',18,-8
	._var	'i','A',18,-10
	._var	'nNeedSaveIndex','A',3,0
	._var	'FlashAddre','A',288,-14
	._line	795
	mov.w	_MainSoftDate,-20[FB]	;  nDate 
	._line	797
	mov.w	_MainSoftDate+2,-18[FB]	;  nDate 
	._line	799
	mov.b	_MainSoftDate+4,-16[FB]	;  nDate 
	._line	802
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	-20[FB],R2	;  nDate 
	mov.w	#_Meter_Parameter+357,R1
	._inspect	'S', 'c', "CompareBytes", "$CompareBytes", 'G', 0, 802
	jsr	$CompareBytes
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	803
	cmp.w	#0001H,R0	;  ret 
	jne	L849
	._eblock
	._line	804
	mov.w	#0000H,R0
	exitd	
L849:
	._line	807
	mova	-20[FB],R1	;  nDate 
	._inspect	'S', 'c', "NeedToRecord", "$NeedToRecord", 'G', 0, 807
	jsr	$NeedToRecord
	mov.b	R0L,-1[FB]	;  nSaveFlag 
	._line	808
	jne	L859
	._line	809
	mov.w	#0000H,R0
	exitd	
L859:
	._line	811
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	-20[FB],R2	;  nDate 
	mov.w	#_LoadRecord+16,R1
	._inspect	'S', 'c', "CompareBytes", "$CompareBytes", 'G', 0, 811
	jsr	$CompareBytes
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	813
	cmp.w	#0000H,R0	;  ret 
	jn	L1171
	._eblock
	._line	814
	._block
	._line	815
	mov.b	-16[FB],R0L	;  nDate 
	jne	L869
	._line	816
	._block
	._line	817
	or.b	#01H,_LoadRecord+39
	._eblock
L869:
	._line	820
	push.b	#00H
	._inspect	'S', 'p', 1
	mova	-4[FB],R1	;  oldblock 
	._inspect	'S', 'c', "Find_First_Record", "$Find_First_Record", 'G', 0, 820
	jsr	$Find_First_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	821
	push.b	#00H
	._inspect	'S', 'p', 1
	mova	-4[FB],R1	;  oldblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 821
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	822
	mova	-20[FB],R2	;  nDate 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 0, 822
	jsr	$CompDateTime4ByteAnd5Byte
	cmp.b	#00H,R0L
	jle	L1171
	._line	823
	._block
	._line	824
	._inspect	'S', 'c', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 0, 824
	jsr	_First_InitLoadRecord
	._eblock
	._eblock
L1171:
	._line	828
	mov.w	_LoadRecord,-4[FB]	;  oldblock 
	._line	833
	mov.b	#0aaH,_Co
	._line	834
	._inspect	'S', 'p', 2
	pusha	-20[FB]	;  nDate 
	push.b	-1[FB]	;  nSaveFlag 
	._inspect	'S', 'p', 1
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "ComposeRecord", "$ComposeRecord", 'G', 0, 834
	jsr	$ComposeRecord
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._block
	._var	'nLength','R',3,1
	._line	835
	add.b	#02H,R0L	;  nLength 
	._line	836
	mov.b	R0L,R0H	;  nLength 
	and.b	#1fH,R0H
	jne	L899
	._line	837
	shl.b	#-5,R0L
	._eblock
	mov.b	R0L,_Co+1
	jmp	L901
	._line	838
L899:
	._block
	._var	'nLength','R',3,1
	._line	839
	shl.b	#-5,R0L
	._eblock
	inc.b	R0L
	mov.b	R0L,_Co+1
L901:
	._line	842
	mov.w	-4[FB],-6[FB]	;  oldblock  nblock 
	._line	843
	mov.b	#00H,-2[FB]	;  tmp 
	._line	844
	mov.w	#0ffffH,-8[FB]	;  needsave 
	._line	845
	mov.w	#0000H,-10[FB]	;  i 
L909:
	._line	845
	mov.b	_Co+1,R0L
	mov.b	#00H,R0H
	cmp.w	R0,-10[FB]	;  i 
	jgeu	L913
	._line	846
	._block
	._line	847
	mova	-14[FB],R2	;  FlashAddre 
	mov.w	-6[FB],R1	;  nblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 847
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L921
	._line	848
	mov.w	#0ffffH,R0
	exitd	
L921:
	._line	850
	tst.w	#0fffH,-14[FB]	;  FlashAddre 
	jnz	L967
	._line	851
	._block
	._line	852
	cmp.w	#001fH,-14+2[FB]	;  FlashAddre 
	jltu	L929
	jgtu	M29
	cmp.w	#0ffffH,-14[FB]	;  FlashAddre 
	jleu	L929
M29:
	._line	853
	._block
	._line	854
	mov.w	#0000H,-6[FB]	;  nblock 
	._line	855
	mov.w	#4000H,-14[FB]	;  FlashAddre 
	mov.w	#0001H,-14+2[FB]	;  FlashAddre 
	._eblock
L929:
	._line	857
	cmp.w	#4000H,-14[FB]	;  FlashAddre 
	jne	L1173
	cmp.w	#0001H,-14+2[FB]	;  FlashAddre 
	jne	L1173
	cmp.w	#0000H,_LoadRecord+2
	jeq	L1173
	._line	858
	._block
	._line	859
	or.b	#02H,_LoadRecord+39
	._line	860
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0001H
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord+39,R2
	mov.w	#6002H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 860
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
L1173:
	._line	862
	push.w	-14+2[FB]	;  FlashAddre 
	push.w	-14[FB]	;  FlashAddre 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Sector_Erase", "_Sector_Erase", 'G', 0, 862
	jsr	_Sector_Erase
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	863
	mov.w	-6[FB],-8[FB]	;  nblock  needsave 
	._eblock
L967:
	._line	865
	push.w	#0020H
	._inspect	'S', 'p', 2
	mov.b	-2[FB],R0L	;  tmp 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0
	push.w	-14+2[FB]	;  FlashAddre 
	push.w	-14[FB]	;  FlashAddre 
	._inspect	'S', 'p', 4
	mov.w	R0,R2
	._inspect	'S', 'c', "Write_Page", "$Write_Page", 'G', 0, 865
	jsr	$Write_Page
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	866
	add.b	#20H,-2[FB]	;  tmp 
	._line	867
	add.w	#0001H,-6[FB]	;  nblock 
	._eblock
	add.w	#0001H,-10[FB]	;  i 
	jmp	L909
L913:
	._line	870
	mov.w	-4[FB],R2	;  oldblock 
	mov.b	-1[FB],R1L	;  nSaveFlag 
	._inspect	'S', 'c', "Change_SortAddr", "$Change_SortAddr", 'G', 0, 870
	jsr	$Change_SortAddr
	._line	876
	cmp.b	_LoadRecord+16,-20[FB]	;  nDate 
	jne	L1177
	cmp.b	_LoadRecord+17,-19[FB]	;  nDate 
	jne	L1177
	cmp.b	_LoadRecord+18,-18[FB]	;  nDate 
	jne	L1177
	cmp.b	_LoadRecord+19,-17[FB]	;  nDate 
	jeq	L977
L1177:
	._line	877
	._block
	._line	878
	or.b	#01H,_LoadRecord+39
	._eblock
L977:
	._line	881
	mov.w	-4[FB],_LoadRecord+2	;  oldblock 
	._line	882
	cmp.w	#0f600H,-6[FB]	;  nblock 
	jltu	L1041
	._line	883
	._block
	._line	884
	mov.w	#0000H,-6[FB]	;  nblock 
	._eblock
L1041:
	._line	888
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	#_LoadRecord+16,R2
	mova	-20[FB],R1	;  nDate 
	._inspect	'S', 'c', "My_Memcmp", "$My_Memcmp", 'G', 0, 888
	jsr	$My_Memcmp
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.b	R0L,R0H
	jne	L1165
	mov.b	-16[FB],R1L	;  nDate 
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 888
	jsr	$OB_H
	mov.b	_LoadRecord+20,R1L
	mov.b	R0L,-2[FB]	;  __TMP4 
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 888
	jsr	$OB_H
	mov.b	#00H,R0H
	divu.b	#05H
	mov.b	R0L,R1L
	mov.b	-2[FB],R0L	;  __TMP4 
	mov.b	#00H,R0H
	divu.b	#05H
	cmp.b	R1L,R0L
	jeq	L1051
L1165:
	._line	889
	._block
	._line	890
	mova	-20[FB],R1	;  nDate 
	._inspect	'S', 'c', "Save_5Min_Index", "$Save_5Min_Index", 'G', 0, 890
	jsr	$Save_5Min_Index
	._eblock
L1051:
	._line	893
	mov.w	-6[FB],_LoadRecord	;  nblock 
	._line	894
	mov.w	#_LoadRecord+16,A1
	mova	-20[FB],A0	;  nDate 
	mov.b	#00H,R1H
	mov.w	#0003H,R3
	smovf.w
	._line	895
	mov.b	#00H,_LoadRecord+21
	._line	899
	tst.b	#01H,_LoadRecord+39
	jz	L1079
	._line	900
	._block
	._line	901
	and.b	#0feH,_LoadRecord+39
	._line	902
	mova	-20[FB],R1	;  nDate 
	._inspect	'S', 'c', "SaveDayIndex", "$SaveDayIndex", 'G', 0, 902
	jsr	$SaveDayIndex
	._eblock
L1079:
	._line	911
	mov.w	-8[FB],R2	;  needsave 
	mov.b	-1[FB],R1L	;  nSaveFlag 
	._inspect	'S', 'c', "Save_SortIndex", "$Save_SortIndex", 'G', 0, 911
	jsr	$Save_SortIndex
	._line	913
	add.w	#0001H,_LoadRecord+22
	adcf.w	_LoadRecord+22+2
	._line	914
	mov.w	#5fdbH,-10[FB]	;  i 
	._line	915
	tst.b	#01H,_LoadRecord+22
	jz	L1089
	._line	916
	mov.w	#6043H,-10[FB]	;  i 
L1089:
	._line	917
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#001aH
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord,R2
	mov.w	-10[FB],R1	;  i 
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 917
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	919
	mov.w	#0000H,R0
	exitd	
E23:
	._eblock
M30:
	._efunc	M30
	._inspect	'F', 'd', "SaveLoadRecord", "_SaveLoadRecord", 'G', 777, 0, 00h, 0
	._inspect	'F', 't', "SaveLoadRecord", 'G', 410
	._inspect	'V', 'r', "MainSoftDate", 'G', 795, 7, 0, 0, 00h
	._inspect	'V', 'r', "MainSoftDate", 'G', 797, 7, 0, 0, 00h
	._inspect	'V', 'r', "MainSoftDate", 'G', 799, 7, 0, 0, 00h
	._inspect	'V', 'r', "Meter_Parameter", 'G', 802, 623, 0, 0, 00h
	._inspect	'F', 'r', "CompareBytes", "$CompareBytes", 'G', 802, 0, 00h, 0
	._inspect	'F', 'r', "NeedToRecord", "$NeedToRecord", 'G', 807, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 811, 46, 0, 0, 00h
	._inspect	'F', 'r', "CompareBytes", "$CompareBytes", 'G', 811, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 817, 46, 0, 0, 01000000h
	._inspect	'F', 'r', "Find_First_Record", "$Find_First_Record", 'G', 820, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 821, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 822, 1280, 0, 0, 00h
	._inspect	'F', 'r', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 822, 0, 00h, 0
	._inspect	'F', 'r', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 824, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 828, 46, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 833, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 834, 1280, 0, 0, 00h
	._inspect	'F', 'r', "ComposeRecord", "$ComposeRecord", 'G', 834, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 837, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 839, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 845, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 847, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 857, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 859, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 860, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 860, 0, 00h, 0
	._inspect	'F', 'r', "Sector_Erase", "_Sector_Erase", 'G', 862, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 865, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Write_Page", "$Write_Page", 'G', 865, 0, 00h, 0
	._inspect	'F', 'r', "Change_SortAddr", "$Change_SortAddr", 'G', 870, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 876, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 876, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 876, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 876, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 878, 46, 0, 0, 01000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 881, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 888, 46, 0, 0, 00h
	._inspect	'F', 'r', "My_Memcmp", "$My_Memcmp", 'G', 888, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 888, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 888, 46, 0, 0, 00h
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 888, 0, 00h, 0
	._inspect	'F', 'r', "Save_5Min_Index", "$Save_5Min_Index", 'G', 890, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 893, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 894, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 895, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 899, 46, 0, 0, 01000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 901, 46, 0, 0, 01000000h
	._inspect	'F', 'r', "SaveDayIndex", "$SaveDayIndex", 'G', 902, 0, 00h, 0
	._inspect	'F', 'r', "Save_SortIndex", "$Save_SortIndex", 'G', 911, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 913, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 915, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 917, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 917, 0, 00h, 0
	._inspect	'F', 'e', "SaveLoadRecord", "_SaveLoadRecord", 'G', 6, 0


;## #	FUNCTION ComposeRecord
;## #	FRAME	AUTO	( rBuffer)	size  2,	offset -4
;## #	FRAME	AUTO	(     ind)	size  1,	offset -2
;## #	FRAME	AUTO	(    mask)	size  1,	offset -1
;## #  FRAME   ARG (rSaveFlag)  size   1,    offset 5
;## #  FRAME   ARG (   rDate)  size   2,    offset 6
;## #  REGISTER ARG    ( rBuffer)   size   2,   REGISTER R1
;## #	ARG Size(3)	Auto Size(4)	Context Size(5)

	._type	412,'O',3
	._type	413,'O',312
	._type	414,'x',3,3
	._type	414,'m','rBuffer',0,412
	._type	414,'m','rSaveFlag',0,3
	._type	414,'m','rDate',0,413
	._func	'ComposeRecord','G',4,414,$ComposeRecord,0
	._inspect	'F', 's', "ComposeRecord", "$ComposeRecord", 'G', 9
	.align
	._line	927
	.glb	$ComposeRecord
$ComposeRecord:
	enter	#04H
	mov.w	R1,-4[FB]	;  rBuffer  rBuffer 
	._block
	._type	415,'O',3
	._var	'rBuffer','A',415,-4
	._var	'rSaveFlag','A',3,5
	._type	416,'O',312
	._var	'rDate','A',416,6
	._var	'mask','A',3,-1
	._var	'ind','A',3,-2
	._line	934
	._block
	._type	417,'O',3
	._var	'rBuffer','R',417,6
	._eblock
	mov.w	R1,R2
	mov.w	6[FB],R1	;  rDate 
	._inspect	'S', 'c', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 0, 934
	jsr	$DateTimeNoSec5ByteTo4Byte
	._line	937
	mov.w	-4[FB],A0	;  rBuffer 
	mov.b	5[FB],0004H[A0]	;  rSaveFlag 
	._line	950
	mov.w	#0105H,-2[FB]	;  ind 
	._line	951
L1179:
	._line	952
	._block
	._line	953
	mov.b	-1[FB],R0L	;  mask 
	and.b	5[FB],R0L	;  rSaveFlag 
	jeq	L1233
	._line	954
	._block
	._line	955
	mov.b	-1[FB],R0L	;  mask 
	cmp.b	#01H,R0L
	jeq	L1191
	cmp.b	#02H,R0L
	jeq	L1193
	cmp.b	#04H,R0L
	jeq	L1195
	cmp.b	#08H,R0L
	jeq	L1197
	cmp.b	#10H,R0L
	jeq	L1199
	jmp	L1201
	._line	956
	._block
	._line	957
L1191:
	._line	958
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord1", "$ComposeRecord1", 'G', 0, 958
	jsr	$ComposeRecord1
	._line	959
	add.b	#14H,-2[FB]	;  ind 
	._line	960
	jmp	L1233
	._line	961
L1193:
	._line	962
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord2", "$ComposeRecord2", 'G', 0, 962
	jsr	$ComposeRecord2
	._line	963
	add.b	#2aH,-2[FB]	;  ind 
	._line	964
	jmp	L1233
	._line	965
L1195:
	._line	966
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord3", "$ComposeRecord3", 'G', 0, 966
	jsr	$ComposeRecord3
	._line	967
	add.b	#08H,-2[FB]	;  ind 
	._line	968
	jmp	L1233
	._line	969
L1197:
	._line	970
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord4", "$ComposeRecord4", 'G', 0, 970
	jsr	$ComposeRecord4
	._line	971
	add.b	#08H,-2[FB]	;  ind 
	._line	972
	shl.b	#01H,-1[FB]	;  mask 
	._line	973
L1199:
	._line	974
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord5", "$ComposeRecord5", 'G', 0, 974
	jsr	$ComposeRecord5
	._line	975
	add.b	#10H,-2[FB]	;  ind 
	._line	976
	jmp	L1233
	._line	977
L1201:
	._line	978
	mov.b	-2[FB],R1L	;  ind 
	mov.b	#00H,R1H
	add.w	-4[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "ComposeRecord6", "$ComposeRecord6", 'G', 0, 978
	jsr	$ComposeRecord6
	._line	979
	add.b	#06H,-2[FB]	;  ind 
	._eblock
	._eblock
L1233:
	._line	984
	shl.b	#01H,-1[FB]	;  mask 
	._eblock
	._line	985
	cmp.b	#40H,-1[FB]	;  mask 
	jltu	L1179
	._line	988
	mov.b	#00H,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	._line	989
	mov.b	#00H,R0H	;  i 
	._eblock
	._block
	._var	'sum','R',3,1
	._var	'i','R',3,2
L1213:
	._line	989
	cmp.b	-2[FB],R0H	;  ind  i 
	jgeu	L1217
	._eblock
	._line	990
	._block
	._block
	._var	'sum','R',3,1
	._var	'i','R',3,2
	._line	991
	mov.b	R0H,A0
	add.w	-4[FB],A0	;  rBuffer 
	add.b	[A0],R0L	;  sum 
	._eblock
	inc.b	R0H	;  i 
	jmp	L1213
	._eblock
L1217:
	._block
	._var	'sum','R',3,1
	._line	993
	mov.b	-2[FB],A0	;  ind 
	add.w	-4[FB],A0	;  rBuffer 
	mov.b	R0L,[A0]	;  sum 
	._eblock
	._line	995
	mov.b	-2[FB],R0L	;  ind 
	inc.b	R0L
	exitd	
E24:
	._eblock
M31:
	._efunc	M31
	._inspect	'F', 'd', "ComposeRecord", "$ComposeRecord", 'G', 927, 0, 00h, 0
	._inspect	'F', 't', "ComposeRecord", 'G', 414
	._inspect	'F', 'r', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 934, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord1", "$ComposeRecord1", 'G', 958, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord2", "$ComposeRecord2", 'G', 962, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord3", "$ComposeRecord3", 'G', 966, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord4", "$ComposeRecord4", 'G', 970, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord5", "$ComposeRecord5", 'G', 974, 0, 00h, 0
	._inspect	'F', 'r', "ComposeRecord6", "$ComposeRecord6", 'G', 978, 0, 00h, 0
	._inspect	'F', 'e', "ComposeRecord", "$ComposeRecord", 'G', 0, 0

	._inspect	'V', 'd', "Clase_Length", "_Clase_Length", 'G', 1002, 6, 0, 0, 00h

;## #	FUNCTION GetRecordLength
;## #	FRAME	AUTO	(   nMask)	size  1,	offset -1
;## #  REGISTER ARG    (   rMode)   size   1,   REGISTER R1L
;## #	ARG Size(0)	Auto Size(1)	Context Size(5)

	._type	418,'x',3,1
	._type	418,'m','rMode',0,3
	._func	'GetRecordLength','G',1,418,$GetRecordLength,0
	._inspect	'F', 's', "GetRecordLength", "$GetRecordLength", 'G', 6
	.align
	._line	1005
	.glb	$GetRecordLength
$GetRecordLength:
	enter	#01H
	._block
	._var	'rMode','A',3,0
	._var	'nMask','A',3,-1
	._line	1011
	._block
	._var	'rMode','R',3,3
	mov.b	#05H,R0H	;  result 
	._eblock
	._block
	._var	'result','R',3,2
	._var	'rMode','R',3,3
	._line	1012
	mov.b	#20H,-1[FB]	;  nMask 
	._line	1013
	mov.b	#00H,R1H	;  i 
	._eblock
	._block
	._var	'result','R',3,2
	._var	'rMode','R',3,3
	._var	'i','R',3,4
	._eblock
	mov.b	R1H,R0L	;  i  i 
	._block
	._var	'i','R',3,1
	._var	'result','R',3,2
	._var	'rMode','R',3,3
L1235:
	._eblock
	._line	1014
	._block
	._block
	._var	'i','R',3,1
	._var	'result','R',3,2
	._var	'rMode','R',3,3
	._line	1015
	mov.b	R1L,R1H	;  rMode  rMode 
	._eblock
	and.b	-1[FB],R1L	;  nMask 
	._block
	._var	'i','R',3,1
	._var	'result','R',3,2
	._var	'rMode','R',3,4
	jeq	L1247
	._eblock
	._line	1016
	._block
	._block
	._var	'i','R',3,1
	._var	'result','R',3,2
	._var	'rMode','R',3,4
	._line	1017
	mov.b	R0L,A0
	lde.b	_Clase_Length[A0],R1L
	add.b	R1L,R0H	;  result 
	._eblock
L1247:
	._line	1019
	shl.b	#-1,-1[FB]	;  nMask 
	._eblock
	inc.b	R0L	;  i 
	mov.b	R1H,R1L	;  rMode  rMode 
	._eblock
	cmp.b	#06H,R0L	;  i 
	jltu	L1235
	._block
	._var	'result','R',3,2
	._var	'rMode','R',3,3
	._line	1022
	btst	03H,R1
	jz	L1301
	btst	04H,R1
	jnz	L1301
	._eblock
	._block
	._var	'result','R',3,2
	._line	1023
	add.b	#10H,R0H	;  result 
L1301:
	._line	1024
	mov.b	R0H,R0L	;  result  result 
	._eblock
	exitd	
E25:
	._eblock
M32:
	._efunc	M32
	._inspect	'F', 'd', "GetRecordLength", "$GetRecordLength", 'G', 1005, 0, 00h, 0
	._inspect	'F', 't', "GetRecordLength", 'G', 418
	._inspect	'V', 'r', "Clase_Length", 'G', 1017, 6, 0, 0, 00h
	._inspect	'F', 'e', "GetRecordLength", "$GetRecordLength", 'G', 0, 0


;## #	FUNCTION InitSIO4
;## #	FRAME	AUTO	(ManufacturerID)	size  1,	offset -2
;## #	FRAME	AUTO	(DeviceID)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(2)	Context Size(5)

	._type	419,'v'
	._type	420,'x',16,1
	._type	420,'m','',0,419
	._func	'InitSIO4','G',2,420,_InitSIO4,0
	._inspect	'F', 's', "InitSIO4", "_InitSIO4", 'G', 7
	.align
	._line	1031
	.glb	_InitSIO4
_InitSIO4:
	enter	#02H
	._block
	._var	'result','A',16,0
	._var	'ManufacturerID','A',3,-2
	._var	'DeviceID','A',3,-1
	._line	1039
	bset	2,_prcr_addr
	._line	1040
	mov.b	#0e9H,_s4c_addr
	._line	1041
	bset	2,_prcr_addr
	._line	1042
	mov.b	#00H,_s4brg_addr
	._line	1044
	bset	2,_prcr_addr
	._line	1046
	bset	0,_pd0_addr
	._line	1048
	._inspect	'S', 'c', "Read_Status_Register", "_Read_Status_Register", 'G', 0, 1048
	jsr	_Read_Status_Register
	._block
	._var	'Status_Register','R',3,1
	._line	1049
	and.b	#0cH,R0L
	jz	L1303
	._eblock
	._line	1050
	mov.b	#00H,R1L
	._inspect	'S', 'c', "Write_Status_Register", "$Write_Status_Register", 'G', 0, 1050
	jsr	$Write_Status_Register
L1303:
	._line	1052
	mova	-1[FB],R2	;  DeviceID 
	mova	-2[FB],R1	;  ManufacturerID 
	._inspect	'S', 'c', "ReadID", "$ReadID", 'G', 0, 1052
	jsr	$ReadID
	._line	1054
	mov.w	#0000H,R0
	exitd	
E26:
	._eblock
M33:
	._efunc	M33
	._inspect	'F', 'd', "InitSIO4", "_InitSIO4", 'G', 1031, 0, 00h, 0
	._inspect	'F', 't', "InitSIO4", 'G', 420
	._inspect	'V', 'r', "prcr_addr", 'G', 1039, 1, 1, 0, 04h
	._inspect	'V', 'r', "s4c_addr", 'G', 1040, 1, 1, 0, 00h
	._inspect	'V', 'r', "prcr_addr", 'G', 1041, 1, 1, 0, 04h
	._inspect	'V', 'r', "s4brg_addr", 'G', 1042, 1, 1, 0, 00h
	._inspect	'V', 'r', "prcr_addr", 'G', 1044, 1, 1, 0, 04h
	._inspect	'V', 'r', "pd0_addr", 'G', 1046, 1, 1, 0, 01h
	._inspect	'F', 'r', "Read_Status_Register", "_Read_Status_Register", 'G', 1048, 0, 00h, 0
	._inspect	'F', 'r', "Write_Status_Register", "$Write_Status_Register", 'G', 1050, 0, 00h, 0
	._inspect	'F', 'r', "ReadID", "$ReadID", 'G', 1052, 0, 00h, 0
	._inspect	'F', 'e', "InitSIO4", "_InitSIO4", 'G', 0, 0


;## #	FUNCTION FindRecord
;## #	FRAME	AUTO	(  req_tm)	size  6,	offset -13
;## #	FRAME	AUTO	( min_blk)	size  2,	offset -7
;## #	FRAME	AUTO	(nReadPage)	size  2,	offset -5
;## #	FRAME	AUTO	(   rPage)	size  2,	offset -3
;## #	FRAME	AUTO	(     min)	size  1,	offset -1
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R2
;## #	ARG Size(1)	Auto Size(13)	Context Size(5)

	._type	421,'O',312
	._type	422,'O',18
	._type	423,'x',16,3
	._type	423,'m','rDate',0,421
	._type	423,'m','rPage',0,422
	._type	423,'m','sort',0,3
	._func	'FindRecord','G',13,423,$FindRecord,0
	._inspect	'F', 's', "FindRecord", "$FindRecord", 'G', 18
	.align
	._line	1063
	.glb	$FindRecord
$FindRecord:
	enter	#0dH
	mov.w	R2,-3[FB]	;  rPage  rPage 
	._block
	._type	424,'O',312
	._var	'rDate','A',424,0
	._type	425,'O',18
	._var	'rPage','A',425,-3
	._var	'sort','A',3,5
	._var	'min_blk','A',18,-7
	._var	'nReadPage','A',18,-5
	._var	'req_tm','A',312,-13
	._var	'min','A',3,-1
	._line	1070
	._block
	._type	426,'O',312
	._var	'rDate','R',426,6
	push.b	#06H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	R1,R2
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 1070
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	1071
	mov.b	-9[FB],R1L	;  req_tm 
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 1071
	jsr	$OB_H
	mov.b	R0L,-1[FB]	;  min 
	._line	1072
	mov.b	#00H,R0H
	divu.b	#05H
	mul.b	#05H,R0L
	mov.b	R0L,-1[FB]	;  min 
	._line	1073
	mov.w	#0ffffH,-5[FB]	;  nReadPage 
	._line	1074
L1307:
	cmp.b	#3cH,-1[FB]	;  min 
	jgeu	L1309
	._line	1075
	._block
	._line	1076
	mova	-7[FB],R2	;  min_blk 
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 0, 1076
	jsr	$get_5min_idx_by_time
	._block
	._var	'ret','R',16,5
	._line	1077
	cmp.w	#0000H,R0	;  ret 
	jne	L1343
	._eblock
	._line	1078
	._block
	._line	1079
	._inspect	'S', 'p', 2
	pusha	-5[FB]	;  nReadPage 
	push.w	-7[FB]	;  min_blk 
	._inspect	'S', 'p', 2
	push.b	#01H
	._inspect	'S', 'p', 1
	push.w	-9[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-11[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-13[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	mov.b	5[FB],R1L	;  sort 
	._inspect	'S', 'c', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 0, 1079
	jsr	$find_record_in_cur_5min_frm_min_idx
	._inspect	'S', 'p', -11
	add.b	#0bH,SP
	._block
	._var	'ret','R',16,5
	._line	1080
	cmp.w	#0000H,R0	;  ret 
	jne	L1343
	._eblock
	._line	1081
	._block
	._line	1082
	mov.w	-3[FB],A0	;  rPage 
	mov.w	-5[FB],[A0]	;  nReadPage 
	._line	1083
	mov.w	#0000H,R0
	exitd	
	._eblock
	._eblock
L1343:
	._line	1087
	add.b	#05H,-1[FB]	;  min 
	._line	1088
	mov.b	-1[FB],R1L	;  min 
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 1088
	jsr	$OH_B
	mov.b	R0L,-9[FB]	;  req_tm 
	._eblock
	._line	1089
	jmp	L1307
L1309:
	._line	1090
	mov.w	#0ffffH,R0
	exitd	
E27:
	._eblock
M34:
	._efunc	M34
	._inspect	'F', 'd', "FindRecord", "$FindRecord", 'G', 1063, 0, 00h, 0
	._inspect	'F', 't', "FindRecord", 'G', 423
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 1070, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 1071, 0, 00h, 0
	._inspect	'F', 'r', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 1076, 0, 00h, 0
	._inspect	'F', 'r', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 1079, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 1088, 0, 00h, 0
	._inspect	'F', 'e', "FindRecord", "$FindRecord", 'G', 11, 0


;## #	FUNCTION get_hour_in_year
;## #	FRAME	AUTO	(nHoursTotal)	size  2,	offset -5
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -3
;## #	FRAME	AUTO	(     tmp)	size  1,	offset -1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(5)	Context Size(5)

	._type	427,'O',312
	._type	428,'x',18,1
	._type	428,'m','rDate',0,427
	._func	'get_hour_in_year','G',5,428,$get_hour_in_year,0
	._inspect	'F', 's', "get_hour_in_year", "$get_hour_in_year", 'G', 10
	.align
	._line	1208
	.glb	$get_hour_in_year
$get_hour_in_year:
	enter	#05H
	mov.w	R1,-3[FB]	;  rDate  rDate 
	._block
	._type	429,'O',312
	._var	'rDate','A',429,-3
	._var	'nHoursTotal','A',18,-5
	._var	'tmp','A',3,-1
	._line	1212
	mov.w	#0000H,-5[FB]	;  nHoursTotal 
	._line	1213
	mova	-1[FB],R2	;  tmp 
	mov.w	-3[FB],A0	;  rDate 
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 1213
	jsr	$BCD2Byte
	._line	1214
	mov.b	-1[FB],A0	;  tmp 
	dec.w	A0
	shl.w	#01H,A0
	lde.w	_day_num[A0],R0
	mul.w	#0018H,R0
	mov.w	R0,-5[FB]	;  nHoursTotal 
	._line	1215
	mova	-1[FB],R2	;  tmp 
	mov.w	-3[FB],A0	;  rDate 
	mov.b	0002H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 1215
	jsr	$BCD2Byte
	._line	1216
	mov.b	-1[FB],R0L	;  tmp 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mul.w	#0018H,R0
	add.w	R0,-5[FB]	;  nHoursTotal 
	._line	1217
	mova	-1[FB],R2	;  tmp 
	mov.w	-3[FB],A0	;  rDate 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 1217
	jsr	$BCD2Byte
	._line	1218
	mov.b	-1[FB],R0L	;  tmp 
	mov.b	#00H,R0H
	add.w	-5[FB],R0	;  nHoursTotal 
	._line	1220
	exitd	
E28:
	._eblock
M35:
	._efunc	M35
	._inspect	'F', 'd', "get_hour_in_year", "$get_hour_in_year", 'G', 1208, 0, 00h, 0
	._inspect	'F', 't', "get_hour_in_year", 'G', 428
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 1213, 0, 00h, 0
	._inspect	'V', 'r', "day_num", 'G', 1214, 24, 0, 0, 00h
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 1215, 0, 00h, 0
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 1217, 0, 00h, 0
	._inspect	'F', 'e', "get_hour_in_year", "$get_hour_in_year", 'G', 0, 0


;## #	FUNCTION Save_5Min_Index
;## #	FRAME	AUTO	(FlashAddrstart)	size  4,	offset -16
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -12
;## #	FRAME	AUTO	(   nByte)	size  2,	offset -8
;## #	FRAME	AUTO	(  mblock)	size  2,	offset -6
;## #	FRAME	AUTO	(hour_sec)	size  2,	offset -8
;## #	FRAME	AUTO	(nHoursTotal)	size  2,	offset -12
;## #	FRAME	AUTO	(  nblock)	size  2,	offset -4
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -2
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(16)	Context Size(5)

	._type	430,'O',312
	._type	431,'x',16,1
	._type	431,'m','rDate',0,430
	._func	'Save_5Min_Index','G',16,431,$Save_5Min_Index,0
	._inspect	'F', 's', "Save_5Min_Index", "$Save_5Min_Index", 'G', 21
	.align
	._line	1225
	.glb	$Save_5Min_Index
$Save_5Min_Index:
	enter	#010H
	mov.w	R1,-2[FB]	;  rDate  rDate 
	._block
	._type	432,'O',312
	._var	'rDate','A',432,-2
	._var	'nHoursTotal','A',18,-12
	._var	'nPage','A',18,0
	._var	'nByte','A',18,-8
	._var	'FlashAddr','A',288,-12
	._var	'FlashAddrstart','A',288,-16
	._var	'hour_sec','A',18,-8
	._var	'part1','A',3,0
	._var	'nblock','A',18,-4
	._var	'mblock','A',18,-6
	._line	1240
	mov.w	_LoadRecord+2,-4[FB]	;  nblock 
	._line	1242
	mov.w	-2[FB],R1	;  rDate 
	._inspect	'S', 'c', "get_hour_in_year", "$get_hour_in_year", 'G', 0, 1242
	jsr	$get_hour_in_year
	mov.w	R0,-12[FB]	;  nHoursTotal 
	._line	1243
	mov.w	-2[FB],A0	;  rDate 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 1243
	jsr	$OB_H
	._block
	._var	'minute','R',3,1
	._line	1246
	mov.b	R0L,R1L	;  minute  minute 
	._eblock
	mov.w	-12[FB],R0	;  nHoursTotal 
	mov.w	#0000H,R2
	divu.w	#002aH
	._block
	._var	'minute','R',3,3
	mov.w	R0,-8[FB]	;  hour_sec 
	._line	1247
	mov.w	-12[FB],R0	;  nHoursTotal 
	mov.w	#0000H,R2
	divu.w	#002aH
	mov.w	R2,A0
	._eblock
	mul.w	#0018H,A0	;  hour_addr 
	._block
	._var	'minute','R',3,3
	._var	'hour_addr','R',18,9
	._line	1248
	mov.b	R1L,R0L	;  minute  minute 
	._eblock
	mov.b	#00H,R0H
	divu.b	#05H
	._block
	._var	'hour_addr','R',18,9
	mov.b	#00H,R0H
	shl.w	#01H,R0
	add.w	R0,A0	;  min_addr 
	._eblock
	._block
	._var	'min_addr','R',18,9
	._line	1250
	mov.w	-8[FB],R0	;  hour_sec 
	mov.w	#0000H,R2
	add.w	#0300H,R0
	adcf.w	R2
	shl.l	#8H,R2R0
	shl.l	#04H,R2R0
	and.w	#0fffH,-12[FB]	;  FlashAddr 
	and.w	#0f000H,R0
	or.w	R0,-12[FB]	;  FlashAddr 
	mov.w	R2,-12+2[FB]	;  FlashAddr 
	._line	1251
	mov.w	A0,R0
	mov.w	#0000H,R2
	._eblock
	and.w	#0f000H,-12[FB]	;  FlashAddr 
	and.w	#0fffH,R0
	or.w	R0,-12[FB]	;  FlashAddr 
	._line	1253
	tst.w	#0fffH,-12[FB]	;  FlashAddr 
	jnz	L1345
	._line	1254
	._block
	._line	1255
	push.w	-12+2[FB]	;  FlashAddr 
	push.w	-12[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Sector_Erase", "_Sector_Erase", 'G', 0, 1255
	jsr	_Sector_Erase
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._line	1256
	jmp	L1401
	._line	1257
L1345:
	._line	1258
	._block
	._line	1259
	push.w	#0002H
	._inspect	'S', 'p', 2
	mova	-6[FB],R2	;  mblock 
	push.w	-12+2[FB]	;  FlashAddr 
	push.w	-12[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 1259
	jsr	$Read_Data_Bytes
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	1260
	cmp.w	#0ffffH,-6[FB]	;  mblock 
	jeq	L1401
	._line	1261
	._block
	._line	1262
	mov.w	-12[FB],-16[FB]	;  FlashAddr  FlashAddrstart 
	mov.w	-12+2[FB],-16+2[FB]	;  FlashAddr  FlashAddrstart 
	._line	1263
	and.w	#0f000H,-16[FB]	;  FlashAddrstart 
	._line	1264
	mov.w	#0000H,-8[FB]	;  nByte 
L1355:
	._line	1265
	._block
	._line	1266
	push.w	#0100H
	._inspect	'S', 'p', 2
	mov.w	-16[FB],R0	;  FlashAddrstart 
	mov.w	-16+2[FB],R2	;  FlashAddrstart 
	and.w	#0fffH,R0
	mov.w	#0000H,R2
	mov.w	R0,R2
	mov.w	#_Co,R0
	add.w	R0,R2
	push.w	-16+2[FB]	;  FlashAddrstart 
	push.w	-16[FB]	;  FlashAddrstart 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 1266
	jsr	$Read_Data_Bytes
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	1267
	add.w	#0100H,-16[FB]	;  FlashAddrstart 
	adcf.w	-16+2[FB]	;  FlashAddrstart 
	._eblock
	add.w	#0001H,-8[FB]	;  nByte 
	cmp.w	#0004H,-8[FB]	;  nByte 
	jltu	L1355
	._line	1269
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 1269
	jsr	_FeedWatchdog
	._line	1270
	._inspect	'S', 'c', "CheckPowerDown", "_CheckPowerDown", 'G', 0, 1270
	jsr	_CheckPowerDown
	._line	1271
	mov.w	-12[FB],R0	;  FlashAddr 
	mov.w	-12+2[FB],R2	;  FlashAddr 
	and.w	#0fffH,R0
	mov.w	#0000H,R2
	mov.w	R0,A0
	mov.w	-4[FB],_Co[A0]	;  nblock 
	._line	1272
	mov.w	-12[FB],R0	;  FlashAddr 
	mov.w	-12+2[FB],R2	;  FlashAddr 
	and.w	#0fffH,R0
	mov.w	#0000H,R2
	add.w	#0002H,R0
	mov.w	R0,-8[FB]	;  nByte 
L1367:
	._line	1272
	cmp.w	#0400H,-8[FB]	;  nByte 
	jgeu	L1371
	._line	1273
	mov.w	-8[FB],A0	;  nByte 
	mov.b	#0ffH,_Co[A0]
	add.w	#0001H,-8[FB]	;  nByte 
	jmp	L1367
L1371:
	._line	1274
	and.w	#0f000H,-16[FB]	;  FlashAddrstart 
	._line	1275
	push.w	-12+2[FB]	;  FlashAddr 
	push.w	-12[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Sector_Erase", "_Sector_Erase", 'G', 0, 1275
	jsr	_Sector_Erase
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	1276
	mov.w	#0000H,-8[FB]	;  nByte 
L1379:
	._line	1277
	._block
	._line	1278
	push.w	#0100H
	._inspect	'S', 'p', 2
	mov.w	-16[FB],R0	;  FlashAddrstart 
	mov.w	-16+2[FB],R2	;  FlashAddrstart 
	and.w	#0fffH,R0
	mov.w	#0000H,R2
	mov.w	R0,R2
	mov.w	#_Co,R0
	add.w	R0,R2
	push.w	-16+2[FB]	;  FlashAddrstart 
	push.w	-16[FB]	;  FlashAddrstart 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Write_Page", "$Write_Page", 'G', 0, 1278
	jsr	$Write_Page
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	cmp.w	#0ffffH,R0
	jne	L1391
	._line	1279
	mov.w	#0ffffH,R0
	exitd	
L1391:
	._line	1280
	add.w	#0100H,-16[FB]	;  FlashAddrstart 
	adcf.w	-16+2[FB]	;  FlashAddrstart 
	._eblock
	add.w	#0001H,-8[FB]	;  nByte 
	cmp.w	#0004H,-8[FB]	;  nByte 
	jltu	L1379
	._line	1282
	mov.w	#0000H,R0
	exitd	
	._eblock
L1401:
	._eblock
	._line	1286
	push.w	#0002H
	._inspect	'S', 'p', 2
	mova	-4[FB],R2	;  nblock 
	push.w	-12+2[FB]	;  FlashAddr 
	push.w	-12[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Write_Page", "$Write_Page", 'G', 0, 1286
	jsr	$Write_Page
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	cmp.w	#0000H,R0
	stzx	#00H,#0ffH,R0L
	mov.b	R0L,R0H
	._line	1287
	exitd	
E29:
	._eblock
M36:
	._efunc	M36
	._inspect	'F', 'd', "Save_5Min_Index", "$Save_5Min_Index", 'G', 1225, 0, 00h, 0
	._inspect	'F', 't', "Save_5Min_Index", 'G', 431
	._inspect	'V', 'r', "LoadRecord", 'G', 1240, 46, 0, 0, 00h
	._inspect	'F', 'r', "get_hour_in_year", "$get_hour_in_year", 'G', 1242, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 1243, 0, 00h, 0
	._inspect	'F', 'r', "Sector_Erase", "_Sector_Erase", 'G', 1255, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 1259, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1266, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 1266, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 1269, 0, 00h, 0
	._inspect	'F', 'r', "CheckPowerDown", "_CheckPowerDown", 'G', 1270, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1271, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1273, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Sector_Erase", "_Sector_Erase", 'G', 1275, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1278, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Write_Page", "$Write_Page", 'G', 1278, 0, 00h, 0
	._inspect	'F', 'r', "Write_Page", "$Write_Page", 'G', 1286, 0, 00h, 0
	._inspect	'F', 'e', "Save_5Min_Index", "$Save_5Min_Index", 'G', 6, 0


;## #	FUNCTION get_5min_idx_by_time
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -10
;## #	FRAME	AUTO	(hour_sec)	size  2,	offset -10
;## #	FRAME	AUTO	(nHoursTotal)	size  2,	offset -6
;## #	FRAME	AUTO	(     blk)	size  2,	offset -4
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -2
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #  REGISTER ARG    (     blk)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(10)	Context Size(5)

	._type	433,'O',312
	._type	434,'O',18
	._type	435,'x',16,2
	._type	435,'m','rDate',0,433
	._type	435,'m','blk',0,434
	._func	'get_5min_idx_by_time','G',10,435,$get_5min_idx_by_time,0
	._inspect	'F', 's', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 15
	.align
	._line	1293
	.glb	$get_5min_idx_by_time
$get_5min_idx_by_time:
	enter	#0aH
	mov.w	R1,-2[FB]	;  rDate  rDate 
	mov.w	R2,-4[FB]	;  blk  blk 
	._block
	._type	436,'O',312
	._var	'rDate','A',436,-2
	._type	437,'O',18
	._var	'blk','A',437,-4
	._var	'nHoursTotal','A',18,-6
	._var	'nPage','A',18,0
	._var	'nByte','A',18,0
	._var	'FlashAddr','A',288,-10
	._var	'FlashAddrstart','A',288,0
	._var	'hour_sec','A',18,-10
	._var	'part1','A',3,0
	._var	'nblock','A',18,0
	._var	'mblock','A',18,0
	._line	1308
	mov.w	-2[FB],R1	;  rDate 
	._inspect	'S', 'c', "get_hour_in_year", "$get_hour_in_year", 'G', 0, 1308
	jsr	$get_hour_in_year
	mov.w	R0,-6[FB]	;  nHoursTotal 
	._line	1309
	mov.w	-2[FB],A0	;  rDate 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 1309
	jsr	$OB_H
	._block
	._var	'minute','R',3,1
	._line	1312
	mov.b	R0L,R1L	;  minute  minute 
	._eblock
	mov.w	-6[FB],R0	;  nHoursTotal 
	mov.w	#0000H,R2
	divu.w	#002aH
	._block
	._var	'minute','R',3,3
	mov.w	R0,-10[FB]	;  hour_sec 
	._line	1313
	mov.w	-6[FB],R0	;  nHoursTotal 
	mov.w	#0000H,R2
	divu.w	#002aH
	mov.w	R2,A0
	._eblock
	mul.w	#0018H,A0	;  hour_addr 
	._block
	._var	'minute','R',3,3
	._var	'hour_addr','R',18,9
	._line	1314
	mov.b	R1L,R0L	;  minute  minute 
	._eblock
	mov.b	#00H,R0H
	divu.b	#05H
	._block
	._var	'hour_addr','R',18,9
	mov.b	#00H,R0H
	shl.w	#01H,R0
	add.w	R0,A0	;  min_addr 
	._eblock
	._block
	._var	'min_addr','R',18,9
	._line	1316
	mov.w	-10[FB],R0	;  hour_sec 
	mov.w	#0000H,R2
	add.w	#0300H,R0
	adcf.w	R2
	shl.l	#8H,R2R0
	shl.l	#04H,R2R0
	and.w	#0fffH,-10[FB]	;  FlashAddr 
	and.w	#0f000H,R0
	or.w	R0,-10[FB]	;  FlashAddr 
	mov.w	R2,-10+2[FB]	;  FlashAddr 
	._line	1317
	mov.w	A0,R0
	mov.w	#0000H,R2
	._eblock
	and.w	#0f000H,-10[FB]	;  FlashAddr 
	and.w	#0fffH,R0
	or.w	R0,-10[FB]	;  FlashAddr 
	._line	1319
	push.w	#0002H
	._inspect	'S', 'p', 2
	mov.w	-4[FB],R2	;  blk 
	push.w	-10+2[FB]	;  FlashAddr 
	push.w	-10[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 0, 1319
	jsr	$Read_Data_Bytes
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	1320
	mov.w	-4[FB],A0	;  blk 
	cmp.w	#0f600H,[A0]
	jltu	L1437
	._line	1321
	mov.w	#0ffffH,R0
	exitd	
	._line	1322
L1437:
	._line	1323
	mov.w	#0000H,R0
	exitd	
E30:
	._eblock
M37:
	._efunc	M37
	._inspect	'F', 'd', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 1293, 0, 00h, 0
	._inspect	'F', 't', "get_5min_idx_by_time", 'G', 435
	._inspect	'F', 'r', "get_hour_in_year", "$get_hour_in_year", 'G', 1308, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 1309, 0, 00h, 0
	._inspect	'F', 'r', "Read_Data_Bytes", "$Read_Data_Bytes", 'G', 1319, 0, 00h, 0
	._inspect	'F', 'e', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 6, 0


;## #	FUNCTION PrepareCommunication
;## #	FRAME	AUTO	(Read_Data)	size  6,	offset -34
;## #	FRAME	AUTO	(Power_temp)	size  4,	offset -28
;## #	FRAME	AUTO	(  __TMP8)	size  2,	offset -24
;## #	FRAME	AUTO	(  __TMP7)	size  2,	offset -24
;## #	FRAME	AUTO	(  __TMP6)	size  2,	offset -24
;## #	FRAME	AUTO	(  __TMP5)	size  2,	offset -24
;## #	FRAME	AUTO	( Record5)	size  2,	offset -22
;## #	FRAME	AUTO	( Record4)	size  2,	offset -20
;## #	FRAME	AUTO	(temp_buf)	size  2,	offset -18
;## #	FRAME	AUTO	( pRecord)	size  2,	offset -16
;## #	FRAME	AUTO	(    pBuf)	size  2,	offset -14
;## #	FRAME	AUTO	(       i)	size  2,	offset -12
;## #	FRAME	AUTO	(nReadByte)	size  2,	offset -10
;## #	FRAME	AUTO	(     ret)	size  2,	offset -12
;## #	FRAME	AUTO	(nReadPage)	size  2,	offset -8
;## #	FRAME	AUTO	(rCommand)	size  2,	offset -6
;## #	FRAME	AUTO	(    mask)	size  1,	offset -4
;## #	FRAME	AUTO	(read_addr)	size  1,	offset -3
;## #	FRAME	AUTO	(Data_number)	size  1,	offset -2
;## #	FRAME	AUTO	(read_class)	size  1,	offset -1
;## #	FRAME	AUTO	(read_mode)	size  1,	offset -2
;## #  FRAME   ARG (      id)  size   4,    offset 5
;## #  FRAME   ARG ( rBuffer)  size   2,    offset 9
;## #  FRAME   ARG (    mode)  size   1,    offset 11
;## #  FRAME   ARG (   uartx)  size   1,    offset 12
;## #  REGISTER ARG    (rCommand)   size   2,   REGISTER R2
;## #	ARG Size(8)	Auto Size(34)	Context Size(5)

	._type	439,'Z',4,3
	._type	440,'Z',2,18
	._type	438,'U','ID',4
	._type	438,'m','d',439,0
	._type	438,'m','i',18,0
	._type	438,'m','new_i',440,0
	._type	438,'m','l',7,0
	._type	441,'O',3
	._type	442,'O',3
	._type	443,'x',16,5
	._type	443,'m','id',0,438
	._type	443,'m','rCommand',0,441
	._type	443,'m','rBuffer',0,442
	._type	443,'m','mode',0,3
	._type	443,'m','uartx',0,3
	._func	'PrepareCommunication','G',34,443,$PrepareCommunication,0
	._inspect	'F', 's', "PrepareCommunication", "$PrepareCommunication", 'G', 39
	.align
	._line	1407
	.glb	$PrepareCommunication
$PrepareCommunication:
	enter	#022H
	mov.w	R2,-6[FB]	;  rCommand  rCommand 
	._block
	._var	'id','A',438,5
	._type	444,'O',3
	._var	'rCommand','A',444,-6
	._type	445,'O',3
	._var	'rBuffer','A',445,9
	._var	'mode','A',3,11
	._var	'uartx','A',3,12
	._var	'read_mode','A',3,-2
	._var	'Data_number','A',3,-2
	._var	'read_class','A',3,-1
	._var	'read_addr','A',3,-3
	._var	'nReadPage','A',18,-8
	._var	'nReadByte','A',18,-10
	._var	'Sort_Len','A',18,0
	._var	'ret','A',16,-12
	._var	'i','A',16,-12
	._var	'Read_Data','A',312,-34
	._type	449,'g','Year',0,7,7
	._type	450,'g','Month',0,4,7
	._type	451,'g','Day',0,5,7
	._type	452,'g','Hour',0,5,7
	._type	453,'g','Minute',0,6,7
	._type	454,'g','',0,5,7
	._type	448,'S','',4
	._type	448,'m','Year',449,0
	._type	448,'m','Month',450,7
	._type	448,'m','Day',451,11
	._type	448,'m','Hour',452,16
	._type	448,'m','Minute',453,21
	._type	448,'m','',454,27
	._type	447,'U','DATE_TIMENOSEC_4BYTE',4
	._type	447,'m','l',7,0
	._type	447,'m','bit',448,0
	._type	446,'S','RECORD',5
	._type	446,'m','Save_DateTime',447,0
	._type	446,'m','Mode_Byte',3,4
	._type	455,'O',446
	._var	'pRecord','A',455,-16
	._type	456,'O',316
	._type	457,'O',329
	._type	458,'O',365
	._type	459,'O',375
	._var	'Record4','A',459,-20
	._type	460,'O',381
	._var	'Record5','A',460,-22
	._type	461,'O',387
	._type	462,'O',3
	._var	'pBuf','A',462,-14
	._type	463,'O',3
	._var	'temp_buf','A',463,-18
	._var	'mode_word','A',346,0
	._var	'Power_temp','A',20,-28
	._var	'mask','A',3,-4
	._line	1428
	cmp.w	#0000H,_LoadRecord
	jne	L2127
	cmp.w	#0000H,_LoadRecord+2
	jne	L2127
	._line	1429
	._block
	._line	1430
	mov.w	#0000H,R0
	exitd	
	._eblock
L2127:
	._line	1433
	cmp.b	#10H,7[FB]	;  id 
	jne	L1479
	._line	1434
	._block
	._line	1435
	push.w	11[FB]	;  mode 
	._inspect	'S', 'p', 2
	push.w	9[FB]	;  rBuffer 
	._inspect	'S', 'p', 2
	mov.w	-6[FB],R2	;  rCommand 
	push.w	7[FB]	;  id 
	._inspect	'S', 'p', 2
	push.w	5[FB]	;  id 
	._inspect	'S', 'p', 2
	._inspect	'S', 'c', "read_record_base_time_id", "$read_record_base_time_id", 'G', 0, 1435
	jsr	$read_record_base_time_id
	._inspect	'S', 'p', -8
	add.b	#08H,SP
	exitd	
	._eblock
L1479:
	._line	1439
	mov.b	5[FB],-2[FB]	;  id  read_mode 
	._line	1446
	mov.b	7[FB],R0L	;  id 
	jeq	L1491
	cmp.b	#01H,R0L
	jltu	L2125
	cmp.b	#06H,R0L
	jleu	L1493
L2125:
	._line	1447
	._block
	._line	1455
	mov.w	#0000H,R0
	exitd	
	._line	1448
L1491:
	mov.b	#3fH,-1[FB]	;  read_class 
	jmp	L1489
	._line	1449
L1493:
	._line	1454
	mov.b	7[FB],R1H	;  id 
	add.b	#-1,R1H
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,-1[FB]	;  read_class 
	._eblock
	._line	1456
L1489:
	._line	1457
	mov.b	11[FB],R0L	;  mode 
	jne	L1571
	._line	1458
	._block
	._line	1459
	mov.b	12[FB],A0	;  uartx 
	mov.w	A0,R2
	mul.w	#000dH,A0
	mov.w	#0000H,_Iterate_Tree_Flag+0009H[A0]
	._line	1460
	mov.w	#_Read_Count,R0
	add.w	R0,R2
	mov.w	-6[FB],A0	;  rCommand 
	mov.b	[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 1460
	jsr	$BCD2Byte
	cmp.w	#0000H,R0
	jpz	L1507
	._line	1461
	mov.w	#0000H,R0
	exitd	
L1507:
	._line	1463
	mov.b	12[FB],A0	;  uartx 
	mov.b	_Read_Count[A0],R0L
	jne	L1517
	._line	1464
	._block
	._line	1465
	and.b	#0f7H,_cx+141
	._line	1466
	mov.w	#0000H,R0
	exitd	
	._eblock
L1517:
	._line	1469
	mov.b	-2[FB],R0L	;  read_mode 
	cmp.b	#01H,R0L
	jeq	L1529
	cmp.b	#03H,R0L
	jeq	L1541
	mov.b	R0L,R0H
	jeq	L1543
	cmp.b	#02H,R0L
	jeq	L1545
	cmp.b	#04H,R0L
	jeq	L1557
	cmp.b	#05H,R0L
	jeq	L1559
	jmp	L1527
	._line	1470
	._block
	._line	1471
L1529:
	._line	1472
	mov.b	#00H,-29[FB]	;  Read_Data 
	._line	1473
	mov.w	-6[FB],A0	;  rCommand 
	mov.b	0001H[A0],-30[FB]	;  Read_Data 
	._line	1474
	mov.b	0002H[A0],-31[FB]	;  Read_Data 
	._line	1475
	mov.b	0003H[A0],-32[FB]	;  Read_Data 
	._line	1476
	mov.b	0004H[A0],-33[FB]	;  Read_Data 
	._line	1477
	mov.b	0005H[A0],-34[FB]	;  Read_Data 
	._line	1478
	mova	-34[FB],R1	;  Read_Data 
	._inspect	'S', 'c', "CheckTime", "$CheckTime", 'G', 0, 1478
	jsr	$CheckTime
	mov.b	R0L,R0H
	jne	L1531
	._line	1479
	._block
	._line	1480
	and.b	#0f7H,_cx+141
	._line	1481
	mov.w	#0000H,R0
	exitd	
	._eblock
L1531:
	._line	1483
	push.b	#00H
	._inspect	'S', 'p', 1
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-34[FB],R2	;  Read_Data 
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 0, 1483
	jsr	$Find_Data_Record_New
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.w	R0,-12[FB]	;  ret 
	._line	1484
	jmp	L1527
	._line	1485
L1541:
	._line	1486
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-8[FB],R2	;  nReadPage 
	mov.b	12[FB],R1L	;  uartx 
	mov.b	#00H,R1H
	._inspect	'S', 'c', "Find_Next_Record", "$Find_Next_Record", 'G', 0, 1486
	jsr	$Find_Next_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-12[FB]	;  ret 
	._line	1487
	jmp	L1527
	._line	1488
L1543:
	._line	1489
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "Find_First_Record", "$Find_First_Record", 'G', 0, 1489
	jsr	$Find_First_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-12[FB]	;  ret 
	._line	1490
	jmp	L1527
	._line	1491
L1545:
	._line	1492
	mov.b	12[FB],A0	;  uartx 
	cmp.b	#01H,_Read_Count[A0]
	jeq	L1547
	and.b	#0f7H,_cx+141
	mov.w	#0000H,R0
	exitd	
L1547:
	._line	1493
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "Find_Near_Record", "$Find_Near_Record", 'G', 0, 1493
	jsr	$Find_Near_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-12[FB]	;  ret 
	._line	1494
	jmp	L1527
	._line	1495
L1557:
	._line	1496
	mova	-8[FB],R2	;  nReadPage 
	mov.b	12[FB],R1L	;  uartx 
	mov.b	#00H,R1H
	._inspect	'S', 'c', "Find_Last_Record", "$Find_Last_Record", 'G', 0, 1496
	jsr	$Find_Last_Record
	mov.w	R0,-12[FB]	;  ret 
	._line	1497
	jmp	L1527
	._line	1498
L1559:
	._line	1499
	push.w	#0000H
	._inspect	'S', 'p', 2
	mova	-10[FB],R2	;  nReadByte 
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "Find_Addr_Record", "$Find_Addr_Record", 'G', 0, 1499
	jsr	$Find_Addr_Record
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	mov.w	R0,-12[FB]	;  ret 
	._eblock
	._line	1501
L1527:
	._line	1503
	cmp.w	#0000H,-12[FB]	;  ret 
	jeq	L2131
	._line	1504
	mov.w	#0000H,R0
	exitd	
	._eblock
	._line	1506
L1571:
	._line	1507
	._block
	._line	1508
	mov.w	-6[FB],A0	;  rCommand 
	mov.b	[A0],-2[FB]	;  Data_number 
	._line	1509
	mov.b	-2[FB],R0L	;  Data_number 
	mov.b	#00H,R0H
	mov.b	12[FB],A0	;  uartx 
	mov.w	A0,R1
	mul.w	#000dH,A0
	mov.w	_Iterate_Tree_Flag+0009H[A0],R2
	add.w	#0001H,R2
	cmp.w	R0,R2
	jne	L1601
	._line	1510
	._block
	._line	1511
	mov.w	R1,A0
	mov.b	_Read_Count[A0],R0L
	jeq	L1581
	._line	1512
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-8[FB],R2	;  nReadPage 
	mov.b	12[FB],R1L	;  uartx 
	mov.b	#00H,R1H
	._inspect	'S', 'c', "Find_Next_Record", "$Find_Next_Record", 'G', 0, 1512
	jsr	$Find_Next_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-12[FB]	;  ret 
	jmp	L1583
	._line	1513
L1581:
	._line	1514
	mov.w	#8000H,R0
	exitd	
L1583:
	._line	1515
	cmp.w	#0000H,-12[FB]	;  ret 
	jeq	L2131
	mov.w	#8000H,R0
	exitd	
	._eblock
	._line	1517
L1601:
	mov.b	-2[FB],R0L	;  Data_number 
	mov.b	#00H,R0H
	mov.b	12[FB],A0	;  uartx 
	mul.w	#000dH,A0
	cmp.w	R0,_Iterate_Tree_Flag+0009H[A0]
	jne	L1621
	._line	1518
	._block
	._line	1519
	mova	-8[FB],R2	;  nReadPage 
	mov.b	12[FB],R1L	;  uartx 
	mov.b	#00H,R1H
	._inspect	'S', 'c', "Find_Last_Record", "$Find_Last_Record", 'G', 0, 1519
	jsr	$Find_Last_Record
	mov.w	R0,-12[FB]	;  ret 
	._line	1520
	jeq	L2131
	mov.w	#8000H,R0
	exitd	
	._eblock
	._line	1523
L1621:
	._line	1524
	._block
	._line	1525
	mov.w	#8000H,R0
	exitd	
	._eblock
	._line	1526
L2131:
	._eblock
	._line	1530
	push.b	#01H
	._inspect	'S', 'p', 1
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1530
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0001H,R0
	jeq	L1631
	._line	1531
	mov.w	#0000H,R0
	exitd	
L1631:
	._line	1534
	cmp.b	#04H,_Co+1
	jgtu	L2055
	mov.b	_Co+1,R0L
	jne	L1641
L2055:
	._line	1535
	mov.w	#0000H,R0
	exitd	
L1641:
	._line	1536
	mov.b	7[FB],R0L	;  id 
	jeq	L2133
	._line	1537
	._block
	._line	1538
	mov.b	7[FB],R1H	;  id 
	add.b	#-1,R1H
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R0L
	and.b	_Co+6,R0L
	jne	L2133
	._line	1539
	mov.w	#0000H,R0
	exitd	
	._eblock
L2133:
	._line	1542
	mov.w	#_MainSoftDate,R2
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 0, 1542
	jsr	$CompDateTime4ByteAnd5Byte
	cmp.b	#00H,R0L
	jle	L1689
	._line	1543
	mov.w	#0000H,R0
	exitd	
L1689:
	._line	1545
	mov.b	12[FB],A0	;  uartx 
	shl.w	#01H,A0
	mov.w	-8[FB],_LoadRecord+40[A0]	;  nReadPage 
	._line	1546
	mov.b	_Co+6,R1L
	._inspect	'S', 'c', "GetRecordLength", "$GetRecordLength", 'G', 0, 1546
	jsr	$GetRecordLength
	mov.b	R0L,_Dat_Num
	._line	1548
	mov.b	#00H,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	._line	1549
	mov.w	#0000H,-12[FB]	;  i 
L1699:
	._line	1549
	mov.b	_Dat_Num,R1L
	mov.b	#00H,R1H
	cmp.w	R1,-12[FB]	;  i 
	jge	L1703
	._eblock
	._line	1550
	._block
	._block
	._var	'sum','R',3,1
	._line	1551
	mov.w	-12[FB],A0	;  i 
	add.w	#0002H,A0
	add.b	_Co[A0],R0L	;  sum 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	jmp	L1699
	._eblock
L1703:
	._block
	._var	'sum','R',3,1
	._line	1553
	mov.w	R1,A0
	._eblock
	cmp.b	_Co+2[A0],R0L	;  sum 
	jeq	L1711
	._line	1554
	._block
	._line	1555
	mov.w	9[FB],-14[FB]	;  rBuffer  pBuf 
	._line	1556
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0e0H,[A0]
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1557
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0e0H,[A0]
	add.w	#0001H,-14[FB]	;  pBuf 
	._eblock
	._line	1558
	jmp	L1713
	._line	1559
L1711:
	._line	1560
	._block
	._line	1563
	mov.w	#_Co+2,-16[FB]	;  pRecord 
	._line	1565
	mov.w	9[FB],-14[FB]	;  rBuffer  pBuf 
	._line	1566
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0a0H,[A0]
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1567
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0a0H,[A0]
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1568
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1570
	mov.w	-14[FB],R2	;  pBuf 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 1570
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	1571
	push.b	#05H
	._inspect	'S', 'p', 1
	mov.w	-14[FB],R1	;  pBuf 
	._inspect	'S', 'c', "ConverseString", "$ConverseString", 'G', 0, 1571
	jsr	$ConverseString
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	1572
	add.w	#0005H,-14[FB]	;  pBuf 
	._line	1575
	mov.w	#0701H,-4[FB]	;  mask 
	._line	1576
L1721:
	._line	1577
	._block
	._line	1578
	mov.w	-16[FB],A0	;  pRecord 
	mov.b	-4[FB],R0L	;  mask 
	and.b	0004H[A0],R0L
	jeq	L2151
	._line	1579
	._block
	._line	1580
	mov.b	-4[FB],R0L	;  mask 
	cmp.b	#01H,R0L
	jeq	L1733
	cmp.b	#02H,R0L
	jeq	L1757
	cmp.b	#04H,R0L
	jeq	L1821
	cmp.b	#08H,R0L
	jeq	L1833
	cmp.b	#10H,R0L
	jeq	L1875
	jmp	L1899
	._line	1581
	._block
	._line	1582
L1733:
	._line	1583
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record1 
	._block
	._type	464,'O',316
	._var	'Record1','R',464,5
	._line	1584
	add.b	#14H,-3[FB]	;  read_addr 
	._line	1585
	mov.b	-4[FB],R1L	;  mask 
	and.b	-1[FB],R1L	;  read_class 
	jeq	L2151
	._eblock
	._line	1586
	._block
	._block
	._type	465,'O',316
	._var	'Record1','R',465,5
	._line	1587
	mov.w	R0,-18[FB]	;  Record1  temp_buf 
	._eblock
	._line	1588
	mov.w	#0000H,-12[FB]	;  i 
L1735:
	._line	1589
	._block
	._line	1590
	mov.w	-12[FB],R0	;  i 
	mul.w	#0003H,R0
	mov.w	-18[FB],A0	;  temp_buf 
	add.w	R0,A0
	mov.b	[A0],R1L
	shl.b	#-4,R1L
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	R1L,[A0]
	._line	1591
	add.w	-18[FB],R0	;  temp_buf 
	mov.w	R0,A1
	mov.b	0001H[A1],R1L
	shl.b	#04H,R1L
	or.b	R1L,[A0]
	._line	1592
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1593
	mov.b	0001H[A1],R0L
	shl.b	#-4,R0L
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	R0L,[A0]
	._line	1594
	mov.b	0002H[A1],R0L
	shl.b	#04H,R0L
	or.b	R0L,[A0]
	._line	1595
	add.w	#0001H,-14[FB]	;  pBuf 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	cmp.w	#0003H,-12[FB]	;  i 
	jlt	L1735
	._line	1597
	add.w	#0009H,-18[FB]	;  temp_buf 
	._line	1598
	push.b	#0bH
	._inspect	'S', 'p', 1
	mov.w	-18[FB],R2	;  temp_buf 
	mov.w	-14[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 1598
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	1599
	add.w	#000bH,-14[FB]	;  pBuf 
	._eblock
	._line	1600
	jmp	L2151
	._line	1602
L1757:
	._line	1603
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record2 
	._block
	._type	466,'O',329
	._var	'Record2','R',466,5
	._line	1604
	add.b	#2aH,-3[FB]	;  read_addr 
	._line	1605
	mov.b	-4[FB],R1L	;  mask 
	and.b	-1[FB],R1L	;  read_class 
	jeq	L2151
	._eblock
	._line	1606
	._block
	._block
	._type	467,'O',329
	._var	'Record2','R',467,5
	._line	1607
	mov.w	#0000H,-12[FB]	;  i 
L1759:
	._eblock
	._line	1608
	._block
	._block
	._type	468,'O',329
	._var	'Record2','R',468,5
	._line	1609
	cmp.w	#0000H,-12[FB]	;  i 
	jne	L1771
	._line	1610
	mov.w	R0,R1	;  Record2  Record2 
	._eblock
	add.w	#000bH,R0
	._block
	._type	469,'O',329
	._var	'Record2','R',469,6
	mov.w	R0,-18[FB]	;  temp_buf 
	jmp	L2141
	._eblock
	._line	1611
L1771:
	._block
	._type	470,'O',329
	._var	'Record2','R',470,5
	cmp.w	#0003H,-12[FB]	;  i 
	jne	L1781
	._line	1612
	mov.w	R0,R1	;  Record2  Record2 
	._eblock
	add.w	#0002H,R0
	._block
	._type	471,'O',329
	._var	'Record2','R',471,6
	mov.w	R0,-18[FB]	;  temp_buf 
	jmp	L2141
	._eblock
	._line	1613
L1781:
	._block
	._type	472,'O',329
	._var	'Record2','R',472,5
	cmp.w	#000cH,-12[FB]	;  i 
	jne	L1791
	._line	1614
	mov.w	R0,R1	;  Record2  Record2 
	._eblock
	add.w	#0017H,R0
	._block
	._type	473,'O',329
	._var	'Record2','R',473,6
	mov.w	R0,-18[FB]	;  temp_buf 
	jmp	L2141
	._eblock
	._line	1615
L1791:
	._block
	._type	474,'O',329
	._var	'Record2','R',474,5
	cmp.w	#000fH,-12[FB]	;  i 
	jne	L1801
	._line	1616
	mov.w	R0,R1	;  Record2  Record2 
	._eblock
	add.w	#000eH,R0
	._block
	._type	475,'O',329
	._var	'Record2','R',475,6
	mov.w	R0,-18[FB]	;  temp_buf 
	._eblock
	mov.w	R1,R0	;  Record2  Record2 
	._block
	._type	476,'O',329
	._var	'Record2','R',476,5
L1801:
	._eblock
	mov.w	R0,R1	;  Record2  Record2 
	._block
	._type	477,'O',329
	._var	'Record2','R',477,6
L2141:
	._line	1617
	mov.w	-18[FB],A0	;  temp_buf 
	mov.w	-14[FB],A1	;  pBuf 
	mov.b	[A0],[A1]
	._line	1618
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1619
	add.w	#0001H,-18[FB]	;  temp_buf 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	mov.w	R1,R0	;  Record2  Record2 
	._eblock
	cmp.w	#0018H,-12[FB]	;  i 
	jlt	L1759
	._eblock
	._line	1621
	jmp	L2151
	._line	1623
L1821:
	._line	1624
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record3 
	._block
	._type	478,'O',365
	._var	'Record3','R',478,5
	._line	1625
	add.b	#08H,-3[FB]	;  read_addr 
	._line	1626
	mov.b	-4[FB],R1L	;  mask 
	and.b	-1[FB],R1L	;  read_class 
	jeq	L2151
	._eblock
	._line	1627
	._block
	._block
	._type	479,'O',365
	._var	'Record3','R',479,5
	._line	1628
	push.b	#08H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	-14[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 1628
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	1629
	add.w	#0008H,-14[FB]	;  pBuf 
	._eblock
	._line	1630
	jmp	L2151
	._line	1632
L1833:
	._line	1633
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-20[FB]	;  Record4 
	._line	1634
	add.b	#08H,-3[FB]	;  read_addr 
	._line	1635
	mov.b	-3[FB],R1L	;  read_addr 
	mov.b	#00H,R1H
	mov.w	#_Co,R2
	add.w	R2,R1
	mov.w	R1,-22[FB]	;  Record5 
	._line	1636
	mov.b	-4[FB],R1L	;  mask 
	and.b	-1[FB],R1L	;  read_class 
	jeq	L2151
	._line	1637
	._block
	._line	1638
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	-14[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	R0,A0
	push.w	2[A0]
	push.w	[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-24[FB]	;  __TMP5 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 1638
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 1638
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-24[FB],R2	;  __TMP5 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 1638
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	1639
	add.w	#0004H,-14[FB]	;  pBuf 
	._line	1640
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	-14[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	-20[FB],A0	;  Record4 
	push.w	0004H+2H[A0]
	push.w	0004H[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-24[FB]	;  __TMP6 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 1640
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 1640
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-24[FB],R2	;  __TMP6 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 1640
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	1641
	add.w	#0004H,-14[FB]	;  pBuf 
	._line	1642
	mov.w	#0000H,-12[FB]	;  i 
L1835:
	._line	1643
	._block
	._line	1644
	cmp.w	#0000H,-12[FB]	;  i 
	jne	L1847
	._line	1645
	mov.b	_Meter_Parameter+57,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	jmp	L1849
	._eblock
	._line	1646
L1847:
	._line	1647
	mov.b	_Meter_Parameter+58,R0L	;  sum 
	._block
	._var	'sum','R',3,1
L1849:
	._line	1649
	push.w	#8000H
	._inspect	'S', 'p', 2
	push.w	#0404H
	._inspect	'S', 'p', 2
	push.b	#01H
	._inspect	'S', 'p', 1
	push.b	R0L	;  sum 
	._inspect	'S', 'p', 1
	._eblock
	mova	-28[FB],R2	;  Power_temp 
	mov.w	-22[FB],R1	;  Record5 
	._inspect	'S', 'c', "math_Add", "$math_Add", 'G', 0, 1649
	jsr	$math_Add
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	1650
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	-14[FB],R1	;  pBuf 
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	mov.w	-28[FB],R0	;  Power_temp 
	mov.w	-28+2[FB],R2	;  Power_temp 
	mov.w	R1,-24[FB]	;  __TMP7 
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 1650
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ABS", "_ABS", 'G', 0, 1650
	jsr	_ABS
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-24[FB],R2	;  __TMP7 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 1650
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	1652
	tst.b	#80H,-28+3[FB]	;  Power_temp 
	jz	L1855
	._line	1653
	mov.w	-14[FB],A0	;  pBuf 
	or.b	#80H,0003H[A0]
	jmp	L1857
	._line	1654
L1855:
	._line	1655
	mov.w	-14[FB],A0	;  pBuf 
	and.b	#7fH,0003H[A0]
L1857:
	._line	1657
	add.w	#0004H,-14[FB]	;  pBuf 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	cmp.w	#0002H,-12[FB]	;  i 
	jlt	L1835
	._eblock
	._line	1659
	jmp	L2151
	._line	1661
L1875:
	._line	1662
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-22[FB]	;  Record5 
	._line	1663
	add.b	#10H,-3[FB]	;  read_addr 
	._line	1664
	mov.b	-4[FB],R0L	;  mask 
	and.b	-1[FB],R0L	;  read_class 
	jeq	L2151
	._line	1665
	._block
	._line	1666
	mov.w	#0000H,-12[FB]	;  i 
L1877:
	._line	1667
	._block
	._line	1668
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	-14[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	-12[FB],A0	;  i 
	shl.w	#02H,A0
	add.w	-22[FB],A0	;  Record5 
	push.w	2[A0]
	push.w	[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-24[FB]	;  __TMP8 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 1668
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 1668
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-24[FB],R2	;  __TMP8 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 1668
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	1669
	add.w	#0004H,-14[FB]	;  pBuf 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	cmp.w	#0004H,-12[FB]	;  i 
	jlt	L1877
	._eblock
	._line	1671
	jmp	L2151
	._line	1673
L1899:
	._line	1674
	mov.w	-16[FB],A0	;  pRecord 
	mov.b	0004H[A0],R0L
	btst	03H,R0
	jz	L2149
	btst	04H,R0
	jne	L2149
	._line	1675
	add.b	#10H,-3[FB]	;  read_addr 
L2149:
	._line	1676
	mov.b	-3[FB],R0L	;  read_addr 
	mov.b	#00H,R0H
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record6 
	._block
	._type	480,'O',387
	._var	'Record6','R',480,5
	._line	1677
	add.b	#10H,-3[FB]	;  read_addr 
	._line	1678
	mov.b	-4[FB],R1L	;  mask 
	and.b	-1[FB],R1L	;  read_class 
	jeq	L2151
	._eblock
	._line	1679
	._block
	._block
	._type	481,'O',387
	._var	'Record6','R',481,5
	._line	1680
	push.b	#06H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	-14[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 1680
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	1681
	add.w	#0006H,-14[FB]	;  pBuf 
	._eblock
	._eblock
	._eblock
L2151:
	._line	1687
	._block
	._line	1688
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0aaH,[A0]
	._line	1689
	add.w	#0001H,-14[FB]	;  pBuf 
	._eblock
	._line	1693
	shl.b	#01H,-4[FB]	;  mask 
	._eblock
	._line	1694
	cmp.b	#40H,-4[FB]	;  mask 
	jltu	L1721
	._eblock
	._line	1695
L1713:
	._line	1697
	mov.b	-14[FB],R0L	;  pBuf 
	sub.b	9[FB],R0L	;  rBuffer 
	add.b	#-3,R0L
	mov.w	9[FB],A0	;  rBuffer 
	mov.b	R0L,0002H[A0]
	._line	1698
	mov.b	#00H,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	._line	1699
	mov.w	#0000H,-12[FB]	;  i 
L1949:
	._line	1699
	mov.w	-14[FB],R1	;  pBuf 
	sub.w	9[FB],R1	;  rBuffer 
	cmp.w	R1,-12[FB]	;  i 
	jge	L1953
	._eblock
	._line	1700
	._block
	._block
	._var	'sum','R',3,1
	._line	1701
	mov.w	9[FB],A0	;  rBuffer 
	add.w	-12[FB],A0	;  i 
	add.b	[A0],R0L	;  sum 
	._eblock
	add.w	#0001H,-12[FB]	;  i 
	jmp	L1949
	._eblock
L1953:
	._block
	._var	'sum','R',3,1
	._line	1703
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	R0L,[A0]	;  sum 
	._eblock
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1704
	mov.w	-14[FB],A0	;  pBuf 
	mov.b	#0e5H,[A0]
	add.w	#0001H,-14[FB]	;  pBuf 
	._line	1706
	mov.b	11[FB],R0L	;  mode 
	jeq	L1971
	._line	1707
	._block
	._line	1708
	mov.b	-2[FB],R0L	;  Data_number 
	mov.b	#00H,R0H
	mov.b	12[FB],A0	;  uartx 
	mov.w	A0,R1
	mul.w	#000dH,A0
	cmp.w	R0,_Iterate_Tree_Flag+0009H[A0]
	jeq	L2153
	._line	1709
	._block
	._line	1710
	mov.w	#_Iterate_Tree_Flag,R0
	add.w	R0,A0
	add.w	#0009H,A0
	add.w	#0001H,[A0]
	._line	1711
	mov.w	R1,A0
	mov.b	_Read_Count[A0],R0L
	dec.b	R0L
	mov.b	R0L,_Read_Count[A0]
	._eblock
	._line	1712
	jmp	L2153
	._eblock
	._line	1715
L1971:
	._line	1716
	._block
	._line	1717
	mov.b	12[FB],A0	;  uartx 
	add.b	#-1,_Read_Count[A0]
	._eblock
	._line	1718
L2153:
	._line	1720
	mov.b	12[FB],A0	;  uartx 
	mov.b	_Read_Count[A0],R0L
	jeq	L2155
	._line	1721
	._block
	._line	1722
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 1722
	jsr	_FeedWatchdog
	._line	1723
	push.b	7[FB]	;  id 
	._inspect	'S', 'p', 1
	mova	-8[FB],R2	;  nReadPage 
	mov.b	12[FB],R1L	;  uartx 
	mov.b	#00H,R1H
	._inspect	'S', 'c', "Find_Next_Record", "$Find_Next_Record", 'G', 0, 1723
	jsr	$Find_Next_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0000H,R0
	jeq	L2155
	._line	1724
	mov.b	12[FB],A0	;  uartx 
	mov.b	#00H,_Read_Count[A0]
	._eblock
L2155:
	._line	1727
	mov.b	12[FB],A0	;  uartx 
	mov.b	_Read_Count[A0],R0L
	jeq	L2001
	._line	1728
	mov.w	-14[FB],R0	;  pBuf 
	sub.w	9[FB],R0	;  rBuffer 
	or.b	#80H,R0H
	exitd	
	._line	1729
L2001:
	._line	1730
	mov.w	-14[FB],R0	;  pBuf 
	sub.w	9[FB],R0	;  rBuffer 
	exitd	
E31:
	._eblock
M38:
	._efunc	M38
	._inspect	'F', 'd', "PrepareCommunication", "$PrepareCommunication", 'G', 1407, 0, 00h, 0
	._inspect	'F', 't', "PrepareCommunication", 'G', 443
	._inspect	'V', 'r', "LoadRecord", 'G', 1428, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1428, 46, 0, 0, 00h
	._inspect	'F', 'r', "read_record_base_time_id", "$read_record_base_time_id", 'G', 1435, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 1459, 52, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1460, 3, 0, 0, 00h
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 1460, 0, 00h, 0
	._inspect	'V', 'r', "Read_Count", 'G', 1463, 3, 0, 0, 00h
	._inspect	'V', 'r', "cx", 'G', 1465, 188, 0, 0, 0800h
	._inspect	'F', 'r', "CheckTime", "$CheckTime", 'G', 1478, 0, 00h, 0
	._inspect	'V', 'r', "cx", 'G', 1480, 188, 0, 0, 0800h
	._inspect	'F', 'r', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 1483, 0, 00h, 0
	._inspect	'F', 'r', "Find_Next_Record", "$Find_Next_Record", 'G', 1486, 0, 00h, 0
	._inspect	'F', 'r', "Find_First_Record", "$Find_First_Record", 'G', 1489, 0, 00h, 0
	._inspect	'V', 'r', "Read_Count", 'G', 1492, 3, 0, 0, 00h
	._inspect	'V', 'r', "cx", 'G', 1492, 188, 0, 0, 0800h
	._inspect	'F', 'r', "Find_Near_Record", "$Find_Near_Record", 'G', 1493, 0, 00h, 0
	._inspect	'F', 'r', "Find_Last_Record", "$Find_Last_Record", 'G', 1496, 0, 00h, 0
	._inspect	'F', 'r', "Find_Addr_Record", "$Find_Addr_Record", 'G', 1499, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 1509, 52, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1511, 3, 0, 0, 00h
	._inspect	'F', 'r', "Find_Next_Record", "$Find_Next_Record", 'G', 1512, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 1517, 52, 0, 0, 00h
	._inspect	'F', 'r', "Find_Last_Record", "$Find_Last_Record", 'G', 1519, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1530, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1534, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1534, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1538, 1280, 0, 0, 00h
	._inspect	'V', 'r', "MainSoftDate", 'G', 1542, 7, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1542, 1280, 0, 0, 00h
	._inspect	'F', 'r', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 1542, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1545, 46, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1546, 1280, 0, 0, 00h
	._inspect	'F', 'r', "GetRecordLength", "$GetRecordLength", 'G', 1546, 0, 00h, 0
	._inspect	'V', 'r', "Dat_Num", 'G', 1546, 1, 0, 0, 00h
	._inspect	'V', 'r', "Dat_Num", 'G', 1549, 1, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1551, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1553, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1563, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1570, 1280, 0, 0, 00h
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 1570, 0, 00h, 0
	._inspect	'F', 'r', "ConverseString", "$ConverseString", 'G', 1571, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1583, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 1598, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1603, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1624, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 1628, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1633, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1635, 1280, 0, 0, 00h
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 1638, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 1638, 0, 00h, 0
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 1640, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 1640, 0, 00h, 0
	._inspect	'V', 'r', "Meter_Parameter", 'G', 1645, 623, 0, 0, 00h
	._inspect	'V', 'r', "Meter_Parameter", 'G', 1647, 623, 0, 0, 00h
	._inspect	'F', 'r', "math_Add", "$math_Add", 'G', 1649, 0, 00h, 0
	._inspect	'F', 'r', "ABS", "_ABS", 'G', 1650, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 1650, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1662, 1280, 0, 0, 00h
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 1668, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 1668, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1676, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 1680, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 1708, 52, 0, 0, 00h
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 1710, 52, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1711, 3, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1711, 3, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1717, 3, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1717, 3, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1720, 3, 0, 0, 00h
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 1722, 0, 00h, 0
	._inspect	'F', 'r', "Find_Next_Record", "$Find_Next_Record", 'G', 1723, 0, 00h, 0
	._inspect	'V', 'r', "Read_Count", 'G', 1724, 3, 0, 0, 00h
	._inspect	'V', 'r', "Read_Count", 'G', 1727, 3, 0, 0, 00h
	._inspect	'F', 'e', "PrepareCommunication", "$PrepareCommunication", 'G', 8, 0


;## #	FUNCTION InitLoadRecord
;## #	FRAME	AUTO	(    flag)	size  1,	offset -1
;## #	ARG Size(0)	Auto Size(1)	Context Size(5)

	._type	482,'v'
	._type	483,'x',16,1
	._type	483,'m','',0,482
	._func	'InitLoadRecord','G',1,483,_InitLoadRecord,0
	._inspect	'F', 's', "InitLoadRecord", "_InitLoadRecord", 'G', 6
	.align
	._line	1737
	.glb	_InitLoadRecord
_InitLoadRecord:
	enter	#01H
	._block
	._var	'flag','A',3,-1
	._type	485,'Z',6,18
	._type	486,'Z',6,18
	._type	488,'g','NeedSaveIndex',0,1,3
	._type	489,'g','reStart',0,1,3
	._type	490,'g','',0,1,3
	._type	491,'g','',0,1,3
	._type	492,'g','',0,1,3
	._type	493,'g','',0,1,3
	._type	494,'g','',0,1,3
	._type	495,'g','',0,1,3
	._type	487,'S','',1
	._type	487,'m','NeedSaveIndex',488,0
	._type	487,'m','reStart',489,1
	._type	487,'m','',490,2
	._type	487,'m','',491,3
	._type	487,'m','',492,4
	._type	487,'m','',493,5
	._type	487,'m','',494,6
	._type	487,'m','',495,7
	._type	496,'S','',2
	._type	496,'m','Last_Read_BlockAddress',18,0
	._type	497,'Z',3,496
	._type	484,'S','LOADRECORD_NEW',46
	._type	484,'m','BlockAddress',18,0
	._type	484,'m','LastBlockAddress',18,2
	._type	484,'m','LastBlockAddress1',485,4
	._type	484,'m','LastRecordTime',312,16
	._type	484,'m','LoadRecordPointer',7,22
	._type	484,'m','First_Flag',268,26
	._type	484,'m','FirstBlockAddress1',486,27
	._type	484,'m','LoadRecordFlag',487,39
	._type	484,'m','ReadHistory',497,40
	._type	498,'O',484
	._line	1742
	._inspect	'S', 'c', "CheckPowerDown", "_CheckPowerDown", 'G', 0, 1742
	jsr	_CheckPowerDown
	._line	1743
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 1743
	jsr	_FeedWatchdog
	._line	1745
	mov.b	#00H,-1[FB]	;  flag 
	._line	1746
	mov.w	#0082H,R0	;  i 
	._line	1748
	push.b	#00H
	._inspect	'S', 'p', 1
	push.w	#0082H
	._inspect	'S', 'p', 2
	mov.w	#_Co+300,R2
	mov.w	#5fdbH,R1
	._inspect	'S', 'c', "ReadBlock", "$ReadBlock", 'G', 0, 1748
	jsr	$ReadBlock
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	mov.b	R0L,R0H
	jeq	L2307
	._line	1749
	._block
	._line	1750
	mov.w	#_LoadRecord,A1
	mov.b	#00H,R0L
	mov.w	#02eH,R3
	sstr.b	
	._line	1752
	mov.w	#0000H,A0	;  i 
	._block
	._var	'i','R',18,9
	._eblock
	mov.w	A0,R0	;  i  i 
	._block
	._var	'i','R',18,5
L2169:
	._line	1753
	mov.w	R0,A0	;  i  i 
	._eblock
	mov.b	_Co+300[A0],_LoadRecord[A0]	;  i  i 
	._block
	._var	'i','R',18,9
	inc.w	A0	;  i 
	mov.w	A0,R0	;  i  i 
	._eblock
	cmp.w	#0028H,R0	;  i 
	jltu	L2169
	._line	1755
	mov.w	#0068H,R0	;  i 
	._line	1759
	cmp.w	_LoadRecord+22+2,_Co+426+2
	jltu	L2401
	jgtu	M39
	cmp.w	_LoadRecord+22,_Co+426
	jleu	L2401
M39:
	cmp.w	#0f600H,_Co+404
	jgtu	L2401
	cmp.w	#0000H,_Co+404
	jne	L2371
	cmp.w	#0000H,_Co+406
	jeq	L2401
L2371:
	._line	1760
	._block
	._line	1761
	mov.w	#0000H,A0	;  i 
	._block
	._var	'i','R',18,9
	._eblock
	mov.w	A0,R0	;  i  i 
	._block
	._var	'i','R',18,5
L2181:
	._line	1762
	mov.w	R0,A0	;  i  i 
	._eblock
	mov.b	_Co+404[A0],_LoadRecord[A0]	;  i  i 
	._block
	._var	'i','R',18,9
	inc.w	A0	;  i 
	mov.w	A0,R0	;  i  i 
	._eblock
	cmp.w	#001aH,R0	;  i 
	jltu	L2181
L2401:
	._eblock
	._line	1765
	cmp.w	#0f600H,_LoadRecord
	jgtu	L2391
	cmp.w	#0000H,_LoadRecord
	jne	L2405
	cmp.w	#0000H,_LoadRecord+2
	jne	L2405
L2391:
	._line	1766
	._block
	._line	1767
	mov.b	#01H,-1[FB]	;  flag 
	._eblock
	._line	1768
	jmp	L2405
	._eblock
	._line	1770
L2307:
	._line	1771
	._block
	._line	1772
	mov.b	#01H,-1[FB]	;  flag 
	._eblock
	._line	1773
L2405:
	._line	1775
	._inspect	'S', 'c', "CheckPowerDown", "_CheckPowerDown", 'G', 0, 1775
	jsr	_CheckPowerDown
	._line	1776
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 1776
	jsr	_FeedWatchdog
	._line	1778
	cmp.b	#01H,-1[FB]	;  flag 
	jne	L2317
	._line	1779
	._block
	._line	1780
	._inspect	'S', 'c', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 0, 1780
	jsr	_First_InitLoadRecord
	._eblock
	._line	1781
	jmp	L2319
	._line	1782
L2317:
	._line	1783
	._block
	._line	1784
	mov.w	#0000H,_LoadRecord+22
	mov.w	#0000H,_LoadRecord+22+2
	._line	1785
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#001aH
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord,R2
	mov.w	#5fdbH,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 1785
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	1786
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#001aH
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord,R2
	mov.w	#6043H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 1786
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._line	1787
L2319:
	._line	1789
	mov.w	#_Minute_Power_Data,A1
	mov.b	#00H,R0L
	mov.w	#048H,R3
	sstr.b	
	mov.w	#0048H,R1	;  i 
	._line	1792
	mov.b	-1[FB],R0L	;  flag 
	mov.b	#00H,R0H
	exitd	
E32:
	._eblock
M40:
	._efunc	M40
	._inspect	'F', 'd', "InitLoadRecord", "_InitLoadRecord", 'G', 1737, 0, 00h, 0
	._inspect	'F', 't', "InitLoadRecord", 'G', 483
	._inspect	'F', 'r', "CheckPowerDown", "_CheckPowerDown", 'G', 1742, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 1743, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1748, 1280, 0, 0, 00h
	._inspect	'F', 'r', "ReadBlock", "$ReadBlock", 'G', 1748, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1750, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1753, 46, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1753, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1759, 1280, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1759, 46, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1759, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1759, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1759, 1280, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1762, 46, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 1762, 1280, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1765, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1765, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1765, 46, 0, 0, 00h
	._inspect	'F', 'r', "CheckPowerDown", "_CheckPowerDown", 'G', 1775, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 1776, 0, 00h, 0
	._inspect	'F', 'r', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 1780, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1784, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1785, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 1785, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1786, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 1786, 0, 00h, 0
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 1789, 72, 0, 0, 00h
	._inspect	'F', 'e', "InitLoadRecord", "_InitLoadRecord", 'G', 4, 0


;## #	FUNCTION Get_Next_Record_Addr
;## #	FRAME	AUTO	(recordtime)	size  7,	offset -31
;## #	FRAME	AUTO	(FlashAddrstart)	size  4,	offset -24
;## #	FRAME	AUTO	(FlashAddr)	size  4,	offset -20
;## #	FRAME	AUTO	(FlashAddrEnd)	size  4,	offset -16
;## #	FRAME	AUTO	(startblock)	size  2,	offset -12
;## #	FRAME	AUTO	(endblock)	size  2,	offset -10
;## #	FRAME	AUTO	(checknum)	size  2,	offset -8
;## #	FRAME	AUTO	( nnblock)	size  2,	offset -6
;## #	FRAME	AUTO	(   rPage)	size  2,	offset -4
;## #	FRAME	AUTO	(    Page)	size  2,	offset -8
;## #	FRAME	AUTO	(   nSave)	size  1,	offset -2
;## #	FRAME	AUTO	(     uni)	size  1,	offset -1
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    (    Page)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R2
;## #	ARG Size(1)	Auto Size(31)	Context Size(5)

	._type	499,'O',18
	._type	500,'x',16,3
	._type	500,'m','Page',0,18
	._type	500,'m','rPage',0,499
	._type	500,'m','sort',0,3
	._func	'Get_Next_Record_Addr','G',31,500,$Get_Next_Record_Addr,0
	._inspect	'F', 's', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 36
	.align
	._line	1798
	.glb	$Get_Next_Record_Addr
$Get_Next_Record_Addr:
	enter	#01fH
	mov.w	R1,-8[FB]	;  Page  Page 
	mov.w	R2,-4[FB]	;  rPage  rPage 
	._block
	._var	'Page','A',18,-8
	._type	501,'O',18
	._var	'rPage','A',501,-4
	._var	'sort','A',3,5
	._var	'nnblock','A',18,-6
	._var	'startblock','A',18,-12
	._var	'endblock','A',18,-10
	._var	'checknum','A',18,-8
	._var	'FlashAddr','A',288,-20
	._var	'FlashAddrstart','A',288,-24
	._var	'FlashAddrEnd','A',288,-16
	._var	'uni','A',3,-1
	._var	'flag','A',3,0
	._var	'nSave','A',3,-2
	._var	'recordtime','A',311,-31
	._line	1804
	tst.b	#02H,_LoadRecord+39
	jnz	L2825
	cmp.w	_LoadRecord+2,-8[FB]	;  Page 
	jltu	L2825
	._line	1805
	mov.w	#0ffffH,R0
	exitd	
L2825:
	._line	1807
	mov.w	#_MainSoftDate,A0
	mov.b	#00H,R1H
	mova	-31[FB],A1	;  recordtime 
	mov.w	#0007H,R3
	smovf.b
	._line	1809
	mov.w	-8[FB],-6[FB]	;  Page  nnblock 
	._line	1810
	mov.b	5[FB],R0L	;  sort 
	jne	L2563
	._line	1811
	._block
	._line	1812
	tst.b	#02H,_LoadRecord+39
	jnz	L2445
	._line	1813
	._block
	._line	1814
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-6[FB],R1	;  nnblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1814
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2833
	._line	1815
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._line	1817
L2445:
	._line	1818
	._block
	._line	1819
	mov.w	_LoadRecord,-8[FB]	;  checknum 
	._line	1820
	mov.b	-8[FB],R0L	;  checknum 
	and.b	#7fH,R0L
	jne	L2455
	._line	1821
	mov.w	_LoadRecord+2,-10[FB]	;  endblock 
	jmp	L2457
	._line	1822
L2455:
	._line	1823
	mov.w	_LoadRecord,-10[FB]	;  endblock 
L2457:
	._line	1824
	mova	-16[FB],R2	;  FlashAddrEnd 
	mov.w	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 1824
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L2465
	._line	1825
	mov.w	#0ffffH,R0
	exitd	
L2465:
	._line	1826
	mova	-20[FB],R2	;  FlashAddr 
	mov.w	-6[FB],R1	;  nnblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 1826
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L2473
	._line	1827
	mov.w	#0ffffH,R0
	exitd	
L2473:
	._line	1829
	mov.w	-16[FB],R0	;  FlashAddrEnd 
	mov.w	-16+2[FB],R2	;  FlashAddrEnd 
	shl.l	#-8,R2R0
	shl.l	#-4,R2R0
	and.w	#000fH,R2
	mov.w	-20[FB],R1	;  FlashAddr 
	mov.w	-20+2[FB],R3	;  FlashAddr 
	shl.l	#-8,R3R1
	shl.l	#-4,R3R1
	and.w	#000fH,R3
	cmp.w	R0,R1
	jne	M41
	cmp.w	R2,R3
	jeq	L2491
M41:
	._line	1830
	._block
	._line	1831
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-6[FB],R1	;  nnblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1831
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2833
	._line	1832
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._line	1834
L2491:
	._line	1835
	._block
	._line	1836
	cmp.w	_LoadRecord+2,-6[FB]	;  nnblock 
	jgeu	L2511
	._line	1837
	._block
	._line	1838
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-6[FB],R1	;  nnblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1838
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2833
	._line	1839
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._line	1841
L2511:
	._line	1842
	._block
	._line	1843
	mov.w	-20+2[FB],R2	;  FlashAddr 
	mov.w	-20[FB],R0	;  FlashAddr 
	add.w	#1000H,R0
	adc.w	#0000H,R2
	and.w	#0f000H,R0
	mov.w	#0000H,-20+2[FB]	;  FlashAddr 
	and.w	#0fffH,-20[FB]	;  FlashAddr 
	or.w	R2,-20+2[FB]	;  FlashAddr 
	or.w	R0,-20[FB]	;  FlashAddr 
	._line	1844
	cmp.w	#001fH,-20+2[FB]	;  FlashAddr 
	jltu	L2521
	jgtu	M42
	cmp.w	#0ffffH,-20[FB]	;  FlashAddr 
	jltu	L2521
M42:
	._line	1845
	mov.w	#4000H,-20[FB]	;  FlashAddr 
	mov.w	#0001H,-20+2[FB]	;  FlashAddr 
L2521:
	._line	1846
	and.w	#0f000H,-20[FB]	;  FlashAddr 
	._line	1847
	push.w	-20+2[FB]	;  FlashAddr 
	push.w	-20[FB]	;  FlashAddr 
	._inspect	'S', 'p', 4
	mova	-12[FB],R1	;  startblock 
	._inspect	'S', 'c', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 0, 1847
	jsr	$Get_Block_From_PhysicalAddress
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	1848
	mov.w	-12[FB],-6[FB]	;  startblock  nnblock 
	._line	1849
	mov.b	#00H,-1[FB]	;  uni 
L2531:
	._line	1850
	._block
	._line	1851
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-12[FB],R1	;  startblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1851
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2535
	._line	1855
	add.w	#0001H,-12[FB]	;  startblock 
	._line	1856
	mov.w	-12[FB],-6[FB]	;  startblock  nnblock 
	._eblock
	inc.b	-1[FB]	;  uni 
	cmp.b	#04H,-1[FB]	;  uni 
	jltu	L2531
L2535:
	._line	1858
	cmp.b	#04H,-1[FB]	;  uni 
	jne	L2833
	._line	1859
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._eblock
	._eblock
	._eblock
	._line	1864
L2563:
	._line	1865
	._block
	._line	1866
	mov.w	_LoadRecord,-8[FB]	;  checknum 
	._line	1867
	mov.b	-8[FB],R0L	;  checknum 
	and.b	#7fH,R0L
	jne	L2573
	._line	1868
	mov.w	_LoadRecord+2,-10[FB]	;  endblock 
	jmp	L2575
	._line	1869
L2573:
	._line	1870
	mov.w	_LoadRecord,-10[FB]	;  endblock 
L2575:
	._line	1871
	mova	-24[FB],R2	;  FlashAddrstart 
	mov.w	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 1871
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L2583
	._line	1872
	mov.w	#0ffffH,R0
	exitd	
L2583:
	._line	1873
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-6[FB],R1	;  nnblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1873
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2591
	._line	1874
	mov.w	#0ffffH,R0
	exitd	
L2591:
	._line	1876
	mov.b	#00H,R0L	;  sortemp 
	._line	1877
	mov.w	-6[FB],-10[FB]	;  nnblock  endblock 
	._line	1878
	mov.w	#0000H,-8[FB]	;  checknum 
	._line	1879
L2601:
	._line	1880
	._block
	._line	1881
	tst.b	#02H,_LoadRecord+39
	jnz	L2835
	cmp.w	_LoadRecord+2,-10[FB]	;  endblock 
	jleu	L2835
	._line	1882
	mov.w	#0ffffH,R0
	exitd	
L2835:
	._line	1884
	mova	-16[FB],R2	;  FlashAddrEnd 
	mov.w	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 0, 1884
	jsr	$Get_Physicaladdress_From_Block
	cmp.w	#0000H,R0
	jne	L2639
	._line	1885
	mov.w	#0ffffH,R0
	exitd	
L2639:
	._line	1886
	mov.w	-16[FB],R0	;  FlashAddrEnd 
	mov.w	-16+2[FB],R2	;  FlashAddrEnd 
	shl.l	#-8,R2R0
	shl.l	#-4,R2R0
	and.w	#000fH,R2
	mov.w	-24[FB],R1	;  FlashAddrstart 
	mov.w	-24+2[FB],R3	;  FlashAddrstart 
	shl.l	#-8,R3R1
	shl.l	#-4,R3R1
	and.w	#000fH,R3
	cmp.w	R0,R1
	jne	L2687
	cmp.w	R2,R3
	jne	L2687
	._line	1887
	._block
	._line	1888
L2647:
	cmp.w	_LoadRecord+2,-10[FB]	;  endblock 
	jgtu	L2649
	._line	1889
	._block
	._line	1890
	mov.w	-10[FB],-6[FB]	;  endblock  nnblock 
	._line	1891
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1891
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2657
	._line	1892
	mov.w	#0ffffH,R0
	exitd	
L2657:
	._line	1893
	mov.b	5[FB],R1H	;  sort 
	add.b	#-1,R1H
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R0L
	and.b	_Co+6,R0L	;  sortemp 
	._block
	._var	'sortemp','R',3,1
	._line	1894
	jeq	L2647
	._eblock
	._line	1895
	._block
	._line	1896
	mov.w	-4[FB],A0	;  rPage 
	mov.w	-6[FB],[A0]	;  nnblock 
	._line	1897
	mov.w	#0000H,R0
	exitd	
	._eblock
	._eblock
	._line	1899
L2649:
	._line	1900
	mov.w	-24[FB],-16[FB]	;  FlashAddrstart  FlashAddrEnd 
	mov.w	-24+2[FB],-16+2[FB]	;  FlashAddrstart  FlashAddrEnd 
	._line	1901
	mov.w	-16+2[FB],R2	;  FlashAddrEnd 
	mov.w	-16[FB],R0	;  FlashAddrEnd 
	add.w	#1000H,R0
	adc.w	#0000H,R2
	and.w	#0f000H,R0
	mov.w	#0000H,-16+2[FB]	;  FlashAddrEnd 
	and.w	#0fffH,-16[FB]	;  FlashAddrEnd 
	or.w	R2,-16+2[FB]	;  FlashAddrEnd 
	or.w	R0,-16[FB]	;  FlashAddrEnd 
	._line	1902
	cmp.w	#001fH,-16+2[FB]	;  FlashAddrEnd 
	jltu	L2677
	jgtu	M43
	cmp.w	#0ffffH,-16[FB]	;  FlashAddrEnd 
	jltu	L2677
M43:
	._line	1903
	mov.w	#4000H,-16[FB]	;  FlashAddrEnd 
	mov.w	#0001H,-16+2[FB]	;  FlashAddrEnd 
L2677:
	._line	1904
	and.w	#0f000H,-16[FB]	;  FlashAddrEnd 
	._line	1905
	push.w	-16+2[FB]	;  FlashAddrEnd 
	push.w	-16[FB]	;  FlashAddrEnd 
	._inspect	'S', 'p', 4
	mova	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 0, 1905
	jsr	$Get_Block_From_PhysicalAddress
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
L2687:
	._line	1908
	mov.b	#00H,-2[FB]	;  nSave 
	._line	1909
	mov.w	-10[FB],R0	;  endblock 
	shl.w	#-07H,R0
	mov.w	R0,-12[FB]	;  startblock 
	._line	1910
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#0001H
	._inspect	'S', 'p', 2
	mova	-2[FB],R2	;  nSave 
	mov.b	5[FB],R0L	;  sort 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mov.w	-12[FB],R1	;  startblock 
	mul.w	#0006H,R1
	add.w	R0,R1
	add.w	#4036H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 1910
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	1912
	cmp.b	#80H,-2[FB]	;  nSave 
	jgeu	L2717
	._line	1913
	._block
	._line	1914
	push.w	-16+2[FB]	;  FlashAddrEnd 
	push.w	-16[FB]	;  FlashAddrEnd 
	._inspect	'S', 'p', 4
	mova	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 0, 1914
	jsr	$Get_Block_From_PhysicalAddress
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	1915
	mov.w	-10[FB],-6[FB]	;  endblock  nnblock 
	._line	1916
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 1916
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0002H,R0
	jeq	L2697
	._line	1917
	mov.w	#0ffffH,R0
	exitd	
L2697:
	._line	1918
	mov.b	5[FB],R1H	;  sort 
	add.b	#-1,R1H
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R0L
	and.b	_Co+6,R0L	;  sortemp 
	._block
	._var	'sortemp','R',3,1
	._line	1919
	jne	L2603
	._eblock
	jmp	L2719
	._eblock
	._line	1924
L2717:
	._line	1925
	._block
	._line	1926
	mov.w	-16+2[FB],R2	;  FlashAddrEnd 
	mov.w	-16[FB],R0	;  FlashAddrEnd 
	add.w	#1000H,R0
	adc.w	#0000H,R2
	and.w	#0f000H,R0
	mov.w	#0000H,-16+2[FB]	;  FlashAddrEnd 
	and.w	#0fffH,-16[FB]	;  FlashAddrEnd 
	or.w	R2,-16+2[FB]	;  FlashAddrEnd 
	or.w	R0,-16[FB]	;  FlashAddrEnd 
	._line	1927
	cmp.w	#001fH,-16+2[FB]	;  FlashAddrEnd 
	jltu	L2727
	jgtu	M44
	cmp.w	#0ffffH,-16[FB]	;  FlashAddrEnd 
	jltu	L2727
M44:
	._line	1928
	mov.w	#4000H,-16[FB]	;  FlashAddrEnd 
	mov.w	#0001H,-16+2[FB]	;  FlashAddrEnd 
L2727:
	._line	1929
	and.w	#0f000H,-16[FB]	;  FlashAddrEnd 
	._line	1930
	push.w	-16+2[FB]	;  FlashAddrEnd 
	push.w	-16[FB]	;  FlashAddrEnd 
	._inspect	'S', 'p', 4
	mova	-10[FB],R1	;  endblock 
	._inspect	'S', 'c', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 0, 1930
	jsr	$Get_Block_From_PhysicalAddress
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._line	1931
L2719:
	._line	1932
	add.w	#0001H,-8[FB]	;  checknum 
	._line	1933
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 1933
	jsr	_FeedWatchdog
	._eblock
	._line	1934
	cmp.w	#01ecH,-8[FB]	;  checknum 
	jltu	L2601
L2603:
	._line	1935
	cmp.w	#01ecH,-8[FB]	;  checknum 
	jltu	L2833
	._line	1936
	mov.w	#0ffffH,R0
	exitd	
L2833:
	._eblock
	._line	1939
	mov.w	-4[FB],A0	;  rPage 
	mov.w	-6[FB],[A0]	;  nnblock 
	._line	1940
	mov.w	#0000H,R0
	exitd	
E33:
	._eblock
M45:
	._efunc	M45
	._inspect	'F', 'd', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 1798, 0, 00h, 0
	._inspect	'F', 't', "Get_Next_Record_Addr", 'G', 500
	._inspect	'V', 'r', "LoadRecord", 'G', 1804, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 1804, 46, 0, 0, 00h
	._inspect	'V', 'r', "MainSoftDate", 'G', 1807, 7, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1812, 46, 0, 0, 02000000h
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1814, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1819, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1821, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1823, 46, 0, 0, 00h
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 1824, 0, 00h, 0
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 1826, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1831, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1836, 46, 0, 0, 00h
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1838, 0, 00h, 0
	._inspect	'F', 'r', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 1847, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1851, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1866, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1868, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1870, 46, 0, 0, 00h
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 1871, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1873, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1881, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 1881, 46, 0, 0, 00h
	._inspect	'F', 'r', "Get_Physicaladdress_From_Block", "$Get_Physicaladdress_From_Block", 'G', 1884, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 1888, 46, 0, 0, 00h
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1891, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1893, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 1905, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 1910, 0, 00h, 0
	._inspect	'F', 'r', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 1914, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 1916, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 1918, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Get_Block_From_PhysicalAddress", "$Get_Block_From_PhysicalAddress", 'G', 1930, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 1933, 0, 00h, 0
	._inspect	'F', 'e', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 4, 0


;## #	FUNCTION Find_Next_Record
;## #	FRAME	AUTO	(  rblock)	size  2,	offset -2
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    ( channel)   size   2,   REGISTER R1
;## #  REGISTER ARG    (  rblock)   size   2,   REGISTER R2
;## #	ARG Size(1)	Auto Size(2)	Context Size(5)

	._type	502,'O',18
	._type	503,'x',16,3
	._type	503,'m','channel',0,16
	._type	503,'m','rblock',0,502
	._type	503,'m','sort',0,3
	._func	'Find_Next_Record','G',2,503,$Find_Next_Record,0
	._inspect	'F', 's', "Find_Next_Record", "$Find_Next_Record", 'G', 7
	.align
	._line	1947
	.glb	$Find_Next_Record
$Find_Next_Record:
	enter	#02H
	mov.w	R2,-2[FB]	;  rblock  rblock 
	._block
	._var	'channel','A',16,0
	._type	504,'O',18
	._var	'rblock','A',504,-2
	._var	'sort','A',3,5
	._var	'nByte','A',18,0
	._line	1950
	._block
	._var	'channel','R',16,6
	mov.b	5[FB],R0L	;  sort 
	jne	L2837
	._eblock
	._line	1951
	._block
	._block
	._var	'channel','R',16,6
	._line	1952
	mov.w	_LoadRecord+2,R0	;  nblock 
	._eblock
	._block
	._var	'nblock','R',18,5
	._var	'channel','R',16,6
	._eblock
	._line	1953
	jmp	L2839
	._eblock
	._line	1954
L2837:
	._block
	._var	'channel','R',16,6
	._eblock
	._line	1955
	._block
	._block
	._var	'channel','R',16,6
	._line	1956
	mov.b	5[FB],A0	;  sort 
	dec.w	A0
	shl.w	#01H,A0
	mov.w	_LoadRecord+4[A0],R0	;  nblock 
	._eblock
	._block
	._var	'nblock','R',18,5
	._var	'channel','R',16,6
	._eblock
	._line	1957
L2839:
	._line	1959
	mov.w	R1,A0	;  channel  channel 
	._eblock
	shl.w	#01H,A0
	._block
	._var	'nblock','R',18,5
	._var	'channel','R',16,6
	cmp.w	_LoadRecord+40[A0],R0	;  nblock 
	jne	L2847
	._eblock
	._line	1960
	._block
	._line	1961
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._line	1963
L2847:
	._block
	._var	'channel','R',16,6
	._eblock
	._line	1964
	._block
	._block
	._var	'channel','R',16,6
	._line	1965
	push.b	5[FB]	;  sort 
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R2	;  rblock 
	mov.w	R1,A0	;  channel  channel 
	._eblock
	shl.w	#01H,A0
	mov.w	_LoadRecord+40[A0],R1
	._inspect	'S', 'c', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 0, 1965
	jsr	$Get_Next_Record_Addr
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0ffffH,R0
	stzx	#0ffH,#00H,R0L
	mov.b	R0L,R0H
	._line	1966
	exitd	
E34:
	._eblock
	._eblock
M46:
	._efunc	M46
	._inspect	'F', 'd', "Find_Next_Record", "$Find_Next_Record", 'G', 1947, 0, 00h, 0
	._inspect	'F', 't', "Find_Next_Record", 'G', 503
	._inspect	'V', 'r', "LoadRecord", 'G', 1952, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1956, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1959, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 1965, 46, 0, 0, 00h
	._inspect	'F', 'r', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 1965, 0, 00h, 0
	._inspect	'F', 'e', "Find_Next_Record", "$Find_Next_Record", 'G', 1, 0


;## #	FUNCTION Find_Last_Record
;## #  REGISTER ARG    ( channel)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(0)	Context Size(3)

	._type	505,'O',18
	._type	506,'x',16,2
	._type	506,'m','channel',0,16
	._type	506,'m','rPage',0,505
	._func	'Find_Last_Record','G',0,506,$Find_Last_Record,0
	._inspect	'F', 's', "Find_Last_Record", "$Find_Last_Record", 'G', 3
	.align
	._line	1975
	.glb	$Find_Last_Record
$Find_Last_Record:
	._block
	._var	'channel','A',16,0
	._type	507,'O',18
	._var	'rPage','A',507,0
	._line	1976
	._block
	._var	'channel','R',16,6
	._type	508,'O',18
	._var	'rPage','R',508,7
	mov.w	R1,A0	;  channel  channel 
	._eblock
	shl.w	#01H,A0
	._block
	._type	509,'O',18
	._var	'rPage','R',509,7
	mov.w	R2,A1	;  rPage  rPage 
	._eblock
	mov.w	_LoadRecord+40[A0],[A1]	;  rPage 
	._line	1977
	mov.w	#0000H,R0
	rts	
E35:
	._eblock
M47:
	._efunc	M47
	._inspect	'F', 'd', "Find_Last_Record", "$Find_Last_Record", 'G', 1975, 0, 00h, 0
	._inspect	'F', 't', "Find_Last_Record", 'G', 506
	._inspect	'V', 'r', "LoadRecord", 'G', 1976, 46, 0, 0, 00h
	._inspect	'F', 'e', "Find_Last_Record", "$Find_Last_Record", 'G', 0, 0


;## #	FUNCTION Find_First_Record
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    (  rblock)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(0)	Context Size(5)

	._type	510,'O',18
	._type	511,'x',16,2
	._type	511,'m','rblock',0,510
	._type	511,'m','sort',0,3
	._func	'Find_First_Record','G',0,511,$Find_First_Record,0
	._inspect	'F', 's', "Find_First_Record", "$Find_First_Record", 'G', 5
	.align
	._line	1983
	.glb	$Find_First_Record
$Find_First_Record:
	enter	#00H
	mov.b	5[FB],R0L	;  sort  sort 
	._block
	._type	512,'O',18
	._var	'rblock','A',512,0
	._var	'num','A',18,0
	._var	'ret','A',3,0
	._line	1987
	._block
	._var	'sort','R',3,1
	._type	513,'O',18
	._var	'rblock','R',513,6
	tst.b	#02H,_LoadRecord+39
	jnz	L2887
	._eblock
	._line	1988
	._block
	._block
	._var	'sort','R',3,1
	._type	514,'O',18
	._var	'rblock','R',514,6
	._line	1989
	mov.b	R0L,R0H
	jne	L2877
	._eblock
	._block
	._type	515,'O',18
	._var	'rblock','R',515,6
	._eblock
	._line	1990
	._block
	._block
	._type	516,'O',18
	._var	'rblock','R',516,6
	._line	1991
	mov.w	R1,A0	;  rblock  rblock 
	._eblock
	mov.w	#0000H,[A0]	;  rblock 
	._eblock
	._line	1992
	jmp	L2897
	._line	1993
L2877:
	._block
	._var	'sort','R',3,1
	._type	517,'O',18
	._var	'rblock','R',517,6
	._eblock
	._line	1994
	._block
	._block
	._var	'sort','R',3,1
	._type	518,'O',18
	._var	'rblock','R',518,6
	._line	1995
	mov.b	R0L,A0
	._eblock
	._block
	._type	519,'O',18
	._var	'rblock','R',519,6
	dec.w	A0
	shl.w	#01H,A0
	mov.w	R1,A1	;  rblock  rblock 
	._eblock
	mov.w	_LoadRecord+27[A0],[A1]	;  rblock 
	._eblock
	._eblock
	._line	1997
	jmp	L2897
	._line	1998
L2887:
	._block
	._var	'sort','R',3,1
	._type	520,'O',18
	._var	'rblock','R',520,6
	._eblock
	._line	1999
	._block
	._block
	._var	'sort','R',3,1
	._type	521,'O',18
	._var	'rblock','R',521,6
	._line	2000
	push.b	R0L	;  sort 
	._inspect	'S', 'p', 1
	._eblock
	._block
	._type	522,'O',18
	._var	'rblock','R',522,6
	._eblock
	mov.w	R1,R2
	mov.w	_LoadRecord+2,R1
	._inspect	'S', 'c', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 0, 2000
	jsr	$Get_Next_Record_Addr
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0ffffH,R0
	jne	L2897
	._line	2001
	mov.w	#0ffffH,R0
	exitd	
L2897:
	._eblock
	._line	2027
	mov.w	#0000H,R0
	exitd	
E36:
	._eblock
M48:
	._efunc	M48
	._inspect	'F', 'd', "Find_First_Record", "$Find_First_Record", 'G', 1983, 0, 00h, 0
	._inspect	'F', 't', "Find_First_Record", 'G', 511
	._inspect	'V', 'r', "LoadRecord", 'G', 1987, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 1995, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2000, 46, 0, 0, 00h
	._inspect	'F', 'r', "Get_Next_Record_Addr", "$Get_Next_Record_Addr", 'G', 2000, 0, 00h, 0
	._inspect	'F', 'e', "Find_First_Record", "$Find_First_Record", 'G', 1, 0


;## #	FUNCTION Find_Near_Record
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    (  rblock)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(0)	Context Size(5)

	._type	523,'O',18
	._type	524,'x',16,2
	._type	524,'m','rblock',0,523
	._type	524,'m','sort',0,3
	._func	'Find_Near_Record','G',0,524,$Find_Near_Record,0
	._inspect	'F', 's', "Find_Near_Record", "$Find_Near_Record", 'G', 5
	.align
	._line	2034
	.glb	$Find_Near_Record
$Find_Near_Record:
	enter	#00H
	._block
	._type	525,'O',18
	._var	'rblock','A',525,0
	._var	'sort','A',3,5
	._line	2035
	._block
	._type	526,'O',18
	._var	'rblock','R',526,6
	mov.b	5[FB],R0L	;  sort 
	jne	L2917
	._eblock
	._line	2036
	._block
	._block
	._type	527,'O',18
	._var	'rblock','R',527,6
	._line	2037
	mov.w	R1,A0	;  rblock  rblock 
	._eblock
	mov.w	_LoadRecord+2,[A0]	;  rblock 
	._eblock
	._line	2038
	jmp	L2919
	._line	2039
L2917:
	._block
	._type	528,'O',18
	._var	'rblock','R',528,6
	._eblock
	._line	2040
	._block
	._block
	._type	529,'O',18
	._var	'rblock','R',529,6
	._line	2041
	mov.b	5[FB],A0	;  sort 
	dec.w	A0
	shl.w	#01H,A0
	mov.w	R1,A1	;  rblock  rblock 
	._eblock
	mov.w	_LoadRecord+4[A0],[A1]	;  rblock 
	._eblock
	._line	2042
L2919:
	._line	2043
	mov.w	#0000H,R0
	exitd	
E37:
	._eblock
M49:
	._efunc	M49
	._inspect	'F', 'd', "Find_Near_Record", "$Find_Near_Record", 'G', 2034, 0, 00h, 0
	._inspect	'F', 't', "Find_Near_Record", 'G', 524
	._inspect	'V', 'r', "LoadRecord", 'G', 2037, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2041, 46, 0, 0, 00h
	._inspect	'F', 'e', "Find_Near_Record", "$Find_Near_Record", 'G', 0, 0


;## #	FUNCTION Find_Addr_Record
;## #  FRAME   ARG (    addr)  size   2,    offset 5
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rByte)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(0)	Context Size(5)

	._type	530,'O',18
	._type	531,'O',18
	._type	532,'x',16,3
	._type	532,'m','rPage',0,530
	._type	532,'m','rByte',0,531
	._type	532,'m','addr',0,16
	._func	'Find_Addr_Record','G',0,532,$Find_Addr_Record,0
	._inspect	'F', 's', "Find_Addr_Record", "$Find_Addr_Record", 'G', 5
	.align
	._line	2050
	.glb	$Find_Addr_Record
$Find_Addr_Record:
	enter	#00H
	._block
	._type	533,'O',18
	._var	'rPage','A',533,0
	._type	534,'O',18
	._var	'rByte','A',534,0
	._var	'addr','A',16,5
	._line	2051
	._block
	._type	535,'O',18
	._var	'rPage','R',535,6
	._type	536,'O',18
	._var	'rByte','R',536,7
	mov.w	R2,A0	;  rByte  rByte 
	._eblock
	mov.w	5[FB],R0	;  addr 
	exts.w	R0
	div.w	#0004H
	._block
	._type	537,'O',18
	._var	'rPage','R',537,6
	._type	538,'O',18
	._var	'rByte','R',538,9
	add.w	#0038H,R0
	mov.w	R1,A1	;  rPage  rPage 
	._eblock
	mov.w	R0,[A1]	;  rPage 
	._block
	._type	539,'O',18
	._var	'rByte','R',539,9
	._line	2052
	mov.w	5[FB],R0	;  addr 
	exts.w	R0
	div.w	#0004H
	mov.w	R2,R0
	._eblock
	mul.w	#0083H,R0
	._block
	._type	540,'O',18
	._var	'rByte','R',540,9
	mov.w	R0,[A0]	;  rByte 
	._eblock
	._line	2053
	mov.w	#0000H,R0
	exitd	
E38:
	._eblock
M50:
	._efunc	M50
	._inspect	'F', 'd', "Find_Addr_Record", "$Find_Addr_Record", 'G', 2050, 0, 00h, 0
	._inspect	'F', 't', "Find_Addr_Record", 'G', 532
	._inspect	'F', 'e', "Find_Addr_Record", "$Find_Addr_Record", 'G', 0, 0


;## #	FUNCTION First_InitLoadRecord
;## #	FRAME	AUTO	(saveflag)	size  6,	offset -6
;## #	ARG Size(0)	Auto Size(6)	Context Size(5)

	._type	541,'v'
	._type	542,'v'
	._type	543,'x',541,1
	._type	543,'m','',0,542
	._func	'First_InitLoadRecord','G',6,543,_First_InitLoadRecord,0
	._inspect	'F', 's', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 11
	.align
	._line	2084
	.glb	_First_InitLoadRecord
_First_InitLoadRecord:
	enter	#06H
	._block
	._var	'Flashaddr','A',288,0
	._type	544,'Z',6,3
	._var	'saveflag','A',544,-6
	._line	2089
	and.b	#0fdH,_LoadRecord+39
	._line	2090
	mov.w	#0000H,_LoadRecord
	._line	2091
	mov.w	#0000H,_LoadRecord+2
	._line	2092
	mov.w	#0000H,_LoadRecord+22
	mov.w	#0000H,_LoadRecord+22+2
	._line	2100
	mov.b	#3fH,_LoadRecord+26
	._line	2094
	mov.w	#0100H,_LoadRecord+16
	._line	2096
	mov.w	#0001H,_LoadRecord+18
	._line	2098
	mov.b	#00H,_LoadRecord+20
	._line	2102
	mov.w	#0000H,A0	;  unc 
	._block
	._var	'unc','R',18,9
	._eblock
	mov.w	A0,R0	;  unc  unc 
	._block
	._var	'unc','R',18,5
L2933:
	._eblock
	._line	2103
	._block
	._block
	._var	'unc','R',18,5
	._line	2104
	mov.w	R0,R1	;  unc  unc 
	._eblock
	shl.w	#01H,R0
	._block
	._var	'unc','R',18,6
	mov.w	R0,A0
	._eblock
	mov.w	#0ffffH,_LoadRecord+27[A0]
	._block
	._var	'unc','R',18,6
	._line	2105
	mov.w	#0000H,_LoadRecord+4[A0]
	._eblock
	add.w	#0001H,R1	;  unc 
	mov.w	R1,R0	;  unc  unc 
	._eblock
	cmp.w	#0006H,R0	;  unc 
	jltu	L2933
	._line	2109
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0028H
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord,R2
	mov.w	#5fdbH,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2109
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2111
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#001aH
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord,R2
	mov.w	#6043H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2111
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2113
	mova	-6[FB],A1	;  saveflag 
	mov.b	#0ffH,R0L
	mov.w	#06H,R3
	sstr.b	
	mov.w	#0006H,R0	;  unc 
	._line	2118
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0006H
	._inspect	'S', 'p', 2
	mova	-6[FB],R2	;  saveflag 
	mov.w	#4036H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2118
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2119
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 2119
	jsr	_FeedWatchdog
	._line	2121
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#016eH
	._inspect	'S', 'p', 2
	mov.w	#0000H,R2
	mov.w	#6dc3H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2121
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2122
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 2122
	jsr	_FeedWatchdog
	._eblock
	._line	2124
	exitd	
E39:
M51:
	._efunc	M51
	._inspect	'F', 'd', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 2084, 0, 00h, 0
	._inspect	'F', 't', "First_InitLoadRecord", 'G', 543
	._inspect	'V', 'r', "LoadRecord", 'G', 2089, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 2090, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2091, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2092, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2100, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2094, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2096, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2098, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2104, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2105, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2109, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2109, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 2111, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2111, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2118, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 2119, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2121, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 2122, 0, 00h, 0
	._inspect	'F', 'e', "First_InitLoadRecord", "_First_InitLoadRecord", 'G', 4, 0


;## #	FUNCTION Minute_Power
;## #	FRAME	AUTO	(  l_tmep)	size  4,	offset -8
;## #	FRAME	AUTO	( __TMP11)	size  2,	offset -4
;## #	FRAME	AUTO	( __TMP10)	size  2,	offset -4
;## #	FRAME	AUTO	(  __TMP9)	size  2,	offset -2
;## #  REGISTER ARG    ( channel)   size   1,   REGISTER R1L
;## #	ARG Size(0)	Auto Size(8)	Context Size(5)

	._type	545,'v'
	._type	546,'x',545,1
	._type	546,'m','channel',0,3
	._func	'Minute_Power','G',8,546,$Minute_Power,0
	._inspect	'F', 's', "Minute_Power", "$Minute_Power", 'G', 13
	.align
	._line	2131
	.glb	$Minute_Power
$Minute_Power:
	enter	#08H
	._block
	._var	'channel','A',3,0
	._var	'temp_byte1','A',346,0
	._var	'l_tmep','A',7,-8
	._line	2139
	._block
	._var	'channel','R',3,3
	mov.w	#0000H,A0	;  i 
	._eblock
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	._eblock
	mov.w	A0,R0	;  i  i 
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,5
L2961:
	._eblock
	._line	2144
	._block
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,5
	._line	2146
	mov.w	R0,A0	;  i  i 
	._eblock
	shl.w	#02H,R0
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	mov.w	#_Minute_Power_Data,R2
	mov.w	R0,A1
	._eblock
	add.w	R2,R0
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	mov.w	R0,R3
	._eblock
	mov.w	_Active_power[A1],R0
	mov.w	_Active_power+2[A1],R2
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	mov.w	R3,A1
	._eblock
	add.w	R0,[A1]
	adc.w	R2,2[A1]
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	._line	2147
	add.b	#01H,_Minute_Power_Data+32[A0]	;  i 
	._eblock
	._eblock
	._line	2151
	._block
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,9
	._line	2152
	mov.w	A0,A1	;  i  i 
	._eblock
	shl.w	#02H,A0
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,10
	mov.w	#_Minute_Power_Data+16,R0
	mov.w	A0,R2
	._eblock
	add.w	R0,A0
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,10
	mov.w	A0,R0
	._eblock
	mov.w	R2,A0
	mov.w	R0,R3
	mov.w	_Reactive_power+2[A0],R2
	mov.w	_Reactive_power[A0],R0
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,10
	mov.w	R3,A0
	._eblock
	add.w	R0,[A0]
	adc.w	R2,2[A0]
	._block
	._var	'channel','R',3,3
	._var	'i','R',16,10
	._line	2153
	add.b	#01H,_Minute_Power_Data+36[A1]	;  i 
	._eblock
	inc.w	A1	;  i 
	mov.w	A1,R0	;  i  i 
	._eblock
	cmp.w	#0004H,R0	;  i 
	jlt	L2961
	._block
	._var	'channel','R',3,3
	._line	2157
	cmp.b	#00H,R1L	;  channel 
	jeq	L2985
	._eblock
	._line	2158
	._block
	._line	2159
	mov.w	#0000H,A0	;  i 
	._block
	._var	'i','R',16,9
	._eblock
	mov.w	A0,R0	;  i  i 
	._block
	._var	'i','R',16,5
L2973:
	._eblock
	._line	2160
	._block
	._block
	._var	'i','R',16,5
	._line	2161
	mov.w	R0,A0	;  i  i 
	._eblock
	mov.b	_Minute_Power_Data+32[A0],R1L	;  i 
	._block
	._var	'i','R',16,9
	mov.b	R1L,-8[FB]	;  l_tmep 
	mov.b	#00H,-8+1[FB]	;  l_tmep 
	mov.w	#0000H,-8+2[FB]	;  l_tmep 
	._line	2162
	mov.w	A0,-2[FB]	;  i  __TMP9 
	._eblock
	shl.w	#02H,A0
	._block
	._var	'i','A',16,-2
	push.w	-8+2[FB]	;  l_tmep 
	push.w	-8[FB]	;  l_tmep 
	._inspect	'S', 'p', 4
	mov.w	_Minute_Power_Data+2[A0],R2
	mov.w	_Minute_Power_Data[A0],R0
	mov.w	A0,-4[FB]	;  __TMP10 
	._eblock
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 2162
	jsr.a	__i4divU
	._block
	._var	'i','A',16,-2
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	-4[FB],A0	;  __TMP10 
	._eblock
	mov.w	R0,_Minute_Power_Data+40[A0]
	mov.w	R2,_Minute_Power_Data+40+2[A0]
	._block
	._var	'i','A',16,-2
	._line	2163
	mov.w	-2[FB],A0	;  __TMP9  i 
	._eblock
	mov.b	_Minute_Power_Data+36[A0],R0L	;  i 
	._block
	._var	'i','R',16,9
	mov.b	R0L,-8[FB]	;  l_tmep 
	mov.b	#00H,-8+1[FB]	;  l_tmep 
	mov.w	#0000H,-8+2[FB]	;  l_tmep 
	._line	2164
	shl.w	#02H,A0
	._eblock
	._block
	._var	'i','A',16,-2
	push.w	-8+2[FB]	;  l_tmep 
	push.w	-8[FB]	;  l_tmep 
	._inspect	'S', 'p', 4
	mov.w	_Minute_Power_Data+16+2[A0],R2
	mov.w	_Minute_Power_Data+16[A0],R0
	mov.w	A0,-4[FB]	;  __TMP11 
	._eblock
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 2164
	jsr.a	__i4divU
	._block
	._var	'i','A',16,-2
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	-4[FB],A0	;  __TMP11 
	._eblock
	mov.w	R0,_Minute_Power_Data+56[A0]
	mov.w	R2,_Minute_Power_Data+56+2[A0]
	._block
	._var	'i','A',16,-2
	._line	2165
	mov.w	-2[FB],A0	;  __TMP9  i 
	._eblock
	shl.w	#02H,A0
	._block
	._var	'i','A',16,-2
	mov.w	#0000H,_Minute_Power_Data[A0]
	mov.w	#0000H,_Minute_Power_Data+2[A0]
	._line	2166
	mov.w	#0000H,_Minute_Power_Data+16[A0]
	mov.w	#0000H,_Minute_Power_Data+16+2[A0]
	._line	2167
	mov.w	-2[FB],A0	;  __TMP9  i 
	._eblock
	mov.b	#00H,_Minute_Power_Data+32[A0]	;  i 
	._block
	._var	'i','R',16,9
	._line	2168
	mov.b	#00H,_Minute_Power_Data+36[A0]	;  i 
	._eblock
	inc.w	A0	;  i 
	._eblock
	._block
	._var	'i','R',16,9
	mov.w	A0,R0	;  i  i 
	._eblock
	cmp.w	#0004H,R0	;  i 
	jlt	L2973
L2985:
	._eblock
	._line	2173
	push.w	_Minute_Power_Data+40+2
	push.w	_Minute_Power_Data+40
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ABS", "_ABS", 'G', 0, 2173
	jsr	_ABS
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	R0,_Active_power_Per_Mintue
	mov.w	R2,_Active_power_Per_Mintue+2
	._eblock
	._line	2174
	exitd	
E40:
M52:
	._efunc	M52
	._inspect	'F', 'd', "Minute_Power", "$Minute_Power", 'G', 2131, 0, 00h, 0
	._inspect	'F', 't', "Minute_Power", 'G', 546
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2146, 72, 0, 0, 00h
	._inspect	'V', 'r', "Active_power", 'G', 2146, 16, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2147, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2147, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2152, 72, 0, 0, 00h
	._inspect	'V', 'r', "Reactive_power", 'G', 2152, 16, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2153, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2153, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2161, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2162, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2162, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2163, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2164, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2164, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2165, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2166, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2167, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2168, 72, 0, 0, 00h
	._inspect	'V', 'r', "Minute_Power_Data", 'G', 2173, 72, 0, 0, 00h
	._inspect	'F', 'r', "ABS", "_ABS", 'G', 2173, 0, 00h, 0
	._inspect	'V', 'r', "Active_power_Per_Mintue", 'G', 2173, 4, 0, 0, 00h
	._inspect	'F', 'e', "Minute_Power", "$Minute_Power", 'G', 4, 0


;## #	FUNCTION Change_SortAddr
;## #	FRAME	AUTO	(  rblock)	size  2,	offset -4
;## #	FRAME	AUTO	(    flag)	size  1,	offset -2
;## #	FRAME	AUTO	(rSaveFlag)	size  1,	offset -1
;## #  REGISTER ARG    (rSaveFlag)   size   1,   REGISTER R1L
;## #  REGISTER ARG    (  rblock)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	547,'v'
	._type	548,'x',547,2
	._type	548,'m','rSaveFlag',0,3
	._type	548,'m','rblock',0,18
	._func	'Change_SortAddr','G',4,548,$Change_SortAddr,0
	._inspect	'F', 's', "Change_SortAddr", "$Change_SortAddr", 'G', 9
	.align
	._line	2181
	.glb	$Change_SortAddr
$Change_SortAddr:
	enter	#04H
	mov.b	R1L,-1[FB]	;  rSaveFlag  rSaveFlag 
	mov.w	R2,-4[FB]	;  rblock  rblock 
	._block
	._var	'rSaveFlag','A',3,-1
	._var	'rblock','A',18,-4
	._var	'flag','A',3,-2
	._line	2184
	mov.b	#00H,-2[FB]	;  flag 
	._line	2185
	mov.b	_LoadRecord+26,R0H	;  pointer 
	._block
	._var	'pointer','R',3,2
	._line	2186
	mov.b	#00H,R1H	;  unc 
	._eblock
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	._eblock
	mov.b	R1H,R0L	;  unc  unc 
	._block
	._var	'unc','R',3,1
	._var	'pointer','R',3,2
L3003:
	._eblock
	._line	2187
	._block
	._block
	._var	'unc','R',3,1
	._var	'pointer','R',3,2
	._line	2188
	mov.w	#0001H,A0
	mov.b	R0L,R1H	;  unc  unc 
	._eblock
	shl.w	R1H,A0
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	mov.b	A0,R0L
	mov.b	_LoadRecord+26,R1L	;  first 
	and.b	R0L,R1L	;  first 
	._eblock
	._block
	._var	'pointer','R',3,2
	._var	'first','R',3,3
	._var	'unc','R',3,4
	._line	2189
	and.b	-1[FB],R1L	;  rSaveFlag 
	._eblock
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	jeq	L3015
	._eblock
	._line	2190
	._block
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	._line	2191
	mov.b	R1H,A0
	shl.w	#01H,A0
	mov.w	-4[FB],_LoadRecord+27[A0]	;  rblock 
	._line	2192
	not.b	R0L
	and.b	R0L,R0H	;  pointer 
	._line	2193
	mov.b	#0ffH,-2[FB]	;  flag 
	._eblock
L3015:
	._line	2195
	mov.b	-1[FB],R0L	;  rSaveFlag  last 
	._eblock
	._block
	._var	'last','R',3,1
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	._line	2196
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R1L
	and.b	R1L,R0L
	._eblock
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	jeq	L3025
	._eblock
	._line	2197
	._block
	._block
	._var	'pointer','R',3,2
	._var	'unc','R',3,4
	._line	2198
	mov.b	R1H,A0
	shl.w	#01H,A0
	mov.w	-4[FB],_LoadRecord+4[A0]	;  rblock 
	._eblock
L3025:
	add.b	#01H,R1H	;  unc 
	mov.b	R1H,R0L	;  unc  unc 
	._eblock
	cmp.b	#06H,R0L	;  unc 
	jltu	L3003
	._block
	._var	'pointer','R',3,2
	._eblock
	._line	2201
	cmp.b	#0ffH,-2[FB]	;  flag 
	jne	L3035
	._eblock
	._line	2202
	._block
	._block
	._var	'pointer','R',3,2
	._line	2203
	mov.b	R0H,_LoadRecord+26	;  pointer 
	._eblock
	._line	2204
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#000dH
	._inspect	'S', 'p', 2
	mov.w	#_LoadRecord+26,R2
	mov.w	#5ff5H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2204
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
L3035:
	._eblock
	._line	2206
	exitd	
E41:
M53:
	._efunc	M53
	._inspect	'F', 'd', "Change_SortAddr", "$Change_SortAddr", 'G', 2181, 0, 00h, 0
	._inspect	'F', 't', "Change_SortAddr", 'G', 548
	._inspect	'V', 'r', "LoadRecord", 'G', 2185, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2188, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2191, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2198, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2203, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2204, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2204, 0, 00h, 0
	._inspect	'F', 'e', "Change_SortAddr", "$Change_SortAddr", 'G', 4, 0


;## #	FUNCTION Save_SortIndex
;## #	FRAME	AUTO	(   nSave)	size  6,	offset -13
;## #	FRAME	AUTO	(   temp1)	size  2,	offset -7
;## #	FRAME	AUTO	(    temp)	size  2,	offset -5
;## #	FRAME	AUTO	(vd_check)	size  1,	offset -3
;## #	FRAME	AUTO	(    flag)	size  1,	offset -2
;## #	FRAME	AUTO	(rSaveFlag)	size  1,	offset -1
;## #  REGISTER ARG    (rSaveFlag)   size   1,   REGISTER R1L
;## #  REGISTER ARG    (  rblock)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(13)	Context Size(5)

	._type	549,'v'
	._type	550,'x',549,2
	._type	550,'m','rSaveFlag',0,3
	._type	550,'m','rblock',0,18
	._func	'Save_SortIndex','G',13,550,$Save_SortIndex,0
	._inspect	'F', 's', "Save_SortIndex", "$Save_SortIndex", 'G', 18
	.align
	._line	2212
	.glb	$Save_SortIndex
$Save_SortIndex:
	enter	#0dH
	mov.b	R1L,-1[FB]	;  rSaveFlag  rSaveFlag 
	._block
	._var	'rSaveFlag','A',3,-1
	._var	'rblock','A',18,0
	._var	'flag','A',3,-2
	._type	551,'Z',6,3
	._var	'nSave','A',551,-13
	._var	'temp','A',18,-5
	._var	'temp1','A',18,-7
	._var	'vd_check','A',3,-3
	._line	2213
	mov.b	#00H,-2[FB]	;  flag 
	._line	2218
	mov.b	_int2ic_addr,-3[FB]	;  vd_check 
	._line	2221
	mov.b	_LoadRecord,R0L
	bclr	07H,R0
	mov.b	_LoadRecord+2,R0H
	bclr	0fH,R0
	cmp.b	R0L,R0H
	jleu	L3171
	mov.b	_LoadRecord,R0L
	and.b	#7fH,R0L
	jz	L3171
	._line	2222
	._block
	._line	2223
	mov.w	_LoadRecord,R0	;  nblock 
	._block
	._var	'nblock','R',18,5
	._line	2224
	mov.w	R0,R1	;  nblock  nblock 
	._eblock
	shl.w	#-07H,R0
	._block
	._var	'nblock','R',18,6
	mov.w	R0,-5[FB]	;  temp 
	._line	2225
	and.w	#007fH,R1
	._eblock
	mov.w	R1,-7[FB]	;  temp1 
	._line	2226
	mov.b	#00H,R0H	;  unc 
	._block
	._var	'unc','R',3,2
	._eblock
	mov.b	R0H,R0L	;  unc  unc 
	._block
	._var	'unc','R',3,1
L3055:
	._line	2227
	mov.b	R0L,R1L
	mov.b	#00H,R1H
	mova	-13[FB],A0	;  nSave 
	add.w	R1,A0
	mov.b	#0ffH,[A0]
	inc.b	R0L	;  unc 
	cmp.b	#06H,R0L	;  unc 
	jltu	L3055
	._eblock
	._line	2228
	mov.b	#0ffH,-2[FB]	;  flag 
	._eblock
	._line	2229
	jmp	L3069
	._line	2230
L3171:
	._line	2231
	._block
	._line	2232
	mov.w	_LoadRecord+2,R0	;  nblock 
	._block
	._var	'nblock','R',18,5
	._line	2233
	mov.w	R0,R1	;  nblock  nblock 
	._eblock
	shl.w	#-07H,R0
	._block
	._var	'nblock','R',18,6
	mov.w	R0,-5[FB]	;  temp 
	._line	2234
	and.w	#007fH,R1
	._eblock
	mov.w	R1,-7[FB]	;  temp1 
	._line	2235
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#0006H
	._inspect	'S', 'p', 2
	mova	-13[FB],R2	;  nSave 
	mov.w	-5[FB],R1	;  temp 
	mul.w	#0006H,R1
	add.w	#4036H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2235
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._line	2236
L3069:
	._line	2239
	mov.b	#00H,R1H	;  unc 
	._block
	._var	'unc','R',3,4
	._eblock
	mov.b	R1H,R0L	;  unc  unc 
	._block
	._var	'unc','R',3,1
L3095:
	._eblock
	._line	2240
	._block
	._block
	._var	'unc','R',3,1
	._line	2241
	mov.w	#0001H,A0
	mov.b	R0L,R1H	;  unc  unc 
	._eblock
	shl.w	R1H,A0
	._block
	._var	'unc','R',3,4
	mov.b	A0,R0L
	and.b	-1[FB],R0L	;  rSaveFlag 
	jeq	L3173
	mov.b	R1H,R0L
	mov.b	#00H,R0H
	mova	-13[FB],A0	;  nSave 
	add.w	R0,A0
	cmp.b	#0ffH,[A0]
	jne	L3173
	._eblock
	._line	2242
	._block
	._block
	._var	'unc','R',3,4
	._line	2243
	mova	-13[FB],A0	;  nSave 
	add.w	R0,A0
	mov.b	-7[FB],[A0]	;  temp1 
	._line	2244
	mov.b	#0ffH,-2[FB]	;  flag 
	._eblock
L3173:
	add.b	#01H,R1H	;  unc 
	mov.b	R1H,R0L	;  unc  unc 
	._eblock
	cmp.b	#06H,R0L	;  unc 
	jltu	L3095
	._eblock
	._line	2248
	cmp.b	#0ffH,-2[FB]	;  flag 
	jne	L3135
	._line	2249
	._block
	._line	2250
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0006H
	._inspect	'S', 'p', 2
	mova	-13[FB],R2	;  nSave 
	mov.w	-5[FB],R1	;  temp 
	mul.w	#0006H,R1
	add.w	#4036H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2250
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
L3135:
	._line	2255
	mov.b	-3[FB],R0L	;  vd_check 
	and.b	#1fH,R0L
	mov.b	R0L,_int2ic_addr
	._eblock
	._line	2256
	exitd	
E42:
M54:
	._efunc	M54
	._inspect	'F', 'd', "Save_SortIndex", "$Save_SortIndex", 'G', 2212, 0, 00h, 0
	._inspect	'F', 't', "Save_SortIndex", 'G', 550
	._inspect	'V', 'r', "int2ic_addr", 'G', 2218, 1, 1, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2221, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2221, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2221, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2223, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 2232, 46, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2235, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2250, 0, 00h, 0
	._inspect	'V', 'r', "int2ic_addr", 'G', 2255, 1, 1, 0, 00h
	._inspect	'F', 'e', "Save_SortIndex", "$Save_SortIndex", 'G', 4, 0


;## #	FUNCTION DateTimeNoSec5ByteTo4Byte
;## #	FRAME	AUTO	(      t4)	size  2,	offset -4
;## #	FRAME	AUTO	(      t5)	size  2,	offset -2
;## #  REGISTER ARG    (      t5)   size   2,   REGISTER R1
;## #  REGISTER ARG    (      t4)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	552,'v'
	._type	553,'S','DATE_TIMENOSEC_5BYTE',5
	._type	553,'m','Year',3,0
	._type	553,'m','Month',3,1
	._type	553,'m','Day',3,2
	._type	553,'m','Hour',3,3
	._type	553,'m','Minute',3,4
	._type	554,'O',553
	._type	555,'O',447
	._type	556,'x',552,2
	._type	556,'m','t5',0,554
	._type	556,'m','t4',0,555
	._func	'DateTimeNoSec5ByteTo4Byte','G',4,556,$DateTimeNoSec5ByteTo4Byte,0
	._inspect	'F', 's', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 9
	.align
	._line	2259
	.glb	$DateTimeNoSec5ByteTo4Byte
$DateTimeNoSec5ByteTo4Byte:
	enter	#04H
	mov.w	R1,-2[FB]	;  t5  t5 
	mov.w	R2,-4[FB]	;  t4  t4 
	._block
	._type	557,'O',553
	._var	't5','A',557,-2
	._type	558,'O',447
	._var	't4','A',558,-4
	._line	2260
	mov.w	-2[FB],A0	;  t5 
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2260
	jsr	$OB_H
	mov.b	#00H,R0H
	mov.w	#0000H,R2
	mov.w	-4[FB],A0	;  t4 
	and.w	#0ff80H,[A0]
	and.w	#007fH,R0
	or.w	R0,[A0]
	._line	2261
	mov.w	-2[FB],A0	;  t5 
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2261
	jsr	$OB_H
	mov.b	#00H,R0H
	mov.w	#0000H,R2
	mov.w	-4[FB],A0	;  t4 
	shl.w	#07H,R0
	and.w	#0f87fH,[A0]
	and.w	#0780H,R0
	or.w	R0,[A0]
	._line	2262
	mov.w	-2[FB],A0	;  t5 
	mov.b	0002H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2262
	jsr	$OB_H
	mov.b	#00H,R0H
	mov.w	#0000H,R2
	mov.w	-4[FB],A0	;  t4 
	shl.w	#8H,R0
	shl.w	#03H,R0
	and.w	#07ffH,[A0]
	and.w	#0f800H,R0
	or.w	R0,[A0]
	._line	2263
	mov.w	-2[FB],A0	;  t5 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2263
	jsr	$OB_H
	mov.b	#00H,R0H
	mov.w	#0000H,R2
	mov.w	-4[FB],A0	;  t4 
	mov.w	R0,R2
	and.w	#0ffe0H,2[A0]
	and.w	#001fH,R2
	or.w	R2,2[A0]
	._line	2264
	mov.w	-2[FB],A0	;  t5 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2264
	jsr	$OB_H
	mov.b	#00H,R0H
	mov.w	#0000H,R2
	mov.w	-4[FB],A0	;  t4 
	mov.w	R0,R2
	mov.w	#0000H,R0
	shl.l	#05H,R2R0
	and.w	#0f81fH,2[A0]
	and.w	#07e0H,R2
	or.w	R2,2[A0]
	._eblock
	._line	2265
	exitd	
E43:
M55:
	._efunc	M55
	._inspect	'F', 'd', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 2259, 0, 00h, 0
	._inspect	'F', 't', "DateTimeNoSec5ByteTo4Byte", 'G', 556
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2260, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2261, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2262, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2263, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2264, 0, 00h, 0
	._inspect	'F', 'e', "DateTimeNoSec5ByteTo4Byte", "$DateTimeNoSec5ByteTo4Byte", 'G', 0, 0


;## #	FUNCTION DateTimeNoSec4ByteTo5Byte
;## #	FRAME	AUTO	(      t5)	size  2,	offset -4
;## #	FRAME	AUTO	(      t4)	size  2,	offset -2
;## #  REGISTER ARG    (      t4)   size   2,   REGISTER R1
;## #  REGISTER ARG    (      t5)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(4)	Context Size(5)

	._type	559,'v'
	._type	560,'O',447
	._type	561,'O',553
	._type	562,'x',559,2
	._type	562,'m','t4',0,560
	._type	562,'m','t5',0,561
	._func	'DateTimeNoSec4ByteTo5Byte','G',4,562,$DateTimeNoSec4ByteTo5Byte,0
	._inspect	'F', 's', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 9
	.align
	._line	2268
	.glb	$DateTimeNoSec4ByteTo5Byte
$DateTimeNoSec4ByteTo5Byte:
	enter	#04H
	mov.w	R1,-2[FB]	;  t4  t4 
	mov.w	R2,-4[FB]	;  t5  t5 
	._block
	._type	563,'O',447
	._var	't4','A',563,-2
	._type	564,'O',553
	._var	't5','A',564,-4
	._line	2269
	mov.w	-2[FB],A0	;  t4 
	mov.w	[A0],R0
	mov.w	2[A0],R2
	and.w	#007fH,R0
	mov.w	#0000H,R2
	mov.b	R0L,R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2269
	jsr	$OH_B
	mov.w	-4[FB],A0	;  t5 
	mov.b	R0L,[A0]
	._line	2270
	mov.w	-2[FB],A0	;  t4 
	mov.w	[A0],R0
	mov.w	2[A0],R2
	shl.w	#-7,R0
	and.w	#000fH,R0
	mov.w	#0000H,R2
	mov.b	R0L,R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2270
	jsr	$OH_B
	mov.w	-4[FB],A0	;  t5 
	mov.b	R0L,0001H[A0]
	._line	2271
	mov.w	-2[FB],A0	;  t4 
	mov.w	[A0],R0
	mov.w	2[A0],R2
	shl.l	#-8,R2R0
	shl.l	#-3,R2R0
	and.w	#001fH,R0
	mov.w	#0000H,R2
	mov.b	R0L,R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2271
	jsr	$OH_B
	mov.w	-4[FB],A0	;  t5 
	mov.b	R0L,0002H[A0]
	._line	2272
	mov.w	-2[FB],A0	;  t4 
	mov.w	[A0],R0
	mov.w	2[A0],R2
	mov.w	R2,R0
	and.w	#001fH,R0
	mov.w	#0000H,R2
	mov.b	R0L,R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2272
	jsr	$OH_B
	mov.w	-4[FB],A0	;  t5 
	mov.b	R0L,0003H[A0]
	._line	2273
	mov.w	-2[FB],A0	;  t4 
	mov.w	[A0],R0
	mov.w	2[A0],R2
	mov.w	R2,R0
	shl.w	#-5,R0
	and.w	#003fH,R0
	mov.w	#0000H,R2
	mov.b	R0L,R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2273
	jsr	$OH_B
	mov.w	-4[FB],A0	;  t5 
	mov.b	R0L,0004H[A0]
	._eblock
	._line	2274
	exitd	
E44:
M56:
	._efunc	M56
	._inspect	'F', 'd', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 2268, 0, 00h, 0
	._inspect	'F', 't', "DateTimeNoSec4ByteTo5Byte", 'G', 562
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2269, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2270, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2271, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2272, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2273, 0, 00h, 0
	._inspect	'F', 'e', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 0


;## #	FUNCTION CompDateTime4ByteAnd5Byte
;## #	FRAME	AUTO	(       t)	size  5,	offset -7
;## #	FRAME	AUTO	(      t5)	size  2,	offset -2
;## #  REGISTER ARG    (      t4)   size   2,   REGISTER R1
;## #  REGISTER ARG    (      t5)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(7)	Context Size(5)

	._type	565,'O',447
	._type	566,'O',553
	._type	567,'x',19,2
	._type	567,'m','t4',0,565
	._type	567,'m','t5',0,566
	._func	'CompDateTime4ByteAnd5Byte','G',7,567,$CompDateTime4ByteAnd5Byte,0
	._inspect	'F', 's', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 12
	.align
	._line	2277
	.glb	$CompDateTime4ByteAnd5Byte
$CompDateTime4ByteAnd5Byte:
	enter	#07H
	mov.w	R2,-2[FB]	;  t5  t5 
	._block
	._type	568,'O',447
	._var	't4','A',568,0
	._type	569,'O',553
	._var	't5','A',569,-2
	._var	't','A',553,-7
	._line	2281
	._block
	._type	570,'O',447
	._var	't4','R',570,6
	mova	-7[FB],R2	;  t 
	._eblock
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 2281
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	2283
	push.b	#05H
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R2	;  t5 
	mova	-7[FB],R1	;  t 
	._inspect	'S', 'c', "CompareBytes", "$CompareBytes", 'G', 0, 2283
	jsr	$CompareBytes
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'result','R',3,1
	._line	2285
	._eblock
	exitd	
E45:
	._eblock
M57:
	._efunc	M57
	._inspect	'F', 'd', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 2277, 0, 00h, 0
	._inspect	'F', 't', "CompDateTime4ByteAnd5Byte", 'G', 567
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 2281, 0, 00h, 0
	._inspect	'F', 'r', "CompareBytes", "$CompareBytes", 'G', 2283, 0, 00h, 0
	._inspect	'F', 'e', "CompDateTime4ByteAnd5Byte", "$CompDateTime4ByteAnd5Byte", 'G', 1, 0


;## #	FUNCTION ConverseString
;## #	FRAME	AUTO	( __TMP12)	size  2,	offset -2
;## #  FRAME   ARG (       n)  size   1,    offset 5
;## #  REGISTER ARG    (       p)   size   2,   REGISTER R1
;## #	ARG Size(1)	Auto Size(2)	Context Size(5)

	._type	571,'v'
	._type	572,'O',3
	._type	573,'x',571,2
	._type	573,'m','p',0,572
	._type	573,'m','n',0,3
	._func	'ConverseString','G',2,573,$ConverseString,0
	._inspect	'F', 's', "ConverseString", "$ConverseString", 'G', 7
	.align
	._line	2289
	.glb	$ConverseString
$ConverseString:
	enter	#02H
	._block
	._type	574,'O',3
	._var	'p','A',574,0
	._var	'n','A',3,5
	._line	2293
	._block
	._type	575,'O',3
	._var	'p','R',575,6
	mov.b	#00H,R0L	;  i 
	._eblock
	._block
	._var	'i','R',3,1
	._type	576,'O',3
	._var	'p','R',576,6
L3179:
	._line	2293
	mov.b	5[FB],R0H	;  n 
	shl.b	#-1,R0H
	cmp.b	R0H,R0L	;  i 
	jgeu	L3183
	._eblock
	._line	2294
	._block
	._block
	._var	'i','R',3,1
	._type	577,'O',3
	._var	'p','R',577,6
	._line	2295
	mov.b	R0L,A0
	mov.w	R1,A1	;  p  p 
	._eblock
	add.w	A0,R1
	._block
	._var	'i','R',3,1
	._type	578,'O',3
	._var	'p','R',578,10
	mov.w	A0,R2
	._eblock
	mov.w	R1,A0
	mov.b	[A0],R0H	;  j 
	._block
	._var	'i','R',3,1
	._var	'j','R',3,2
	._type	579,'O',3
	._var	'p','R',579,10
	._line	2296
	mov.b	5[FB],R1L	;  n 
	mov.b	#00H,R1H
	add.w	#-1,R1
	mov.w	R1,R3
	._eblock
	sub.w	R2,R1
	._block
	._var	'i','R',3,1
	._var	'j','R',3,2
	._type	580,'O',3
	._var	'p','R',580,10
	mov.w	A1,-2[FB]	;  p  __TMP12 
	._eblock
	add.w	R1,A1
	._block
	._var	'i','R',3,1
	._var	'j','R',3,2
	._type	581,'O',3
	._var	'p','A',581,-2
	mov.b	[A1],[A0]
	._line	2297
	sub.w	R2,R3
	mov.w	-2[FB],A0	;  __TMP12  p 
	._eblock
	add.w	R3,A0
	._block
	._var	'i','R',3,1
	._var	'j','R',3,2
	._type	582,'O',3
	._var	'p','A',582,-2
	mov.b	R0H,[A0]	;  j 
	._eblock
	._block
	._var	'i','R',3,1
	._type	583,'O',3
	._var	'p','A',583,-2
	._eblock
	inc.b	R0L	;  i 
	mov.w	-2[FB],R1	;  __TMP12  p 
	._eblock
	jmp	L3179
	._block
	._type	584,'O',3
	._var	'p','A',584,-2
L3183:
	._eblock
	._eblock
	._line	2300
	exitd	
E46:
M58:
	._efunc	M58
	._inspect	'F', 'd', "ConverseString", "$ConverseString", 'G', 2289, 0, 00h, 0
	._inspect	'F', 't', "ConverseString", 'G', 573
	._inspect	'F', 'e', "ConverseString", "$ConverseString", 'G', 0, 0


;## #	FUNCTION Find_Data_Record_New
;## #	FRAME	AUTO	(       i)	size  2,	offset -8
;## #	FRAME	AUTO	(     ret)	size  2,	offset -6
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -4
;## #	FRAME	AUTO	(   rPage)	size  2,	offset -2
;## #	FRAME	AUTO	(findflag)	size  1,	offset 6
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  FRAME   ARG (    kind)  size   1,    offset 6
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R2
;## #	ARG Size(2)	Auto Size(8)	Context Size(5)

	._type	585,'O',18
	._type	586,'O',312
	._type	587,'x',16,4
	._type	587,'m','rPage',0,585
	._type	587,'m','rDate',0,586
	._type	587,'m','sort',0,3
	._type	587,'m','kind',0,3
	._func	'Find_Data_Record_New','G',8,587,$Find_Data_Record_New,0
	._inspect	'F', 's', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 13
	.align
	._line	2303
	.glb	$Find_Data_Record_New
$Find_Data_Record_New:
	enter	#08H
	mov.w	R1,-2[FB]	;  rPage  rPage 
	mov.w	R2,-4[FB]	;  rDate  rDate 
	._block
	._type	588,'O',18
	._var	'rPage','A',588,-2
	._type	589,'O',312
	._var	'rDate','A',589,-4
	._var	'sort','A',3,5
	._var	'kind','A',3,6
	._var	'ret','A',16,-6
	._var	'findflag','A',3,6
	._var	'i','A',18,-8
	._line	2308
	push.b	5[FB]	;  sort 
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R2	;  rPage 
	mov.w	-4[FB],R1	;  rDate 
	._inspect	'S', 'c', "FindRecord", "$FindRecord", 'G', 0, 2308
	jsr	$FindRecord
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-6[FB]	;  ret 
	jne	L3371
	._line	2309
	._block
	._line	2310
	tst.b	#02H,_LoadRecord+39
	jnz	L3371
	._line	2311
	._block
	._line	2312
	mov.w	-2[FB],A0	;  rPage 
	cmp.w	_LoadRecord+2,[A0]
	jleu	L3371
	._line	2313
	._block
	._line	2314
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._eblock
	._eblock
L3371:
	._line	2319
	tst.b	#08H,_Meter_Parameter+139
	jnz	L3373
	mov.b	6[FB],R0L	;  kind 
	jne	L3373
	._line	2320
	._block
	._line	2321
	mov.w	-6[FB],R0	;  ret 
	exitd	
	._eblock
L3373:
	._line	2324
	mov.b	#00H,6[FB]	;  findflag 
	._line	2326
	cmp.w	#0000H,-6[FB]	;  ret 
	jeq	L3375
	._line	2327
	._block
	._line	2328
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#016eH
	._inspect	'S', 'p', 2
	mov.w	#_Co+300,R2
	mov.w	#6dc3H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2328
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2329
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 2329
	jsr	_FeedWatchdog
	._line	2330
	mov.w	-4[FB],R1	;  rDate 
	._inspect	'S', 'c', "AddOneHour", "$AddOneHour", 'G', 0, 2330
	jsr	$AddOneHour
	._line	2331
	mov.w	#0000H,-8[FB]	;  i 
L3253:
	._line	2332
	._block
	._line	2333
	mov.w	-4[FB],R1	;  rDate 
	._inspect	'S', 'c', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 0, 2333
	jsr	$ThisDayHaveRecord
	cmp.w	#0000H,R0
	jne	L3265
	._line	2334
	._block
	._line	2335
	mov.b	#01H,6[FB]	;  findflag 
	._line	2336
	jmp	L3257
	._eblock
L3265:
	._line	2338
	cmp.w	#016dH,-8[FB]	;  i 
	jgeu	L3275
	._line	2339
	._block
	._line	2340
	mov.w	-4[FB],R1	;  rDate 
	._inspect	'S', 'c', "AddOneDay", "$AddOneDay", 'G', 0, 2340
	jsr	$AddOneDay
	._eblock
L3275:
	add.w	#0001H,-8[FB]	;  i 
	cmp.w	#016eH,-8[FB]	;  i 
	jltu	L3253
L3257:
	._eblock
	._line	2343
	cmp.b	#01H,6[FB]	;  findflag 
	jne	L3375
	._line	2344
	._block
	._line	2345
	push.b	5[FB]	;  sort 
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R2	;  rPage 
	mov.w	-4[FB],R1	;  rDate 
	._inspect	'S', 'c', "FindRecord", "$FindRecord", 'G', 0, 2345
	jsr	$FindRecord
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.w	R0,-6[FB]	;  ret 
	._eblock
	._eblock
L3375:
	._line	2348
	cmp.w	#0000H,-6[FB]	;  ret 
	jne	L3379
	._line	2349
	._block
	._line	2350
	tst.b	#02H,_LoadRecord+39
	jnz	L3379
	._line	2351
	._block
	._line	2352
	mov.w	-2[FB],A0	;  rPage 
	cmp.w	_LoadRecord+2,[A0]
	jleu	L3379
	._line	2353
	._block
	._line	2354
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._eblock
	._eblock
L3379:
	._line	2359
	mov.w	-6[FB],R0	;  ret 
	exitd	
E47:
	._eblock
M59:
	._efunc	M59
	._inspect	'F', 'd', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 2303, 0, 00h, 0
	._inspect	'F', 't', "Find_Data_Record_New", 'G', 587
	._inspect	'F', 'r', "FindRecord", "$FindRecord", 'G', 2308, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 2310, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 2312, 46, 0, 0, 00h
	._inspect	'V', 'r', "Meter_Parameter", 'G', 2319, 623, 0, 0, 08000000h
	._inspect	'V', 'r', "Co", 'G', 2328, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2328, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 2329, 0, 00h, 0
	._inspect	'F', 'r', "AddOneHour", "$AddOneHour", 'G', 2330, 0, 00h, 0
	._inspect	'F', 'r', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 2333, 0, 00h, 0
	._inspect	'F', 'r', "AddOneDay", "$AddOneDay", 'G', 2340, 0, 00h, 0
	._inspect	'F', 'r', "FindRecord", "$FindRecord", 'G', 2345, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 2350, 46, 0, 0, 02000000h
	._inspect	'V', 'r', "LoadRecord", 'G', 2352, 46, 0, 0, 00h
	._inspect	'F', 'e', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 4, 0


;## #	FUNCTION find_lst_record_frm_tm
;## #	FRAME	AUTO	(    Date)	size  6,	offset -21
;## #	FRAME	AUTO	(      tm)	size  6,	offset -15
;## #	FRAME	AUTO	( tmp_blk)	size  2,	offset -9
;## #	FRAME	AUTO	(     blk)	size  2,	offset -7
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -5
;## #	FRAME	AUTO	(   rPage)	size  2,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset -1
;## #  FRAME   ARG (    sort)  size   1,    offset 5
;## #  REGISTER ARG    (   rPage)   size   2,   REGISTER R1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R2
;## #	ARG Size(1)	Auto Size(21)	Context Size(5)

	._type	590,'O',18
	._type	591,'O',312
	._type	592,'x',16,3
	._type	592,'m','rPage',-3,590
	._type	592,'m','rDate',-5,591
	._type	592,'m','sort',5,3
	._func	'find_lst_record_frm_tm','G',21,592,$find_lst_record_frm_tm,0
	._inspect	'F', 's', "find_lst_record_frm_tm", "$find_lst_record_frm_tm", 'G', 26
	.align
	._line	2363
	.glb	$find_lst_record_frm_tm
$find_lst_record_frm_tm:
	enter	#015H
	mov.w	R1,-3[FB]	;  rPage  rPage 
	mov.w	R2,-5[FB]	;  rDate  rDate 
	._block
	._type	593,'O',18
	._var	'rPage','A',593,-3
	._type	594,'O',312
	._var	'rDate','A',594,-5
	._var	'sort','A',3,5
	._var	'tm','A',312,-15
	._var	'blk','A',18,-7
	._var	'tmp_blk','A',18,-9
	._var	'i','A',3,-1
	._var	'Date','A',312,-21
	._var	'sz','A',3,0
	._line	2372
	mov.w	-3[FB],A0	;  rPage 
	mov.w	#0ffffH,[A0]
	._line	2373
	push.b	#06H
	._inspect	'S', 'p', 1
	mov.w	-5[FB],R2	;  rDate 
	mova	-15[FB],R1	;  tm 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2373
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2374
	push.b	#01H
	._inspect	'S', 'p', 1
	push.b	5[FB]	;  sort 
	._inspect	'S', 'p', 1
	mova	-15[FB],R2	;  tm 
	mova	-7[FB],R1	;  blk 
	._inspect	'S', 'c', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 0, 2374
	jsr	$Find_Data_Record_New
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._block
	._var	'ret','R',16,5
	._line	2375
	cmp.w	#0000H,R0	;  ret 
	jne	L3423
	._eblock
	._line	2376
	._block
	._line	2377
	mov.w	-7[FB],-9[FB]	;  blk  tmp_blk 
	._line	2378
	mov.b	#00H,-1[FB]	;  i 
L3381:
	._line	2379
	._block
	._line	2380
	cmp.w	#0000H,-9[FB]	;  tmp_blk 
	jleu	L3393
	._line	2381
	._block
	._line	2382
	add.w	#-1,-9[FB]	;  tmp_blk 
	._eblock
	._line	2383
	jmp	L3405
	._line	2384
L3393:
	._line	2385
	._block
	._line	2386
	tst.b	#02H,_LoadRecord+39
	jnz	L3403
	._line	2387
	._block
	._line	2388
	mov.w	#0ffffH,R0
	exitd	
	._eblock
	._line	2390
L3403:
	._line	2391
	._block
	._line	2392
	mov.w	#0f5ffH,-9[FB]	;  tmp_blk 
	._eblock
	._line	2393
L3405:
	._eblock
	._line	2395
	push.b	#03H
	._inspect	'S', 'p', 1
	mova	-9[FB],R1	;  tmp_blk 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 2395
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	2396
	cmp.w	#0000H,R0	;  ret 
	jne	L3413
	._eblock
	._line	2397
	._block
	._line	2398
	mov.w	-3[FB],A0	;  rPage 
	mov.w	-9[FB],[A0]	;  tmp_blk 
	._line	2399
	jmp	L3437
	._eblock
L3413:
	inc.b	-1[FB]	;  i 
	cmp.b	#08H,-1[FB]	;  i 
	jltu	L3381
	._eblock
	._eblock
	._line	2425
	jmp	L3437
	._line	2426
L3423:
	._line	2427
	._block
	._line	2428
	push.b	5[FB]	;  sort 
	._inspect	'S', 'p', 1
	mova	-7[FB],R1	;  blk 
	._inspect	'S', 'c', "Find_Near_Record", "$Find_Near_Record", 'G', 0, 2428
	jsr	$Find_Near_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2429
	push.b	#03H
	._inspect	'S', 'p', 1
	mova	-7[FB],R1	;  blk 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 2429
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	2430
	cmp.w	#0000H,R0	;  ret 
	jeq	L3433
	._eblock
	._line	2431
	._block
	._line	2432
	mov.w	#0ffffH,R0
	exitd	
	._eblock
L3433:
	._line	2434
	mova	-21[FB],R2	;  Date 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 2434
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	2435
	push.b	#05H
	._inspect	'S', 'p', 1
	mov.w	-5[FB],R2	;  rDate 
	mova	-21[FB],R1	;  Date 
	._inspect	'S', 'c', "My_Memcmp", "$My_Memcmp", 'G', 0, 2435
	jsr	$My_Memcmp
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.b	#02H,R0L
	jne	L3437
	._line	2436
	._block
	._line	2437
	mov.w	-3[FB],A0	;  rPage 
	mov.w	-7[FB],[A0]	;  blk 
	._eblock
L3437:
	._eblock
	._line	2441
	mov.w	-3[FB],A0	;  rPage 
	cmp.w	#0ffffH,[A0]
	stzx	#0ffH,#00H,R0L
	mov.b	R0L,R0H
	._line	2442
	._block
	._line	2443
	exitd	
E48:
	._eblock
	._eblock
M60:
	._efunc	M60
	._inspect	'F', 'd', "find_lst_record_frm_tm", "$find_lst_record_frm_tm", 'G', 2363, 0, 00h, 0
	._inspect	'F', 't', "find_lst_record_frm_tm", 'G', 592
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2373, 0, 00h, 0
	._inspect	'F', 'r', "Find_Data_Record_New", "$Find_Data_Record_New", 'G', 2374, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 2386, 46, 0, 0, 02000000h
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 2395, 0, 00h, 0
	._inspect	'F', 'r', "Find_Near_Record", "$Find_Near_Record", 'G', 2428, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 2429, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2434, 1280, 0, 0, 00h
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 2434, 0, 00h, 0
	._inspect	'F', 'r', "My_Memcmp", "$My_Memcmp", 'G', 2435, 0, 00h, 0
	._inspect	'F', 'e', "find_lst_record_frm_tm", "$find_lst_record_frm_tm", 'G', 2, 0


;## #	FUNCTION SaveDayIndex
;## #	FRAME	AUTO	(  nhours)	size  3,	offset -10
;## #	FRAME	AUTO	(   ndays)	size  2,	offset -7
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -5
;## #	FRAME	AUTO	(savehoursflag)	size  1,	offset -3
;## #	FRAME	AUTO	(  nyears)	size  1,	offset -2
;## #	FRAME	AUTO	(       i)	size  1,	offset -1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(10)	Context Size(5)

	._type	595,'v'
	._type	596,'O',312
	._type	597,'x',595,1
	._type	597,'m','rDate',0,596
	._func	'SaveDayIndex','G',10,597,$SaveDayIndex,0
	._inspect	'F', 's', "SaveDayIndex", "$SaveDayIndex", 'G', 15
	.align
	._line	2453
	.glb	$SaveDayIndex
$SaveDayIndex:
	enter	#0aH
	mov.w	R1,-5[FB]	;  rDate  rDate 
	._block
	._type	598,'O',312
	._var	'rDate','A',598,-5
	._var	'i','A',3,-1
	._var	'savehoursflag','A',3,-3
	._type	599,'Z',3,3
	._var	'nhours','A',599,-10
	._var	'nyears','A',3,-2
	._var	'ndays','A',18,-7
	._line	2460
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2460
	jsr	$OB_H
	mov.b	R0L,-1[FB]	;  i 
	._line	2461
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0002H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2461
	jsr	$OB_H
	mov.b	-1[FB],A0	;  i 
	dec.w	A0
	shl.w	#01H,A0
	lde.w	_day_num[A0],R1
	mov.b	#00H,R0H
	add.w	R0,R1
	add.w	#-1,R1
	mov.w	R1,-7[FB]	;  ndays 
	._line	2463
	cmp.w	#016eH,R1
	jgeu	L3545
	._line	2464
	._block
	._line	2465
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 2465
	jsr	_FeedWatchdog
	._line	2467
	mov.w	#0000H,-3[FB]	;  savehoursflag 
	._line	2468
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#0001H
	._inspect	'S', 'p', 2
	mova	-1[FB],R2	;  i 
	mov.w	-7[FB],R1	;  ndays 
	add.w	#6dc3H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2468
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2469
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#0003H
	._inspect	'S', 'p', 2
	mova	-10[FB],R2	;  nhours 
	mov.w	-7[FB],R1	;  ndays 
	mul.w	#0003H,R1
	add.w	#6f31H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2469
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2470
	mov.w	-5[FB],A0	;  rDate 
	mov.b	[A0],R0L
	mov.b	#00H,R0H
	add.w	#0001H,R0
	mov.b	-1[FB],R1L	;  i 
	mov.b	#00H,R1H
	cmp.w	R0,R1
	jeq	L3473
	._line	2471
	._block
	._line	2472
	mov.b	[A0],-2[FB]	;  nyears 
	inc.b	-2[FB]	;  nyears 
	._line	2473
	mov.w	#0000H,-10[FB]	;  nhours 
	._line	2475
	mov.b	#00H,-8[FB]	;  nhours 
	._eblock
L3473:
	._line	2477
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2477
	jsr	$OB_H
	mov.b	R0L,-1[FB]	;  i 
	._line	2478
	cmp.b	#18H,-1[FB]	;  i 
	jgeu	L3547
	._line	2479
	._block
	._line	2480
	mov.b	-1[FB],R0L	;  i 
	and.b	#07H,R0L
	mov.b	R0L,A0
	lde.b	_BIT_UNC[A0],R0L
	mov.b	-1[FB],R0H	;  i 
	shl.b	#-3,R0H
	mov.b	R0H,R1L
	mov.b	#00H,R1H
	mova	-10[FB],A0	;  nhours 
	add.w	R1,A0
	and.b	[A0],R0L
	jne	L3547
	._line	2481
	._block
	._line	2482
	mov.b	-1[FB],R0L	;  i 
	and.b	#07H,R0L
	mov.b	R0L,A0
	lde.b	_BIT_UNC[A0],R0L
	mov.b	-1[FB],R0H	;  i 
	shl.b	#-3,R0H
	mov.b	R0H,R1L
	mov.b	#00H,R1H
	mova	-10[FB],A0	;  nhours 
	add.w	R1,A0
	mov.b	-1[FB],R0H	;  i 
	shl.b	#-3,R0H
	mov.b	R0H,R1L
	mov.b	#00H,R1H
	mova	-10[FB],A1	;  nhours 
	add.w	R1,A1
	mov.b	[A0],[A1]
	or.b	R0L,[A1]
	._line	2483
	mov.b	#01H,-3[FB]	;  savehoursflag 
	._eblock
	._eblock
L3547:
	._line	2486
	mov.b	-2[FB],R0L	;  nyears 
	jeq	L3503
	._line	2487
	._block
	._line	2488
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0001H
	._inspect	'S', 'p', 2
	mova	-2[FB],R2	;  nyears 
	mov.w	-7[FB],R1	;  ndays 
	add.w	#6dc3H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2488
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
L3503:
	._line	2490
	cmp.b	#01H,-3[FB]	;  savehoursflag 
	jne	L3545
	._line	2491
	._block
	._line	2492
	push.w	#0000H
	._inspect	'S', 'p', 2
	push.w	#0003H
	._inspect	'S', 'p', 2
	mova	-10[FB],R2	;  nhours 
	mov.w	-7[FB],R1	;  ndays 
	mul.w	#0003H,R1
	add.w	#6f31H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2492
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._eblock
	._eblock
L3545:
	._eblock
	._line	2496
	exitd	
E49:
M61:
	._efunc	M61
	._inspect	'F', 'd', "SaveDayIndex", "$SaveDayIndex", 'G', 2453, 0, 00h, 0
	._inspect	'F', 't', "SaveDayIndex", 'G', 597
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2460, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2461, 0, 00h, 0
	._inspect	'V', 'r', "day_num", 'G', 2461, 24, 0, 0, 00h
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 2465, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2468, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2469, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2477, 0, 00h, 0
	._inspect	'V', 'r', "BIT_UNC", 'G', 2480, 8, 0, 0, 00h
	._inspect	'V', 'r', "BIT_UNC", 'G', 2482, 8, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2488, 0, 00h, 0
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2492, 0, 00h, 0
	._inspect	'F', 'e', "SaveDayIndex", "$SaveDayIndex", 'G', 4, 0


;## #	FUNCTION ThisDayHaveRecord
;## #	FRAME	AUTO	(  nhours)	size  3,	offset -10
;## #	FRAME	AUTO	(   ndays)	size  2,	offset -7
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -5
;## #	FRAME	AUTO	(starthour)	size  1,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset -2
;## #	FRAME	AUTO	(  result)	size  1,	offset -1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(10)	Context Size(5)

	._type	600,'O',312
	._type	601,'x',16,1
	._type	601,'m','rDate',0,600
	._func	'ThisDayHaveRecord','G',10,601,$ThisDayHaveRecord,0
	._inspect	'F', 's', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 15
	.align
	._line	2501
	.glb	$ThisDayHaveRecord
$ThisDayHaveRecord:
	enter	#0aH
	mov.w	R1,-5[FB]	;  rDate  rDate 
	._block
	._type	602,'O',312
	._var	'rDate','A',602,-5
	._var	'i','A',3,-2
	._var	'ndays','A',18,-7
	._type	603,'Z',3,3
	._var	'nhours','A',603,-10
	._var	'starthour','A',3,-3
	._var	'result','A',3,-1
	._line	2509
	mov.b	#0ffH,-1[FB]	;  result 
	._line	2511
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2511
	jsr	$OB_H
	mov.b	R0L,-2[FB]	;  i 
	._line	2512
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0002H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2512
	jsr	$OB_H
	mov.b	-2[FB],A0	;  i 
	dec.w	A0
	shl.w	#01H,A0
	lde.w	_day_num[A0],R1
	mov.b	#00H,R0H
	add.w	R0,R1
	add.w	#-1,R1
	mov.w	R1,-7[FB]	;  ndays 
	._line	2513
	mov.w	-5[FB],A0	;  rDate 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2513
	jsr	$OB_H
	mov.b	R0L,-3[FB]	;  starthour 
	._line	2514
	cmp.w	#016eH,-7[FB]	;  ndays 
	jgeu	L3615
	._line	2515
	._block
	._line	2516
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 2516
	jsr	_FeedWatchdog
	._line	2517
	mov.w	-7[FB],A0	;  ndays 
	mov.b	_Co+300[A0],R0L	;  nyears 
	._block
	._var	'nyears','R',3,1
	._line	2518
	mov.w	-5[FB],A0	;  rDate 
	mov.b	[A0],R1L
	mov.b	#00H,R1H
	add.w	#0001H,R1
	mov.b	#00H,R0H
	._eblock
	cmp.w	R1,R0
	jne	L3615
	._line	2519
	._block
	._line	2520
	push.w	#0100H
	._inspect	'S', 'p', 2
	push.w	#0003H
	._inspect	'S', 'p', 2
	mova	-10[FB],R2	;  nhours 
	mov.w	-7[FB],R1	;  ndays 
	mul.w	#0003H,R1
	add.w	#6f31H,R1
	._inspect	'S', 'c', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 0, 2520
	jsr	$Write_Read_FM24C256
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	._line	2521
	cmp.b	#18H,-3[FB]	;  starthour 
	jgeu	L3615
	._line	2522
	._block
	._line	2523
	mov.b	-3[FB],-2[FB]	;  starthour  i 
L3549:
	._line	2523
	cmp.b	#18H,-2[FB]	;  i 
	jgeu	L3615
	._line	2524
	._block
	._line	2525
	mov.b	-2[FB],R0L	;  i 
	and.b	#07H,R0L
	mov.b	R0L,A0
	lde.b	_BIT_UNC[A0],R0L
	mov.b	-2[FB],R0H	;  i 
	mov.b	R0H,R1L
	shl.b	#-3,R0H
	mov.b	R0H,A0
	mova	-10[FB],A1	;  nhours 
	add.w	A0,A1
	and.b	[A1],R0L
	jeq	L3561
	._line	2526
	._block
	._line	2527
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2527
	jsr	$OH_B
	mov.w	-5[FB],A0	;  rDate 
	mov.b	R0L,0003H[A0]
	._line	2528
	mov.b	#00H,-1[FB]	;  result 
	._line	2529
	jmp	L3615
	._eblock
L3561:
	inc.b	-2[FB]	;  i 
	jmp	L3549
L3615:
	._eblock
	._eblock
	._eblock
	._eblock
	._line	2536
	mov.b	-1[FB],R0L	;  result 
	mov.b	#00H,R0H
	exitd	
E50:
	._eblock
M62:
	._efunc	M62
	._inspect	'F', 'd', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 2501, 0, 00h, 0
	._inspect	'F', 't', "ThisDayHaveRecord", 'G', 601
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2511, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2512, 0, 00h, 0
	._inspect	'V', 'r', "day_num", 'G', 2512, 24, 0, 0, 00h
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2513, 0, 00h, 0
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 2516, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2517, 1280, 0, 0, 00h
	._inspect	'F', 'r', "Write_Read_FM24C256", "$Write_Read_FM24C256", 'G', 2520, 0, 00h, 0
	._inspect	'V', 'r', "BIT_UNC", 'G', 2525, 8, 0, 0, 00h
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2527, 0, 00h, 0
	._inspect	'F', 'e', "ThisDayHaveRecord", "$ThisDayHaveRecord", 'G', 4, 0

	._inspect	'V', 'e', "DaysOfMonth", 'G', 2540, 12, 0, 0, 00h

;## #	FUNCTION time_add_minute
;## #	FRAME	AUTO	(timeCounter)	size  2,	offset -7
;## #	FRAME	AUTO	(     len)	size  2,	offset -5
;## #	FRAME	AUTO	(  req_tm)	size  2,	offset -3
;## #	FRAME	AUTO	(    hour)	size  1,	offset -5
;## #	FRAME	AUTO	(    temp)	size  1,	offset -1
;## #  REGISTER ARG    (  req_tm)   size   2,   REGISTER R1
;## #  REGISTER ARG    (     len)   size   2,   REGISTER R2
;## #	ARG Size(0)	Auto Size(7)	Context Size(5)

	._type	604,'v'
	._type	605,'O',312
	._type	606,'x',604,2
	._type	606,'m','req_tm',0,605
	._type	606,'m','len',0,18
	._func	'time_add_minute','G',7,606,$time_add_minute,0
	._inspect	'F', 's', "time_add_minute", "$time_add_minute", 'G', 12
	.align
	._line	2544
	.glb	$time_add_minute
$time_add_minute:
	enter	#07H
	mov.w	R1,-3[FB]	;  req_tm  req_tm 
	mov.w	R2,-5[FB]	;  len  len 
	._block
	._type	607,'O',312
	._var	'req_tm','A',607,-3
	._var	'len','A',18,-5
	._var	'timeCounter','A',18,-7
	._var	'temp','A',3,-1
	._var	'hour','A',3,-5
	._line	2558
	mova	-1[FB],R2	;  temp 
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 2558
	jsr	$BCD2Byte
	._line	2559
	mov.b	-1[FB],R0L	;  temp 
	mov.b	#00H,R0H
	mul.w	#003cH,R0
	mov.w	R0,-7[FB]	;  timeCounter 
	._line	2560
	mova	-1[FB],R2	;  temp 
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 2560
	jsr	$BCD2Byte
	._line	2561
	mov.b	-1[FB],R0L	;  temp 
	mov.b	#00H,R0H
	add.w	R0,-7[FB]	;  timeCounter 
	._line	2563
	add.w	-5[FB],-7[FB]	;  len  timeCounter 
	._line	2564
	mov.w	-7[FB],R0	;  timeCounter 
	mov.w	#0000H,R2
	divu.w	#003cH
	mov.b	R0L,-5[FB]	;  hour 
	._line	2565
	cmp.b	#18H,-5[FB]	;  hour 
	jltu	L3695
	._line	2566
	._block
	._line	2568
	mov.b	-5[FB],R0L	;  hour 
	mov.b	#00H,R0H
	divu.b	#18H
	mov.b	R0H,-5[FB]	;  hour 
	._line	2569
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	0002H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2569
	jsr	$OB_H
	._block
	._var	'day','R',3,1
	._line	2570
	inc.b	R0L	;  day 
	._line	2571
	mov.b	R0L,R1L	;  day  day 
	._eblock
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2571
	jsr	$OH_B
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	R0L,0002H[A0]
	._line	2573
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2573
	jsr	$OB_H
	mov.b	R0L,A0
	dec.w	A0
	lde.b	_DaysOfMonth[A0],R0L	;  nMaxDay 
	._block
	._var	'nMaxDay','R',3,1
	._line	2574
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	[A0],R0H
	and.b	#03H,R0H
	jne	L3693
	cmp.b	#02H,0001H[A0]
	jne	L3693
	._eblock
	._line	2575
	._block
	._block
	._var	'nMaxDay','R',3,1
	._line	2576
	inc.b	R0L	;  nMaxDay 
	._eblock
L3693:
	._line	2578
	mov.b	R0L,R1L	;  nMaxDay  nMaxDay 
	._eblock
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2578
	jsr	$OH_B
	mov.w	-3[FB],A0	;  req_tm 
	cmp.b	0002H[A0],R0L
	jgeu	L3695
	._line	2579
	._block
	._line	2580
	mov.b	#01H,0002H[A0]
	._line	2581
	mov.b	0001H[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2581
	jsr	$OB_H
	._block
	._var	'month','R',3,1
	._line	2582
	inc.b	R0L	;  month 
	._line	2583
	mov.b	R0L,R1L	;  month  month 
	._eblock
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2583
	jsr	$OH_B
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	R0L,0001H[A0]
	._line	2585
	cmp.b	#12H,R0L
	jleu	L3695
	._line	2586
	._block
	._line	2587
	mov.b	#01H,0001H[A0]
	._line	2588
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 2588
	jsr	$OB_H
	._block
	._var	'year','R',3,1
	._line	2589
	inc.b	R0L	;  year 
	._line	2590
	mov.b	R0L,R1L	;  year  year 
	._eblock
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 2590
	jsr	$OH_B
	mov.w	-3[FB],A0	;  req_tm 
	mov.b	R0L,[A0]
	._eblock
	._eblock
	._eblock
L3695:
	._line	2595
	mov.w	-3[FB],R2	;  req_tm 
	add.w	#0003H,R2
	mov.b	-5[FB],R1L	;  hour 
	._inspect	'S', 'c', "Byte2BCD", "$Byte2BCD", 'G', 0, 2595
	jsr	$Byte2BCD
	._line	2596
	mov.w	-7[FB],R0	;  timeCounter 
	mov.w	#0000H,R2
	divu.w	#003cH
	mov.w	R2,A0
	mov.b	A0,R1L
	._block
	._var	'min','R',3,3
	._line	2597
	mov.w	-3[FB],R2	;  req_tm 
	add.w	#0004H,R2
	._eblock
	._inspect	'S', 'c', "Byte2BCD", "$Byte2BCD", 'G', 0, 2597
	jsr	$Byte2BCD
	._eblock
	._line	2598
	exitd	
E51:
M63:
	._efunc	M63
	._inspect	'F', 'd', "time_add_minute", "$time_add_minute", 'G', 2544, 0, 00h, 0
	._inspect	'F', 't', "time_add_minute", 'G', 606
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 2558, 0, 00h, 0
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 2560, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2569, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2571, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2573, 0, 00h, 0
	._inspect	'V', 'r', "DaysOfMonth", 'G', 2573, 12, 0, 0, 00h
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2578, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2581, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2583, 0, 00h, 0
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 2588, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 2590, 0, 00h, 0
	._inspect	'F', 'r', "Byte2BCD", "$Byte2BCD", 'G', 2595, 0, 00h, 0
	._inspect	'F', 'r', "Byte2BCD", "$Byte2BCD", 'G', 2597, 0, 00h, 0
	._inspect	'F', 'e', "time_add_minute", "$time_add_minute", 'G', 0, 0

	._inspect	'V', 'd', "remain_skip_pnt", "_remain_skip_pnt", 'G', 2601, 2, 0, 0, 00h
	._inspect	'V', 'd', "sum_done_pnt", "_sum_done_pnt", 'G', 2602, 2, 0, 0, 00h
	._inspect	'V', 'd', "next_record_block", "_next_record_block", 'G', 2603, 2, 0, 0, 00h
	._inspect	'V', 'd', "fst_not_rd_blk", "_fst_not_rd_blk", 'G', 2604, 2, 0, 0, 00h
	._inspect	'V', 'd', "sort_base_type", "_sort_base_type", 'G', 2612, 9, 0, 0, 00h
	._inspect	'V', 'd', "last_frm_len", "_last_frm_len", 'G', 2613, 1, 0, 0, 00h
	._inspect	'V', 'd', "sort", "_sort", 'S', 2615, 1, 0, 0, 00h
	._inspect	'V', 'd', "per_len", "_per_len", 'S', 2616, 1, 0, 0, 00h
	._inspect	'V', 'd', "period", "_period", 'S', 2617, 2, 0, 0, 00h
	._inspect	'V', 'd', "lst_pnt_data", "_lst_pnt_data", 'G', 2618, 16, 0, 0, 00h

;## #	FUNCTION check_id_error
;## #  FRAME   ARG (     di1)  size   1,    offset 5
;## #  REGISTER ARG    (     di0)   size   1,   REGISTER R1L
;## #	ARG Size(1)	Auto Size(0)	Context Size(5)

	._type	608,'x',16,2
	._type	608,'m','di0',0,3
	._type	608,'m','di1',0,3
	._func	'check_id_error','G',0,608,$check_id_error,0
	._inspect	'F', 's', "check_id_error", "$check_id_error", 'G', 5
	.align
	._line	2622
	.glb	$check_id_error
$check_id_error:
	enter	#00H
	._block
	._var	'di0','A',3,0
	._var	'di1','A',3,5
	._line	2625
	._block
	._var	'di0','R',3,3
	mov.w	#0ffffH,R0	;  ret 
	._eblock
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2626
	mov.b	5[FB],R1H	;  di1 
	cmp.b	#01H,R1H
	jeq	L3699
	cmp.b	#02H,R1H
	jeq	L3747
	cmp.b	#03H,R1H
	jeq	L3795
	cmp.b	#04H,R1H
	jeq	L3825
	cmp.b	#05H,R1H
	jeq	L3855
	cmp.b	#06H,R1H
	jeq	L3885
	cmp.b	#07H,R1H
	jeq	L3933
	cmp.b	#08H,R1H
	jeq	L3981
	._eblock
	mov.w	#0ffffH,R0
	exitd	
	._line	2627
	._block
	._line	2628
L3699:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2629
	cmp.b	#00H,R1L	;  di0 
	jleu	L4041
	cmp.b	#04H,R1L	;  di0 
	jltu	L4047
L4041:
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4047:
	._line	2630
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2632
L3747:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2633
	cmp.b	#00H,R1L	;  di0 
	jleu	L4059
	cmp.b	#04H,R1L	;  di0 
	jltu	L4065
L4059:
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4065:
	._line	2634
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2636
L3795:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2637
	cmp.b	#04H,R1L	;  di0 
	jltu	L4075
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4075:
	._line	2638
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2640
L3825:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2641
	cmp.b	#04H,R1L	;  di0 
	jltu	L4085
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4085:
	._line	2642
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2645
L3855:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2646
	cmp.b	#04H,R1L	;  di0 
	jltu	L4095
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4095:
	._line	2647
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2649
L3885:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2650
	cmp.b	#01H,R1L	;  di0 
	jltu	L4107
	cmp.b	#04H,R1L	;  di0 
	jleu	L4113
L4107:
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4113:
	._line	2651
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2653
L3933:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2654
	cmp.b	#01H,R1L	;  di0 
	jltu	L4125
	cmp.b	#04H,R1L	;  di0 
	jleu	L4131
L4125:
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4131:
	._line	2655
	mov.w	#0000H,R1	;  ret 
	mov.w	#0000H,R0
	exitd	
	._line	2657
L3981:
	._block
	._var	'di0','R',3,3
	._var	'ret','R',16,5
	._line	2658
	cmp.b	#01H,R1L	;  di0 
	jltu	L4143
	cmp.b	#02H,R1L	;  di0 
	jleu	L4149
L4143:
	cmp.b	#0ffH,R1L	;  di0 
	jne	L4165
	._eblock
L4149:
	._line	2659
	mov.w	#0000H,R0	;  ret 
	._block
	._var	'ret','R',16,5
	._eblock
	._line	2664
L4165:
	._line	2665
	._eblock
	exitd	
E52:
	._eblock
M64:
	._efunc	M64
	._inspect	'F', 'd', "check_id_error", "$check_id_error", 'G', 2622, 0, 00h, 0
	._inspect	'F', 't', "check_id_error", 'G', 608
	._inspect	'F', 'e', "check_id_error", "$check_id_error", 'G', 0, 0


;## #	FUNCTION find_sort_off
;## #  FRAME   ARG (   rMode)  size   1,    offset 5
;## #  REGISTER ARG    (    sort)   size   1,   REGISTER R1L
;## #	ARG Size(1)	Auto Size(0)	Context Size(5)

	._type	609,'x',3,2
	._type	609,'m','sort',0,3
	._type	609,'m','rMode',5,3
	._func	'find_sort_off','G',0,609,$find_sort_off,0
	._inspect	'F', 's', "find_sort_off", "$find_sort_off", 'G', 5
	.align
	._line	2669
	.glb	$find_sort_off
$find_sort_off:
	enter	#00H
	._block
	._var	'sort','A',3,0
	._var	'rMode','A',3,5
	._line	2674
	._block
	._var	'sort','R',3,3
	mov.b	#07H,R0L	;  off 
	._eblock
	._block
	._var	'off','R',3,1
	._var	'sort','R',3,3
	._line	2675
	mov.b	#01H,R0H	;  i 
	._eblock
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
L4167:
	._line	2675
	cmp.b	R1L,R0H	;  sort  i 
	jgeu	L4171
	._eblock
	._line	2676
	._block
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	._line	2677
	mov.b	R0H,R1H	;  i  i 
	._eblock
	dec.b	R0H
	._block
	._var	'off','R',3,1
	._var	'sort','R',3,3
	._var	'i','R',3,4
	mov.w	#0001H,A0
	xchg.b	R1H,R0H	;  i 
	._eblock
	shl.w	R1H,A0
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	mov.b	A0,R1H
	._eblock
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	._var	'nMask','R',3,4
	._line	2678
	and.b	5[FB],R1H	;  rMode 
	._eblock
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	jeq	L4179
	._eblock
	._line	2679
	._block
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	._line	2680
	mov.b	R0H,A0
	mov.w	A0,R2
	._eblock
	mov.w	#0006H,A0
	sub.w	R2,A0
	._block
	._var	'off','R',3,1
	._var	'i','R',3,2
	._var	'sort','R',3,3
	lde.b	_Clase_Length[A0],R1H
	add.b	R1H,R0L	;  off 
	._eblock
L4179:
	inc.b	R0H	;  i 
	jmp	L4167
	._eblock
L4171:
	._block
	._var	'off','R',3,1
	._var	'sort','R',3,3
	._eblock
	._line	2684
	cmp.b	#06H,R1L	;  sort 
	jne	L4261
	._eblock
	._block
	._var	'off','R',3,1
	btst	03H,5[FB]	;  rMode 
	jz	L4261
	btst	04H,5[FB]	;  rMode 
	jnz	L4261
	._line	2685
	add.b	#10H,R0L	;  off 
L4261:
	._line	2686
	._eblock
	exitd	
E53:
	._eblock
M65:
	._efunc	M65
	._inspect	'F', 'd', "find_sort_off", "$find_sort_off", 'G', 2669, 0, 00h, 0
	._inspect	'F', 't', "find_sort_off", 'G', 609
	._inspect	'V', 'r', "Clase_Length", 'G', 2680, 6, 0, 0, 00h
	._inspect	'F', 'e', "find_sort_off", "$find_sort_off", 'G', 0, 0


;## #	FUNCTION get_single_id_data_len
;## #  FRAME   ARG (     di1)  size   1,    offset 5
;## #  REGISTER ARG    (     di0)   size   1,   REGISTER R1L
;## #	ARG Size(1)	Auto Size(0)	Context Size(5)

	._type	610,'x',3,2
	._type	610,'m','di0',0,3
	._type	610,'m','di1',5,3
	._func	'get_single_id_data_len','G',0,610,$get_single_id_data_len,0
	._inspect	'F', 's', "get_single_id_data_len", "$get_single_id_data_len", 'G', 5
	.align
	._line	2759
	.glb	$get_single_id_data_len
$get_single_id_data_len:
	enter	#00H
	._block
	._var	'di0','A',3,0
	._var	'di1','A',3,5
	._line	2762
	._block
	._var	'di0','R',3,3
	mov.b	5[FB],R0L	;  di1 
	cmp.b	#01H,R0L
	jeq	L4265
	cmp.b	#02H,R0L
	jeq	L4281
	cmp.b	#03H,R0L
	jeq	L4297
	cmp.b	#04H,R0L
	jeq	L4313
	cmp.b	#05H,R0L
	jeq	L4329
	cmp.b	#06H,R0L
	jeq	L4345
	cmp.b	#07H,R0L
	jeq	L4361
	cmp.b	#08H,R0L
	jeq	L4377
	._eblock
	._line	2763
	._block
	._line	2791
	mov.b	#00H,R0H	;  len 
	._eblock
	._line	2793
	mov.b	#00H,R0L
	exitd	
	._line	2764
L4265:
	._block
	._var	'di0','R',3,3
	._line	2765
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#06H,#02H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2766
	._eblock
	exitd	
	._line	2767
L4281:
	._block
	._var	'di0','R',3,3
	._line	2768
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#09H,#03H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2769
	._eblock
	exitd	
	._line	2770
L4297:
	._block
	._var	'di0','R',3,3
	._line	2771
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#0cH,#03H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2772
	._eblock
	exitd	
	._line	2773
L4313:
	._block
	._var	'di0','R',3,3
	._line	2774
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#0cH,#03H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2775
	._eblock
	exitd	
	._line	2777
L4329:
	._block
	._var	'di0','R',3,3
	._line	2778
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#08H,#02H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2779
	._eblock
	exitd	
	._line	2780
L4345:
	._block
	._var	'di0','R',3,3
	._line	2781
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#10H,#04H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2782
	._eblock
	exitd	
	._line	2783
L4361:
	._block
	._var	'di0','R',3,3
	._line	2784
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#10H,#04H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2785
	._eblock
	exitd	
	._line	2786
L4377:
	._block
	._var	'di0','R',3,3
	._line	2787
	cmp.b	#0ffH,R1L	;  di0 
	stzx	#06H,#03H,R0L
	._eblock
	._block
	._var	'len','R',3,1
	._line	2788
	._eblock
	exitd	
E54:
	._eblock
	._eblock
M66:
	._efunc	M66
	._inspect	'F', 'd', "get_single_id_data_len", "$get_single_id_data_len", 'G', 2759, 0, 00h, 0
	._inspect	'F', 't', "get_single_id_data_len", 'G', 610
	._inspect	'F', 'e', "get_single_id_data_len", "$get_single_id_data_len", 'G', 0, 0


;## #	FUNCTION get_data_from_cob_base_id
;## #	FRAME	AUTO	(Power_temp)	size  4,	offset -14
;## #	FRAME	AUTO	( __TMP18)	size  2,	offset -10
;## #	FRAME	AUTO	( __TMP17)	size  2,	offset -10
;## #	FRAME	AUTO	( __TMP16)	size  2,	offset -10
;## #	FRAME	AUTO	( __TMP15)	size  2,	offset -10
;## #	FRAME	AUTO	( __TMP14)	size  2,	offset -10
;## #	FRAME	AUTO	( __TMP13)	size  2,	offset -10
;## #	FRAME	AUTO	( Record5)	size  2,	offset -8
;## #	FRAME	AUTO	( Record4)	size  2,	offset -6
;## #	FRAME	AUTO	( Record2)	size  2,	offset -6
;## #	FRAME	AUTO	(     src)	size  2,	offset -4
;## #	FRAME	AUTO	(       i)	size  1,	offset -2
;## #	FRAME	AUTO	(     di0)	size  1,	offset -1
;## #  FRAME   ARG (     di1)  size   1,    offset 5
;## #  FRAME   ARG (    pBuf)  size   2,    offset 6
;## #  REGISTER ARG    (     di0)   size   1,   REGISTER R1L
;## #	ARG Size(3)	Auto Size(14)	Context Size(5)

	._type	611,'v'
	._type	612,'O',3
	._type	613,'x',611,3
	._type	613,'m','di0',-1,3
	._type	613,'m','di1',5,3
	._type	613,'m','pBuf',6,612
	._func	'get_data_from_cob_base_id','G',14,613,$get_data_from_cob_base_id,0
	._inspect	'F', 's', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 19
	.align
	._line	2797
	.glb	$get_data_from_cob_base_id
$get_data_from_cob_base_id:
	enter	#0eH
	mov.b	R1L,-1[FB]	;  di0  di0 
	._block
	._var	'di0','A',3,-1
	._var	'di1','A',3,5
	._type	614,'O',3
	._var	'pBuf','A',614,6
	._var	'read_mode','A',3,0
	._var	'Data_number','A',3,0
	._var	'read_class','A',3,0
	._type	615,'O',3
	._var	'i','A',3,-2
	._type	616,'O',446
	._type	617,'O',316
	._type	618,'O',329
	._var	'Record2','A',618,-6
	._type	619,'O',365
	._type	620,'O',375
	._var	'Record4','A',620,-6
	._type	621,'O',381
	._var	'Record5','A',621,-8
	._type	622,'O',387
	._var	'Power_temp','A',20,-14
	._type	623,'O',3
	._var	'src','A',623,-4
	._line	2812
	mov.w	6[FB],-4[FB]	;  pBuf  src 
	._line	2813
	mov.b	5[FB],A0	;  di1 
	mov.b	_sort_base_type[A0],R1L	;  sort 
	._block
	._var	'sort','R',3,3
	._line	2816
	push.b	_Co+6
	._inspect	'S', 'p', 1
	._eblock
	._inspect	'S', 'c', "find_sort_off", "$find_sort_off", 'G', 0, 2816
	jsr	$find_sort_off
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'read_addr','R',3,1
	._line	2817
	mov.b	5[FB],R0H	;  di1 
	cmp.b	#01H,R0H
	jeq	L4431
	cmp.b	#02H,R0H
	jeq	L4455
	cmp.b	#03H,R0H
	jeq	L4467
	cmp.b	#04H,R0H
	jeq	L4489
	cmp.b	#05H,R0H
	jeq	L4511
	cmp.b	#06H,R0H
	jeq	L4523
	cmp.b	#07H,R0H
	jeq	L4657
	cmp.b	#08H,R0H
	jeq	L4681
	._eblock
	jmp	L4799
	._line	2818
	._block
	._line	2819
L4431:
	._block
	._var	'read_addr','R',3,1
	._line	2820
	mov.b	R0L,A0
	._eblock
	mov.w	#_Co,R0
	add.w	R0,A0	;  Record1 
	._block
	._type	624,'O',316
	._var	'Record1','R',624,9
	._line	2821
	._eblock
	._block
	._type	625,'O',3
	._var	'temp_buf','R',625,9
	._line	2823
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4445
	._eblock
	._line	2824
	._block
	._block
	._type	626,'O',3
	._var	'temp_buf','R',626,9
	._line	2825
	mov.b	#00H,-2[FB]	;  i 
L4433:
	._eblock
	._line	2826
	._block
	._block
	._type	627,'O',3
	._var	'temp_buf','R',627,9
	._line	2827
	mov.b	-2[FB],R0L	;  i 
	mov.b	#00H,R0H
	mul.w	#0003H,R0
	mov.w	A0,R1	;  temp_buf  temp_buf 
	._eblock
	add.w	R0,A0
	._block
	._type	628,'O',3
	._var	'temp_buf','R',628,6
	mov.b	[A0],R0L
	shl.b	#-4,R0L
	mov.w	6[FB],A1	;  pBuf 
	mov.b	R0L,[A1]
	._line	2828
	mov.b	0001H[A0],R0L
	shl.b	#04H,R0L
	or.b	R0L,[A1]
	._line	2829
	add.w	#0001H,6[FB]	;  pBuf 
	._line	2830
	mov.b	0001H[A0],R0L
	shl.b	#-4,R0L
	mov.w	6[FB],A1	;  pBuf 
	mov.b	R0L,[A1]
	._line	2831
	mov.b	0002H[A0],R0L
	shl.b	#04H,R0L
	or.b	R0L,[A1]
	._line	2832
	add.w	#0001H,6[FB]	;  pBuf 
	._eblock
	inc.b	-2[FB]	;  i 
	mov.w	R1,A0	;  temp_buf  temp_buf 
	._eblock
	cmp.b	#03H,-2[FB]	;  i 
	jltu	L4433
	._eblock
	._line	2834
	jmp	L4799
	._line	2835
L4445:
	._block
	._type	629,'O',3
	._var	'temp_buf','R',629,9
	._eblock
	._line	2836
	._block
	._block
	._type	630,'O',3
	._var	'temp_buf','R',630,9
	._line	2837
	mov.b	-1[FB],-2[FB]	;  di0  i 
	dec.b	-2[FB]	;  i 
	._line	2838
	mov.b	-2[FB],R0L	;  i 
	mov.b	#00H,R0H
	mul.w	#0003H,R0
	add.w	R0,A0
	._eblock
	mov.b	[A0],R0L
	shl.b	#-4,R0L
	mov.w	6[FB],A1	;  pBuf 
	mov.b	R0L,[A1]
	._line	2839
	mov.b	0001H[A0],R0L
	shl.b	#04H,R0L
	or.b	R0L,[A1]
	._line	2840
	add.w	#0001H,6[FB]	;  pBuf 
	._line	2841
	mov.b	0001H[A0],R0L
	shl.b	#-4,R0L
	mov.w	6[FB],A1	;  pBuf 
	mov.b	R0L,[A1]
	._line	2842
	mov.b	0002H[A0],R0L
	shl.b	#04H,R0L
	or.b	R0L,[A1]
	._line	2843
	add.w	#0001H,6[FB]	;  pBuf 
	._eblock
	._line	2845
	jmp	L4799
	._line	2846
L4455:
	._block
	._var	'read_addr','R',3,1
	._line	2847
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record1 
	._block
	._type	631,'O',316
	._var	'Record1','R',631,5
	._line	2848
	add.w	#0009H,R0	;  temp_buf 
	._eblock
	._block
	._type	632,'O',3
	._var	'temp_buf','R',632,5
	._line	2849
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4457
	._eblock
	._line	2850
	._block
	._block
	._type	633,'O',3
	._var	'temp_buf','R',633,5
	._line	2851
	push.b	#09H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2851
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2852
	add.w	#0009H,6[FB]	;  pBuf 
	._eblock
	._line	2853
	jmp	L4799
	._line	2854
L4457:
	._block
	._type	634,'O',3
	._var	'temp_buf','R',634,5
	._eblock
	._line	2855
	._block
	._block
	._type	635,'O',3
	._var	'temp_buf','R',635,5
	._line	2856
	mov.b	-1[FB],-2[FB]	;  di0  i 
	dec.b	-2[FB]	;  i 
	._line	2857
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.b	-2[FB],R1L	;  i 
	mov.b	#00H,R1H
	mul.w	#0003H,R1
	add.w	R1,R0
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2857
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2858
	add.w	#0003H,6[FB]	;  pBuf 
	._eblock
	._line	2860
	jmp	L4799
	._line	2861
L4467:
	._block
	._var	'read_addr','R',3,1
	._line	2862
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-6[FB]	;  Record2 
	._line	2863
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4469
	._line	2864
	._block
	._line	2865
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#000bH,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2865
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2866
	push.b	#09H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#0002H,R2
	mov.w	6[FB],R1	;  pBuf 
	add.w	#0003H,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2866
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2867
	jmp	L4799
	._line	2868
L4469:
	._line	2869
	._block
	._line	2870
	mov.b	-1[FB],R0L	;  di0 
	jne	L4479
	._line	2871
	._block
	._line	2872
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#000bH,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2872
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2873
	jmp	L4799
	._line	2874
L4479:
	._line	2875
	._block
	._line	2876
	mov.w	-6[FB],R2	;  Record2  temp_buf 
	add.w	#0002H,R2	;  temp_buf 
	._block
	._type	636,'O',3
	._var	'temp_buf','R',636,7
	._line	2877
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.b	-1[FB],R0L	;  di0 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mov.w	R2,R1	;  temp_buf  temp_buf 
	._eblock
	mul.w	#0003H,R0
	._block
	._type	637,'O',3
	._var	'temp_buf','R',637,6
	add.w	R0,R1
	._eblock
	mov.w	R1,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2877
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._eblock
	._line	2880
	jmp	L4799
	._line	2881
L4489:
	._block
	._var	'read_addr','R',3,1
	._line	2882
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-6[FB]	;  Record2 
	._line	2883
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4491
	._line	2884
	._block
	._line	2885
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#0017H,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2885
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	2886
	push.b	#09H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#000eH,R2
	mov.w	6[FB],R1	;  pBuf 
	add.w	#0003H,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2886
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2887
	jmp	L4799
	._line	2888
L4491:
	._line	2889
	._block
	._line	2890
	mov.b	-1[FB],R0L	;  di0 
	jne	L4501
	._line	2891
	._block
	._line	2892
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],R2	;  Record2 
	add.w	#0017H,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2892
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2893
	jmp	L4799
	._line	2894
L4501:
	._line	2895
	._block
	._line	2896
	mov.w	-6[FB],R2	;  Record2  temp_buf 
	add.w	#000eH,R2	;  temp_buf 
	._block
	._type	638,'O',3
	._var	'temp_buf','R',638,7
	._line	2897
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.b	-1[FB],R0L	;  di0 
	mov.b	#00H,R0H
	add.w	#-1,R0
	mov.w	R2,R1	;  temp_buf  temp_buf 
	._eblock
	mul.w	#0003H,R0
	._block
	._type	639,'O',3
	._var	'temp_buf','R',639,6
	add.w	R0,R1
	._eblock
	mov.w	R1,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2897
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._eblock
	._line	2900
	jmp	L4799
	._line	2902
L4511:
	._block
	._var	'read_addr','R',3,1
	._line	2903
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record3 
	._block
	._type	640,'O',365
	._var	'Record3','R',640,5
	._line	2904
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4513
	._eblock
	._line	2905
	._block
	._block
	._type	641,'O',365
	._var	'Record3','R',641,5
	._line	2906
	push.b	#08H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2906
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2907
	jmp	L4799
	._line	2908
L4513:
	._block
	._type	642,'O',365
	._var	'Record3','R',642,5
	._eblock
	._line	2909
	._block
	._block
	._type	643,'O',365
	._var	'Record3','R',643,5
	._line	2910
	._eblock
	._block
	._type	644,'O',3
	._var	'temp_buf','R',644,5
	._line	2911
	push.b	#02H
	._inspect	'S', 'p', 1
	mov.b	-1[FB],R1L	;  di0 
	mov.b	#00H,R1H
	shl.w	#01H,R1
	add.w	R1,R0
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2911
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2913
	jmp	L4799
	._line	2914
L4523:
	._block
	._var	'read_addr','R',3,1
	._line	2915
	mov.b	R0L,R1L
	mov.b	#00H,R1H
	mov.w	#_Co,R2
	add.w	R2,R1
	mov.w	R1,-6[FB]	;  Record4 
	._line	2916
	add.b	#08H,R0L	;  read_addr 
	._line	2917
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-8[FB]	;  Record5 
	._line	2918
	cmp.b	#0ffH,-1[FB]	;  di0 
	jeq	L4747
	cmp.b	#01H,-1[FB]	;  di0 
	jne	L4525
L4747:
	._line	2919
	._block
	._line	2920
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],A0	;  Record4 
	push.w	2[A0]
	push.w	[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-10[FB]	;  __TMP13 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 2920
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2920
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP13 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2920
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	2921
	add.w	#0004H,6[FB]	;  pBuf 
	._eblock
L4525:
	._line	2923
	cmp.b	#0ffH,-1[FB]	;  di0 
	jeq	L4757
	cmp.b	#02H,-1[FB]	;  di0 
	jne	L4553
L4757:
	._line	2924
	._block
	._line	2925
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.w	-6[FB],A0	;  Record4 
	push.w	0004H+2H[A0]
	push.w	0004H[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-10[FB]	;  __TMP14 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 2925
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2925
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP14 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2925
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	2926
	add.w	#0004H,6[FB]	;  pBuf 
	._eblock
L4553:
	._line	2928
	cmp.b	#0ffH,-1[FB]	;  di0 
	jeq	L4767
	cmp.b	#03H,-1[FB]	;  di0 
	jne	L4591
L4767:
	._line	2929
	._block
	._line	2930
	mov.b	_Meter_Parameter+57,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	._line	2932
	push.w	#8000H
	._inspect	'S', 'p', 2
	push.w	#0404H
	._inspect	'S', 'p', 2
	push.b	#01H
	._inspect	'S', 'p', 1
	push.b	R0L	;  sum 
	._inspect	'S', 'p', 1
	._eblock
	mova	-14[FB],R2	;  Power_temp 
	mov.w	-8[FB],R1	;  Record5 
	._inspect	'S', 'c', "math_Add", "$math_Add", 'G', 0, 2932
	jsr	$math_Add
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	2933
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R1	;  pBuf 
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	mov.w	-14[FB],R0	;  Power_temp 
	mov.w	-14+2[FB],R2	;  Power_temp 
	mov.w	R1,-10[FB]	;  __TMP15 
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2933
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ABS", "_ABS", 'G', 0, 2933
	jsr	_ABS
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP15 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2933
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	2935
	btst	31,-14[FB]	;  Power_temp 
	jz	L4581
	._line	2936
	mov.w	6[FB],A0	;  pBuf 
	or.b	#80H,0003H[A0]
	jmp	L4583
	._line	2937
L4581:
	._line	2938
	mov.w	6[FB],A0	;  pBuf 
	and.b	#7fH,0003H[A0]
L4583:
	._line	2940
	add.w	#0004H,6[FB]	;  pBuf 
	._eblock
L4591:
	._line	2942
	cmp.b	#0ffH,-1[FB]	;  di0 
	jeq	L4779
	cmp.b	#04H,-1[FB]	;  di0 
	jne	L4799
L4779:
	._line	2943
	._block
	._line	2944
	mov.b	_Meter_Parameter+58,R0L	;  sum 
	._block
	._var	'sum','R',3,1
	._line	2946
	push.w	#8000H
	._inspect	'S', 'p', 2
	push.w	#0404H
	._inspect	'S', 'p', 2
	push.b	#01H
	._inspect	'S', 'p', 1
	push.b	R0L	;  sum 
	._inspect	'S', 'p', 1
	._eblock
	mova	-14[FB],R2	;  Power_temp 
	mov.w	-8[FB],R1	;  Record5 
	._inspect	'S', 'c', "math_Add", "$math_Add", 'G', 0, 2946
	jsr	$math_Add
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	2947
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R1	;  pBuf 
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	mov.w	-14[FB],R0	;  Power_temp 
	mov.w	-14+2[FB],R2	;  Power_temp 
	mov.w	R1,-10[FB]	;  __TMP16 
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2947
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "ABS", "_ABS", 'G', 0, 2947
	jsr	_ABS
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP16 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2947
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	2949
	btst	31,-14[FB]	;  Power_temp 
	jz	L4619
	._line	2950
	mov.w	6[FB],A0	;  pBuf 
	or.b	#80H,0003H[A0]
	jmp	L4621
	._line	2951
L4619:
	._line	2952
	mov.w	6[FB],A0	;  pBuf 
	and.b	#7fH,0003H[A0]
L4621:
	._line	2954
	add.w	#0004H,6[FB]	;  pBuf 
	._eblock
	._line	2955
	jmp	L4799
	._line	2957
L4657:
	._block
	._var	'read_addr','R',3,1
	._line	2958
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0
	mov.w	R0,-8[FB]	;  Record5 
	._line	2959
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4671
	._line	2960
	._block
	._line	2961
	mov.b	#00H,-2[FB]	;  i 
L4659:
	._line	2962
	._block
	._line	2963
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.b	-2[FB],A0	;  i 
	shl.w	#02H,A0
	add.w	-8[FB],A0	;  Record5 
	push.w	2[A0]
	push.w	[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-10[FB]	;  __TMP17 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 2963
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2963
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP17 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2963
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._line	2964
	add.w	#0004H,6[FB]	;  pBuf 
	._eblock
	inc.b	-2[FB]	;  i 
	cmp.b	#04H,-2[FB]	;  i 
	jltu	L4659
	._eblock
	._line	2966
	jmp	L4799
	._line	2967
L4671:
	._line	2968
	._block
	._line	2969
	push.b	#04H
	._inspect	'S', 'p', 1
	mov.w	6[FB],R2	;  pBuf 
	push.b	#00H
	._inspect	'S', 'p', 1
	mov.b	-1[FB],A0	;  di0 
	dec.w	A0
	shl.w	#02H,A0
	add.w	-8[FB],A0	;  Record5 
	push.w	2[A0]
	push.w	[A0]
	._inspect	'S', 'p', 4
	mov.w	R2,-10[FB]	;  __TMP18 
	._inspect	'S', 'c', "format_data", "_format_data", 'G', 0, 2969
	jsr	_format_data
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	push.w	#0000H
	push.w	#000aH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4div", 'G', 0, 2969
	jsr.a	__i4div
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	pushm	R2,R0
	._inspect	'S', 'p', 4
	mov.w	-10[FB],R2	;  __TMP18 
	._inspect	'S', 'c', "FormatBCD", "$FormatBCD", 'G', 0, 2969
	jsr	$FormatBCD
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._eblock
	._line	2971
	jmp	L4799
	._line	2972
L4681:
	._block
	._var	'read_addr','R',3,1
	._line	2973
	mov.b	#00H,R0H
	._eblock
	mov.w	#_Co,R1
	add.w	R1,R0	;  Record6 
	._block
	._type	645,'O',387
	._var	'Record6','R',645,5
	._line	2974
	cmp.b	#0ffH,-1[FB]	;  di0 
	jne	L4683
	._eblock
	._line	2975
	._block
	._block
	._type	646,'O',387
	._var	'Record6','R',646,5
	._line	2976
	push.b	#06H
	._inspect	'S', 'p', 1
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2976
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	2977
	jmp	L4799
	._line	2978
L4683:
	._block
	._type	647,'O',387
	._var	'Record6','R',647,5
	._eblock
	._line	2979
	._block
	._block
	._type	648,'O',387
	._var	'Record6','R',648,5
	._line	2980
	push.b	#03H
	._inspect	'S', 'p', 1
	mov.b	-1[FB],R1L	;  di0 
	mov.b	#00H,R1H
	add.w	#-1,R1
	mul.w	#0003H,R1
	add.w	R1,R0
	._eblock
	mov.w	6[FB],R1	;  pBuf 
	mov.w	R0,R2
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2980
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._eblock
	._line	2986
L4799:
	._line	2987
	cmp.b	#06H,5[FB]	;  di1 
	jeq	L4797
	cmp.b	#07H,5[FB]	;  di1 
	jne	L4695
L4797:
	._line	2988
	._block
	._line	2989
	push.b	_per_len
	._inspect	'S', 'p', 1
	mov.w	-4[FB],R2	;  src 
	mov.w	#_lst_pnt_data,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 2989
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
L4695:
	._eblock
	._line	2992
	exitd	
E55:
M67:
	._efunc	M67
	._inspect	'F', 'd', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 2797, 0, 00h, 0
	._inspect	'F', 't', "get_data_from_cob_base_id", 'G', 613
	._inspect	'V', 'r', "sort_base_type", 'G', 2813, 9, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 2816, 1280, 0, 0, 00h
	._inspect	'F', 'r', "find_sort_off", "$find_sort_off", 'G', 2816, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2820, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 2847, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2851, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2857, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2862, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2865, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2866, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2872, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2877, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2882, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2885, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2886, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2892, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2897, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2903, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2906, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2911, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2915, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 2917, 1280, 0, 0, 00h
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 2920, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2920, 0, 00h, 0
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 2925, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2925, 0, 00h, 0
	._inspect	'V', 'r', "Meter_Parameter", 'G', 2930, 623, 0, 0, 00h
	._inspect	'F', 'r', "math_Add", "$math_Add", 'G', 2932, 0, 00h, 0
	._inspect	'F', 'r', "ABS", "_ABS", 'G', 2933, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2933, 0, 00h, 0
	._inspect	'V', 'r', "Meter_Parameter", 'G', 2944, 623, 0, 0, 00h
	._inspect	'F', 'r', "math_Add", "$math_Add", 'G', 2946, 0, 00h, 0
	._inspect	'F', 'r', "ABS", "_ABS", 'G', 2947, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2947, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2958, 1280, 0, 0, 00h
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 2963, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2963, 0, 00h, 0
	._inspect	'F', 'r', "format_data", "_format_data", 'G', 2969, 0, 00h, 0
	._inspect	'F', 'r', "FormatBCD", "$FormatBCD", 'G', 2969, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 2973, 1280, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2976, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2980, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 2989, 1, 0, 0, 00h
	._inspect	'V', 'r', "lst_pnt_data", 'G', 2989, 16, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 2989, 0, 00h, 0
	._inspect	'F', 'e', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 6, 0


;## #	FUNCTION memset
;## #  FRAME   ARG (    data)  size   1,    offset 5
;## #  FRAME   ARG (     len)  size   1,    offset 6
;## #  REGISTER ARG    (     dst)   size   2,   REGISTER R1
;## #	ARG Size(2)	Auto Size(0)	Context Size(5)

	._type	649,'v'
	._type	650,'O',3
	._type	651,'x',649,3
	._type	651,'m','dst',0,650
	._type	651,'m','data',5,3
	._type	651,'m','len',6,3
	._func	'memset','G',0,651,$memset,0
	._inspect	'F', 's', "memset", "$memset", 'G', 5
	.align
	._line	2996
	.glb	$memset
$memset:
	enter	#00H
	mov.b	6[FB],R0L	;  len  len 
	._block
	._type	652,'O',3
	._var	'dst','A',652,0
	._var	'data','A',3,5
	._line	2999
	._block
	._var	'len','R',3,1
	._type	653,'O',3
	._var	'dst','R',653,6
	mov.b	#00H,R0H	;  i 
	._eblock
	._block
	._var	'len','R',3,1
	._var	'i','R',3,2
	._type	654,'O',3
	._var	'dst','R',654,6
L4803:
	._line	2999
	cmp.b	R0L,R0H	;  len  i 
	jgeu	L4807
	._eblock
	._line	3000
	._block
	._block
	._var	'len','R',3,1
	._var	'i','R',3,2
	._type	655,'O',3
	._var	'dst','R',655,6
	._line	3001
	mov.b	R0H,A0
	mov.w	R1,A1	;  dst  dst 
	._eblock
	add.w	A0,A1
	._block
	._var	'len','R',3,1
	._var	'i','R',3,2
	._type	656,'O',3
	._var	'dst','R',656,6
	mov.b	5[FB],[A1]	;  data 
	._eblock
	inc.b	R0H	;  i 
	jmp	L4803
	._eblock
L4807:
	._line	3003
	exitd	
E56:
	._eblock
M68:
	._efunc	M68
	._inspect	'F', 'd', "memset", "$memset", 'G', 2996, 0, 00h, 0
	._inspect	'F', 't', "memset", 'G', 651
	._inspect	'F', 'e', "memset", "$memset", 'G', 0, 0


;## #	FUNCTION patch_no_data_pnt
;## #	FRAME	AUTO	(     blk)	size  2,	offset -3
;## #	FRAME	AUTO	(     di0)	size  1,	offset -1
;## #  FRAME   ARG (     di1)  size   1,    offset 5
;## #  FRAME   ARG (    pBuf)  size   2,    offset 6
;## #  FRAME   ARG (   rDate)  size   2,    offset 8
;## #  REGISTER ARG    (     di0)   size   1,   REGISTER R1L
;## #	ARG Size(5)	Auto Size(3)	Context Size(5)

	._type	657,'v'
	._type	658,'O',3
	._type	659,'O',312
	._type	660,'x',657,4
	._type	660,'m','di0',-1,3
	._type	660,'m','di1',5,3
	._type	660,'m','pBuf',6,658
	._type	660,'m','rDate',8,659
	._func	'patch_no_data_pnt','G',3,660,$patch_no_data_pnt,0
	._inspect	'F', 's', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 8
	.align
	._line	3007
	.glb	$patch_no_data_pnt
$patch_no_data_pnt:
	enter	#03H
	mov.b	R1L,-1[FB]	;  di0  di0 
	._block
	._var	'di0','A',3,-1
	._var	'di1','A',3,5
	._type	661,'O',3
	._var	'pBuf','A',661,6
	._type	662,'O',312
	._var	'rDate','A',662,8
	._var	'blk','A',18,-3
	._line	3011
	cmp.b	#06H,5[FB]	;  di1 
	jeq	L4875
	cmp.b	#07H,5[FB]	;  di1 
	jne	L4839
L4875:
	._line	3012
	._block
	._line	3013
	cmp.w	#0000H,_sum_done_pnt
	jne	L4829
	._line	3014
	._block
	._line	3015
	push.b	_sort
	._inspect	'S', 'p', 1
	mov.w	8[FB],R2	;  rDate 
	mova	-3[FB],R1	;  blk 
	._inspect	'S', 'c', "find_lst_record_frm_tm", "$find_lst_record_frm_tm", 'G', 0, 3015
	jsr	$find_lst_record_frm_tm
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	3016
	cmp.w	#0000H,R0	;  ret 
	jne	L4819
	._eblock
	._line	3017
	._block
	._line	3018
	push.b	#01H
	._inspect	'S', 'p', 1
	mova	-3[FB],R1	;  blk 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 3018
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3019
	push.w	6[FB]	;  pBuf 
	._inspect	'S', 'p', 2
	push.b	5[FB]	;  di1 
	._inspect	'S', 'p', 1
	mov.b	-1[FB],R1L	;  di0 
	._inspect	'S', 'c', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 0, 3019
	jsr	$get_data_from_cob_base_id
	._inspect	'S', 'p', -3
	._eblock
	._line	3020
	exitd	
	._line	3021
L4819:
	._line	3022
	._block
	._line	3023
	push.b	_per_len
	._inspect	'S', 'p', 1
	mov.w	#_lst_pnt_data,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3023
	jsr	$memcpy
	._inspect	'S', 'p', -1
	._eblock
	._eblock
	._line	3025
	exitd	
	._line	3026
L4829:
	._line	3027
	._block
	._line	3028
	push.b	_per_len
	._inspect	'S', 'p', 1
	mov.w	#_lst_pnt_data,R2
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3028
	jsr	$memcpy
	._inspect	'S', 'p', -1
	._eblock
	._eblock
	._line	3030
	exitd	
	._line	3031
L4839:
	._line	3032
	._block
	._line	3033
	push.b	_per_len
	._inspect	'S', 'p', 1
	push.b	#0ffH
	._inspect	'S', 'p', 1
	mov.w	6[FB],R1	;  pBuf 
	._inspect	'S', 'c', "memset", "$memset", 'G', 0, 3033
	jsr	$memset
	._inspect	'S', 'p', -2
	._eblock
	._eblock
	._line	3035
	exitd	
E57:
M69:
	._efunc	M69
	._inspect	'F', 'd', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 3007, 0, 00h, 0
	._inspect	'F', 't', "patch_no_data_pnt", 'G', 660
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3013, 2, 0, 0, 00h
	._inspect	'V', 'r', "sort", 'S', 3015, 1, 0, 0, 00h
	._inspect	'F', 'r', "find_lst_record_frm_tm", "$find_lst_record_frm_tm", 'G', 3015, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 3018, 0, 00h, 0
	._inspect	'F', 'r', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 3019, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 3023, 1, 0, 0, 00h
	._inspect	'V', 'r', "lst_pnt_data", 'G', 3023, 16, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3023, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 3028, 1, 0, 0, 00h
	._inspect	'V', 'r', "lst_pnt_data", 'G', 3028, 16, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3028, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 3033, 1, 0, 0, 00h
	._inspect	'F', 'r', "memset", "$memset", 'G', 3033, 0, 00h, 0
	._inspect	'F', 'e', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 3, 0

	._inspect	'V', 'd', "lst_record_tm", "_lst_record_tm", 'G', 3040, 6, 0, 0, 00h
	._inspect	'V', 'd', "l_lst_record", "_l_lst_record", 'G', 3041, 4, 0, 0, 00h
	._inspect	'V', 'd', "cur_hour_empty", "_cur_hour_empty", 'G', 3042, 1, 0, 0, 00h
	._inspect	'V', 'd', "rd_ld_time", "_rd_ld_time", 'G', 3043, 4, 0, 0, 00h

;## #	FUNCTION AddOneHour
;## #	FRAME	AUTO	(    data)	size  4,	offset -7
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset -1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(7)	Context Size(5)

	._type	663,'v'
	._type	664,'O',312
	._type	665,'x',663,1
	._type	665,'m','rDate',0,664
	._func	'AddOneHour','G',7,665,$AddOneHour,0
	._inspect	'F', 's', "AddOneHour", "$AddOneHour", 'G', 12
	.align
	._line	3163
	.glb	$AddOneHour
$AddOneHour:
	enter	#07H
	mov.w	R1,-3[FB]	;  rDate  rDate 
	._block
	._type	666,'O',312
	._var	'rDate','A',666,-3
	._type	667,'Z',4,3
	._var	'data','A',667,-7
	._var	'i','A',3,-1
	._line	3167
	mov.b	#00H,-1[FB]	;  i 
L4881:
	._line	3168
	mov.b	-1[FB],A0	;  i 
	add.w	-3[FB],A0	;  rDate 
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 3168
	jsr	$OB_H
	mov.b	-1[FB],R1L	;  i 
	mov.b	#00H,R1H
	mova	-7[FB],A0	;  data 
	add.w	R1,A0
	mov.b	R0L,[A0]
	inc.b	-1[FB]	;  i 
	cmp.b	#04H,-1[FB]	;  i 
	jltu	L4881
	._line	3170
	cmp.b	#17H,-4[FB]	;  data 
	jgeu	L4893
	._line	3171
	._block
	._line	3172
	inc.b	-4[FB]	;  data 
	._eblock
	._line	3173
	jmp	L4915
	._line	3174
L4893:
	._line	3175
	._block
	._line	3176
	mov.b	#00H,-4[FB]	;  data 
	._line	3177
	push.b	-6[FB]	;  data 
	._inspect	'S', 'p', 1
	mov.b	-7[FB],R1L	;  data 
	._inspect	'S', 'c', "CalDay", "$CalDay", 'G', 0, 3177
	jsr	$CalDay
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.b	-5[FB],R0L	;  data 
	jleu	L4903
	._line	3178
	._block
	._line	3179
	inc.b	-5[FB]	;  data 
	._eblock
	._line	3180
	jmp	L4915
	._line	3181
L4903:
	._line	3182
	._block
	._line	3183
	mov.b	#01H,-5[FB]	;  data 
	._line	3184
	cmp.b	#0cH,-6[FB]	;  data 
	jgeu	L4913
	._line	3185
	._block
	._line	3186
	inc.b	-6[FB]	;  data 
	._eblock
	._line	3187
	jmp	L4915
	._line	3188
L4913:
	._line	3189
	._block
	._line	3190
	mov.b	#01H,-6[FB]	;  data 
	._line	3191
	mov.b	-7[FB],R0L	;  data 
	mov.b	#00H,R0H
	add.w	#0001H,R0
	exts.w	R0
	div.w	#0064H
	mov.w	R2,A0
	mov.b	A0,-7[FB]	;  data 
	._eblock
	._line	3192
L4915:
	._eblock
	._eblock
	._line	3196
	mov.b	#00H,-1[FB]	;  i 
L4923:
	._line	3197
	mov.b	-1[FB],R0L	;  i 
	mov.b	#00H,R0H
	mova	-7[FB],A0	;  data 
	add.w	R0,A0
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 3197
	jsr	$OH_B
	mov.b	-1[FB],A0	;  i 
	add.w	-3[FB],A0	;  rDate 
	mov.b	R0L,[A0]
	inc.b	-1[FB]	;  i 
	cmp.b	#04H,-1[FB]	;  i 
	jltu	L4923
	._line	3198
	mov.w	-3[FB],A0	;  rDate 
	mov.w	#0000H,0004H[A0]
	._eblock
	._line	3200
	exitd	
E58:
M70:
	._efunc	M70
	._inspect	'F', 'd', "AddOneHour", "$AddOneHour", 'G', 3163, 0, 00h, 0
	._inspect	'F', 't', "AddOneHour", 'G', 665
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 3168, 0, 00h, 0
	._inspect	'F', 'r', "CalDay", "$CalDay", 'G', 3177, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 3197, 0, 00h, 0
	._inspect	'F', 'e', "AddOneHour", "$AddOneHour", 'G', 1, 0


;## #	FUNCTION AddOneDay
;## #	FRAME	AUTO	(    data)	size  3,	offset -6
;## #	FRAME	AUTO	(   rDate)	size  2,	offset -3
;## #	FRAME	AUTO	(       i)	size  1,	offset -1
;## #  REGISTER ARG    (   rDate)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(6)	Context Size(5)

	._type	668,'v'
	._type	669,'O',312
	._type	670,'x',668,1
	._type	670,'m','rDate',0,669
	._func	'AddOneDay','G',6,670,$AddOneDay,0
	._inspect	'F', 's', "AddOneDay", "$AddOneDay", 'G', 11
	.align
	._line	3203
	.glb	$AddOneDay
$AddOneDay:
	enter	#06H
	mov.w	R1,-3[FB]	;  rDate  rDate 
	._block
	._type	671,'O',312
	._var	'rDate','A',671,-3
	._type	672,'Z',3,3
	._var	'data','A',672,-6
	._var	'i','A',3,-1
	._line	3207
	mov.b	#00H,-1[FB]	;  i 
L4947:
	._line	3208
	mov.b	-1[FB],A0	;  i 
	add.w	-3[FB],A0	;  rDate 
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 3208
	jsr	$OB_H
	mov.b	-1[FB],R1L	;  i 
	mov.b	#00H,R1H
	mova	-6[FB],A0	;  data 
	add.w	R1,A0
	mov.b	R0L,[A0]
	inc.b	-1[FB]	;  i 
	cmp.b	#03H,-1[FB]	;  i 
	jltu	L4947
	._line	3210
	push.b	-5[FB]	;  data 
	._inspect	'S', 'p', 1
	mov.b	-6[FB],R1L	;  data 
	._inspect	'S', 'c', "CalDay", "$CalDay", 'G', 0, 3210
	jsr	$CalDay
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.b	-4[FB],R0L	;  data 
	jleu	L4959
	._line	3211
	._block
	._line	3212
	inc.b	-4[FB]	;  data 
	._eblock
	._line	3213
	jmp	L4971
	._line	3214
L4959:
	._line	3215
	._block
	._line	3216
	mov.b	#01H,-4[FB]	;  data 
	._line	3217
	cmp.b	#0cH,-5[FB]	;  data 
	jgeu	L4969
	._line	3218
	._block
	._line	3219
	inc.b	-5[FB]	;  data 
	._eblock
	._line	3220
	jmp	L4971
	._line	3221
L4969:
	._line	3222
	._block
	._line	3223
	mov.b	#01H,-5[FB]	;  data 
	._line	3224
	mov.b	-6[FB],R0L	;  data 
	mov.b	#00H,R0H
	add.w	#0001H,R0
	exts.w	R0
	div.w	#0064H
	mov.w	R2,A0
	mov.b	A0,-6[FB]	;  data 
	._eblock
	._line	3225
L4971:
	._eblock
	._line	3229
	mov.b	#00H,-1[FB]	;  i 
L4979:
	._line	3230
	mov.b	-1[FB],R0L	;  i 
	mov.b	#00H,R0H
	mova	-6[FB],A0	;  data 
	add.w	R0,A0
	mov.b	[A0],R1L
	._inspect	'S', 'c', "OH_B", "$OH_B", 'G', 0, 3230
	jsr	$OH_B
	mov.b	-1[FB],A0	;  i 
	add.w	-3[FB],A0	;  rDate 
	mov.b	R0L,[A0]
	inc.b	-1[FB]	;  i 
	cmp.b	#03H,-1[FB]	;  i 
	jltu	L4979
	._line	3231
	mov.w	-3[FB],A0	;  rDate 
	mov.w	#0000H,0003H[A0]
	._line	3233
	mov.b	#00H,0005H[A0]
	._eblock
	._line	3234
	exitd	
E59:
M71:
	._efunc	M71
	._inspect	'F', 'd', "AddOneDay", "$AddOneDay", 'G', 3203, 0, 00h, 0
	._inspect	'F', 't', "AddOneDay", 'G', 670
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 3208, 0, 00h, 0
	._inspect	'F', 'r', "CalDay", "$CalDay", 'G', 3210, 0, 00h, 0
	._inspect	'F', 'r', "OH_B", "$OH_B", 'G', 3230, 0, 00h, 0
	._inspect	'F', 'e', "AddOneDay", "$AddOneDay", 'G', 1, 0


;## #	FUNCTION find_record_in_cur_5min_frm_min_idx
;## #	FRAME	AUTO	(    Date)	size  6,	offset -12
;## #	FRAME	AUTO	(  nblock)	size  2,	offset -6
;## #	FRAME	AUTO	(getblock)	size  2,	offset -4
;## #	FRAME	AUTO	(       i)	size  1,	offset 12
;## #	FRAME	AUTO	(     tmp)	size  1,	offset -2
;## #	FRAME	AUTO	(      st)	size  1,	offset -1
;## #  FRAME   ARG (  req_tm)  size   6,    offset 5
;## #  FRAME   ARG (     cmp)  size   1,    offset 11
;## #  FRAME   ARG ( min_blk)  size   2,    offset 12
;## #  FRAME   ARG (read_blk)  size   2,    offset 14
;## #  REGISTER ARG    (      st)   size   1,   REGISTER R1L
;## #	ARG Size(11)	Auto Size(12)	Context Size(5)

	._type	673,'O',18
	._type	674,'x',16,5
	._type	674,'m','st',0,3
	._type	674,'m','req_tm',0,312
	._type	674,'m','cmp',0,3
	._type	674,'m','min_blk',0,18
	._type	674,'m','read_blk',0,673
	._func	'find_record_in_cur_5min_frm_min_idx','G',12,674,$find_record_in_cur_5min_frm_min_idx,0
	._inspect	'F', 's', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 17
	.align
	._line	3242
	.glb	$find_record_in_cur_5min_frm_min_idx
$find_record_in_cur_5min_frm_min_idx:
	enter	#0cH
	mov.b	R1L,-1[FB]	;  st  st 
	._block
	._var	'st','A',3,-1
	._var	'req_tm','A',312,5
	._var	'cmp','A',3,11
	._var	'min_blk','A',18,12
	._type	675,'O',18
	._var	'read_blk','A',675,14
	._var	'nblock','A',18,-6
	._var	'getblock','A',18,-4
	._var	'tmp_blk','A',18,0
	._var	'tmp','A',3,-2
	._var	'Date','A',312,-12
	._var	'i','A',3,12
	._var	'j','A',3,0
	._line	3251
	mov.w	12[FB],-4[FB]	;  min_blk  getblock 
	._line	3252
	mov.w	12[FB],-6[FB]	;  min_blk  nblock 
	._line	3253
	mov.b	#0ffH,-2[FB]	;  tmp 
	._line	3255
	mov.b	#00H,12[FB]	;  i 
L5001:
	._line	3256
	._block
	._line	3257
	._inspect	'S', 'c', "FeedWatchdog", "_FeedWatchdog", 'G', 0, 3257
	jsr	_FeedWatchdog
	._line	3258
	mov.w	-6[FB],-4[FB]	;  nblock  getblock 
	._line	3259
	push.b	#02H
	._inspect	'S', 'p', 1
	mova	-6[FB],R1	;  nblock 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 3259
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	3284
	cmp.w	#0002H,R0	;  ret 
	jeq	L5013
	._eblock
	._line	3285
	._block
	._line	3286
	mov.w	#0ffffH,R0
	exitd	
	._eblock
L5013:
	._line	3289
	mov.b	-1[FB],R0L	;  st 
	jeq	L5023
	._line	3290
	mov.b	-1[FB],R1H	;  st 
	add.b	#-1,R1H
	mov.w	#0001H,A0
	shl.w	R1H,A0
	mov.b	A0,R0L
	mov.b	_Co+6,-2[FB]	;  tmp 
	and.b	R0L,-2[FB]	;  tmp 
L5023:
	._line	3292
	mova	-12[FB],R2	;  Date 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 3292
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	3293
	mov.b	#00H,-7[FB]	;  Date 
	._line	3295
	push.b	#04H
	._inspect	'S', 'p', 1
	mova	5[FB],R2	;  req_tm 
	mova	-12[FB],R1	;  Date 
	._inspect	'S', 'c', "My_Memcmp", "$My_Memcmp", 'G', 0, 3295
	jsr	$My_Memcmp
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.b	R0L,R0H
	jeq	L5033
	._line	3296
	._block
	._line	3297
	mov.w	#0fffeH,R0
	exitd	
	._eblock
L5033:
	._line	3300
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	5[FB],R2	;  req_tm 
	mova	-12[FB],R1	;  Date 
	._inspect	'S', 'c', "My_Memcmp", "$My_Memcmp", 'G', 0, 3300
	jsr	$My_Memcmp
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'res','R',3,1
	._line	3301
	mov.b	-2[FB],R0H	;  tmp 
	jeq	L5167
	._eblock
	._line	3302
	._block
	._block
	._var	'res','R',3,1
	._line	3303
	mov.b	R0L,R0H
	jeq	L5153
	cmp.b	#01H,R0L	;  res 
	jne	L5167
	._eblock
	cmp.b	#01H,11[FB]	;  cmp 
	jne	L5167
L5153:
	._line	3304
	._block
	._line	3305
	mov.w	14[FB],A0	;  read_blk 
	mov.w	-4[FB],[A0]	;  getblock 
	._line	3306
	mov.w	#0000H,R0
	exitd	
	._eblock
	._eblock
L5167:
	._line	3312
	cmp.w	_LoadRecord+2,-4[FB]	;  getblock 
	jltu	L5169
	tst.b	#02H,_LoadRecord+39
	jnz	L5169
	._line	3313
	._block
	._line	3314
	mov.w	#0ffffH,R0
	exitd	
	._eblock
L5169:
	inc.b	12[FB]	;  i 
	cmp.b	#05H,12[FB]	;  i 
	jltu	L5001
	._eblock
	._line	3318
	mov.w	#0ffffH,R0
	exitd	
E60:
	._eblock
M72:
	._efunc	M72
	._inspect	'F', 'd', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 3242, 0, 00h, 0
	._inspect	'F', 't', "find_record_in_cur_5min_frm_min_idx", 'G', 674
	._inspect	'F', 'r', "FeedWatchdog", "_FeedWatchdog", 'G', 3257, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 3259, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 3290, 1280, 0, 0, 00h
	._inspect	'V', 'r', "Co", 'G', 3292, 1280, 0, 0, 00h
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 3292, 0, 00h, 0
	._inspect	'F', 'r', "My_Memcmp", "$My_Memcmp", 'G', 3295, 0, 00h, 0
	._inspect	'F', 'r', "My_Memcmp", "$My_Memcmp", 'G', 3300, 0, 00h, 0
	._inspect	'V', 'r', "LoadRecord", 'G', 3312, 46, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 3312, 46, 0, 0, 02000000h
	._inspect	'F', 'e', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 1, 0


;## #	FUNCTION read_n_pnt_record_from_time
;## #	FRAME	AUTO	(nReadPage)	size  2,	offset -8
;## #	FRAME	AUTO	( min_blk)	size  2,	offset -6
;## #	FRAME	AUTO	(    pBuf)	size  2,	offset -4
;## #	FRAME	AUTO	( cur_off)	size  1,	offset 12
;## #	FRAME	AUTO	(     pnt)	size  1,	offset -2
;## #	FRAME	AUTO	( lst_off)	size  1,	offset -1
;## #  FRAME   ARG (  req_tm)  size   6,    offset 5
;## #  FRAME   ARG ( req_pnt)  size   1,    offset 11
;## #  FRAME   ARG ( need_tm)  size   1,    offset 12
;## #  FRAME   ARG (      id)  size   4,    offset 13
;## #  FRAME   ARG (rCommand)  size   2,    offset 17
;## #  FRAME   ARG ( rBuffer)  size   2,    offset 19
;## #  FRAME   ARG (    mode)  size   1,    offset 21
;## #	ARG Size(17)	Auto Size(8)	Context Size(5)

	._type	676,'O',3
	._type	677,'O',3
	._type	678,'x',16,7
	._type	678,'m','req_tm',5,312
	._type	678,'m','req_pnt',11,3
	._type	678,'m','need_tm',12,3
	._type	678,'m','id',13,438
	._type	678,'m','rCommand',17,676
	._type	678,'m','rBuffer',19,677
	._type	678,'m','mode',21,3
	._func	'read_n_pnt_record_from_time','G',8,678,_read_n_pnt_record_from_time,0
	._inspect	'F', 's', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 13
	.align
	._line	3323
	.glb	_read_n_pnt_record_from_time
_read_n_pnt_record_from_time:
	enter	#08H
	._block
	._var	'req_tm','A',312,5
	._var	'req_pnt','A',3,11
	._var	'need_tm','A',3,12
	._var	'id','A',438,13
	._type	679,'O',3
	._var	'rCommand','A',679,17
	._type	680,'O',3
	._var	'rBuffer','A',680,19
	._var	'mode','A',3,21
	._var	'nReadPage','A',18,-8
	._var	'nblk','A',18,0
	._var	'timeCounter','A',18,0
	._type	681,'O',3
	._var	'pBuf','A',681,-4
	._var	'pnt','A',3,-2
	._var	'this_tm','A',312,0
	._var	'l_this','A',7,0
	._var	'l_req','A',7,0
	._var	'cur_off','A',3,12
	._var	'lst_off','A',3,-1
	._var	'min_blk','A',18,-6
	._line	3335
	mov.b	12[FB],R0L	;  need_tm 
	jeq	L5171
	._line	3336
	._block
	._line	3337
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	5[FB],R2	;  req_tm 
	mov.w	19[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "My_memcpyRev", "$My_memcpyRev", 'G', 0, 3337
	jsr	$My_memcpyRev
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3338
	mov.w	19[FB],-4[FB]	;  rBuffer  pBuf 
	add.w	#0005H,-4[FB]	;  pBuf 
	._eblock
	._line	3339
	jmp	L5173
	._line	3340
L5171:
	._line	3341
	._block
	._line	3342
	mov.w	19[FB],-4[FB]	;  rBuffer  pBuf 
	._eblock
	._line	3343
L5173:
	._line	3346
	mov.w	#0ff00H,-2[FB]	;  pnt 
L5175:
	._line	3346
	cmp.b	11[FB],-2[FB]	;  req_pnt  pnt 
	jgeu	L5315
	._line	3347
	._block
	._line	3348
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	5[FB],R2	;  req_tm 
	mov.w	#_MainSoftDate,R1
	._inspect	'S', 'c', "CompareBytes", "$CompareBytes", 'G', 0, 3348
	jsr	$CompareBytes
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	3349
	cmp.w	#0ffffH,R0	;  ret 
	jne	L5187
	._eblock
	._line	3351
	._block
	._line	3352
	mov.b	_user_req_pnt,R0L
	mov.b	R0L,_sum_done_pnt
	mov.b	#00H,_sum_done_pnt+1
	._line	3353
	jmp	L5315
	._eblock
L5187:
	._line	3355
	mov.b	9[FB],R1L	;  req_tm 
	._inspect	'S', 'c', "OB_H", "$OB_H", 'G', 0, 3355
	jsr	$OB_H
	mov.b	#00H,R0H
	divu.b	#05H
	mov.b	R0L,12[FB]	;  cur_off 
	._line	3356
	cmp.b	-1[FB],R0L	;  lst_off 
	jne	L5295
	cmp.b	_lst_record_tm+3,8[FB]	;  req_tm 
	jeq	L5207
L5295:
	._line	3357
	._block
	._line	3358
	mova	-6[FB],R2	;  min_blk 
	mova	5[FB],R1	;  req_tm 
	._inspect	'S', 'c', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 0, 3358
	jsr	$get_5min_idx_by_time
	._block
	._var	'ret','R',16,5
	._line	3359
	cmp.w	#0000H,R0	;  ret 
	jpz	L5197
	._eblock
	._line	3360
	._block
	._line	3362
	mov.w	#0ffffH,-6[FB]	;  min_blk 
	._eblock
	._line	3363
	jmp	L5199
	._line	3364
L5197:
	._line	3365
	._block
	._line	3366
	mov.w	-6[FB],_next_record_block	;  min_blk 
	._eblock
	._line	3367
L5199:
	._line	3369
	mov.b	12[FB],-1[FB]	;  cur_off  lst_off 
	._eblock
L5207:
	._line	3373
	cmp.w	#0ffffH,-6[FB]	;  min_blk 
	jeq	L5255
	._line	3374
	._block
	._line	3375
	._inspect	'S', 'p', 2
	pusha	-8[FB]	;  nReadPage 
	push.w	_next_record_block
	._inspect	'S', 'p', 2
	push.b	#00H
	._inspect	'S', 'p', 1
	push.w	9[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	7[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	5[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	mov.b	_sort,R1L
	._inspect	'S', 'c', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 0, 3375
	jsr	$find_record_in_cur_5min_frm_min_idx
	._inspect	'S', 'p', -11
	add.b	#0bH,SP
	._block
	._var	'ret','R',16,5
	._line	3376
	cmp.w	#0000H,R0	;  ret 
	jpz	L5235
	._eblock
	._line	3377
	._block
	._line	3378
	._inspect	'S', 'p', 2
	pusha	5[FB]	;  req_tm 
	push.w	-4[FB]	;  pBuf 
	._inspect	'S', 'p', 2
	push.b	14[FB]	;  id 
	._inspect	'S', 'p', 1
	mov.b	13[FB],R1L	;  id 
	._inspect	'S', 'c', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 0, 3378
	jsr	$patch_no_data_pnt
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._eblock
	._line	3380
	jmp	L5311
	._line	3381
L5235:
	._line	3382
	._block
	._line	3383
	push.b	#01H
	._inspect	'S', 'p', 1
	mova	-8[FB],R1	;  nReadPage 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 3383
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3384
	push.w	-4[FB]	;  pBuf 
	._inspect	'S', 'p', 2
	push.b	14[FB]	;  id 
	._inspect	'S', 'p', 1
	mov.b	13[FB],R1L	;  id 
	._inspect	'S', 'c', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 0, 3384
	jsr	$get_data_from_cob_base_id
	._inspect	'S', 'p', -3
	add.b	#03H,SP
	._line	3385
	mov.b	_Co+1,R0L
	mov.b	#00H,R0H
	add.w	-8[FB],R0	;  nReadPage 
	mov.w	R0,_next_record_block
	._line	3386
	cmp.w	#0f600H,R0
	jltu	L5311
	._line	3387
	._block
	._line	3388
	mov.w	_next_record_block,R0
	mov.w	#0000H,R2
	divu.w	#0f600H
	mov.w	R2,_next_record_block
	._eblock
	._line	3389
	jmp	L5311
	._eblock
	._eblock
	._line	3392
L5255:
	._line	3393
	._block
	._line	3394
	._inspect	'S', 'p', 2
	pusha	5[FB]	;  req_tm 
	push.w	-4[FB]	;  pBuf 
	._inspect	'S', 'p', 2
	push.b	14[FB]	;  id 
	._inspect	'S', 'p', 1
	mov.b	13[FB],R1L	;  id 
	._inspect	'S', 'c', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 0, 3394
	jsr	$patch_no_data_pnt
	._inspect	'S', 'p', -5
	add.b	#05H,SP
	._eblock
	._line	3395
L5311:
	._line	3397
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	5[FB],R2	;  req_tm 
	mov.w	#_lst_record_tm,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3397
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3399
	mov.w	_period,R2
	mova	5[FB],R1	;  req_tm 
	._inspect	'S', 'c', "time_add_minute", "$time_add_minute", 'G', 0, 3399
	jsr	$time_add_minute
	._line	3400
	mov.b	_per_len,R0L
	mov.b	#00H,R0H
	add.w	R0,-4[FB]	;  pBuf 
	._line	3401
	add.w	#0001H,_sum_done_pnt
	._line	3402
	push.w	#0000H
	push.w	#01f4H
	._inspect	'S', 'p', 4
	push.w	_rd_ld_time+2
	push.w	_rd_ld_time
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "GetTimeCount", "_GetTimeCount", 'G', 0, 3402
	jsr	_GetTimeCount
	._inspect	'S', 'p', -8
	add.b	#08H,SP
	mov.b	R0L,R0H
	jeq	L5315
	._eblock
	inc.b	-2[FB]	;  pnt 
	jmp	L5175
L5315:
	._line	3407
	mov.b	-2[FB],R0L	;  pnt 
	jne	L5273
	._line	3408
	._block
	._line	3409
	mov.w	#0000H,R0
	exitd	
	._eblock
	._line	3411
L5273:
	._line	3412
	._block
	._line	3413
	mov.w	-4[FB],R0	;  pBuf 
	sub.w	19[FB],R0	;  rBuffer 
	exitd	
E61:
	._eblock
	._eblock
M73:
	._efunc	M73
	._inspect	'F', 'd', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 3323, 0, 00h, 0
	._inspect	'F', 't', "read_n_pnt_record_from_time", 'G', 678
	._inspect	'F', 'r', "My_memcpyRev", "$My_memcpyRev", 'G', 3337, 0, 00h, 0
	._inspect	'V', 'r', "MainSoftDate", 'G', 3348, 7, 0, 0, 00h
	._inspect	'F', 'r', "CompareBytes", "$CompareBytes", 'G', 3348, 0, 00h, 0
	._inspect	'V', 'r', "user_req_pnt", 'G', 3352, 1, 0, 0, 00h
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3352, 2, 0, 0, 00h
	._inspect	'F', 'r', "OB_H", "$OB_H", 'G', 3355, 0, 00h, 0
	._inspect	'V', 'r', "lst_record_tm", 'G', 3356, 6, 0, 0, 00h
	._inspect	'F', 'r', "get_5min_idx_by_time", "$get_5min_idx_by_time", 'G', 3358, 0, 00h, 0
	._inspect	'V', 'r', "next_record_block", 'G', 3366, 2, 0, 0, 00h
	._inspect	'V', 'r', "next_record_block", 'G', 3375, 2, 0, 0, 00h
	._inspect	'V', 'r', "sort", 'S', 3375, 1, 0, 0, 00h
	._inspect	'F', 'r', "find_record_in_cur_5min_frm_min_idx", "$find_record_in_cur_5min_frm_min_idx", 'G', 3375, 0, 00h, 0
	._inspect	'F', 'r', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 3378, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 3383, 0, 00h, 0
	._inspect	'F', 'r', "get_data_from_cob_base_id", "$get_data_from_cob_base_id", 'G', 3384, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 3385, 1280, 0, 0, 00h
	._inspect	'V', 'r', "next_record_block", 'G', 3385, 2, 0, 0, 00h
	._inspect	'V', 'r', "next_record_block", 'G', 3388, 2, 0, 0, 00h
	._inspect	'V', 'r', "next_record_block", 'G', 3388, 2, 0, 0, 00h
	._inspect	'F', 'r', "patch_no_data_pnt", "$patch_no_data_pnt", 'G', 3394, 0, 00h, 0
	._inspect	'V', 'r', "lst_record_tm", 'G', 3397, 6, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3397, 0, 00h, 0
	._inspect	'V', 'r', "period", 'S', 3399, 2, 0, 0, 00h
	._inspect	'F', 'r', "time_add_minute", "$time_add_minute", 'G', 3399, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 3400, 1, 0, 0, 00h
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3401, 2, 0, 0, 00h
	._inspect	'V', 'r', "rd_ld_time", 'G', 3402, 4, 0, 0, 00h
	._inspect	'F', 'r', "GetTimeCount", "_GetTimeCount", 'G', 3402, 0, 00h, 0
	._inspect	'F', 'e', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 11, 0


;## #	FUNCTION time_align
;## #	FRAME	AUTO	(timeCounter)	size  2,	offset -5
;## #	FRAME	AUTO	(      tm)	size  2,	offset -3
;## #	FRAME	AUTO	(    temp)	size  1,	offset -1
;## #  REGISTER ARG    (      tm)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(5)	Context Size(5)

	._type	682,'v'
	._type	683,'O',312
	._type	684,'x',682,1
	._type	684,'m','tm',-3,683
	._func	'time_align','G',5,684,$time_align,0
	._inspect	'F', 's', "time_align", "$time_align", 'G', 10
	.align
	._line	3510
	.glb	$time_align
$time_align:
	enter	#05H
	mov.w	R1,-3[FB]	;  tm  tm 
	._block
	._type	685,'O',312
	._var	'tm','A',685,-3
	._var	'timeCounter','A',18,-5
	._var	'temp','A',3,-1
	._line	3515
	mova	-1[FB],R2	;  temp 
	mov.w	-3[FB],A0	;  tm 
	mov.b	0003H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 3515
	jsr	$BCD2Byte
	._line	3516
	mov.b	-1[FB],R0L	;  temp 
	mov.b	#00H,R0H
	mul.w	#003cH,R0
	mov.w	R0,-5[FB]	;  timeCounter 
	._line	3517
	mova	-1[FB],R2	;  temp 
	mov.w	-3[FB],A0	;  tm 
	mov.b	0004H[A0],R1L
	._inspect	'S', 'c', "BCD2Byte", "$BCD2Byte", 'G', 0, 3517
	jsr	$BCD2Byte
	._line	3518
	mov.b	-1[FB],R0L	;  temp 
	mov.b	#00H,R0H
	add.w	R0,-5[FB]	;  timeCounter 
	._line	3521
	mov.w	-5[FB],R0	;  timeCounter 
	mov.w	#0000H,R2
	divu.w	_period
	._block
	._var	'mod','R',18,7
	._line	3522
	cmp.w	#0000H,R2	;  mod 
	jeq	L5317
	._eblock
	._line	3523
	._block
	._block
	._var	'mod','R',18,7
	._line	3524
	mov.w	_period,R0
	sub.w	R2,R0	;  mod 
	._eblock
	mov.w	-3[FB],R1	;  tm 
	mov.w	R0,R2
	._inspect	'S', 'c', "time_add_minute", "$time_add_minute", 'G', 0, 3524
	jsr	$time_add_minute
	._eblock
L5317:
	._eblock
	._line	3527
	exitd	
E62:
M74:
	._efunc	M74
	._inspect	'F', 'd', "time_align", "$time_align", 'G', 3510, 0, 00h, 0
	._inspect	'F', 't', "time_align", 'G', 684
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 3515, 0, 00h, 0
	._inspect	'F', 'r', "BCD2Byte", "$BCD2Byte", 'G', 3517, 0, 00h, 0
	._inspect	'V', 'r', "period", 'S', 3521, 2, 0, 0, 00h
	._inspect	'V', 'r', "period", 'S', 3524, 2, 0, 0, 00h
	._inspect	'F', 'r', "time_add_minute", "$time_add_minute", 'G', 3524, 0, 00h, 0
	._inspect	'F', 'e', "time_align", "$time_align", 'G', 0, 0


;## #	FUNCTION check_time_pass_fst_record
;## #	FRAME	AUTO	(      tm)	size  6,	offset -24
;## #	FRAME	AUTO	( this_tm)	size  6,	offset -18
;## #	FRAME	AUTO	(   req_l)	size  4,	offset -12
;## #	FRAME	AUTO	(  this_l)	size  4,	offset -8
;## #	FRAME	AUTO	(     blk)	size  2,	offset -4
;## #	FRAME	AUTO	(  req_tm)	size  2,	offset -2
;## #  REGISTER ARG    (  req_tm)   size   2,   REGISTER R1
;## #	ARG Size(0)	Auto Size(24)	Context Size(5)

	._type	686,'O',312
	._type	687,'x',16,1
	._type	687,'m','req_tm',-2,686
	._func	'check_time_pass_fst_record','G',24,687,$check_time_pass_fst_record,0
	._inspect	'F', 's', "check_time_pass_fst_record", "$check_time_pass_fst_record", 'G', 29
	.align
	._line	3530
	.glb	$check_time_pass_fst_record
$check_time_pass_fst_record:
	enter	#018H
	mov.w	R1,-2[FB]	;  req_tm  req_tm 
	._block
	._type	688,'O',312
	._var	'req_tm','A',688,-2
	._var	'blk','A',18,-4
	._var	'this_tm','A',312,-18
	._var	'reStart','A',3,0
	._var	'tm','A',312,-24
	._var	'this_l','A',7,-8
	._var	'req_l','A',7,-12
	._line	3542
	push.b	#00H
	._inspect	'S', 'p', 1
	mova	-4[FB],R1	;  blk 
	._inspect	'S', 'c', "Find_First_Record", "$Find_First_Record", 'G', 0, 3542
	jsr	$Find_First_Record
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	3543
	cmp.w	#0000H,R0	;  ret 
	jpz	L5329
	._eblock
	._line	3544
	._block
	._block
	._var	'ret','R',16,5
	._line	3545
	._eblock
	exitd	
	._eblock
L5329:
	._line	3548
	push.b	#03H
	._inspect	'S', 'p', 1
	mova	-4[FB],R1	;  blk 
	._inspect	'S', 'c', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 0, 3548
	jsr	$ReadData_To_Cob
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._block
	._var	'ret','R',16,5
	._line	3549
	cmp.w	#0000H,R0	;  ret 
	jpz	L5339
	._eblock
	._line	3550
	._block
	._block
	._var	'ret','R',16,5
	._line	3551
	._eblock
	exitd	
	._eblock
L5339:
	._line	3553
	mov.b	#00H,-13[FB]	;  this_tm 
	._line	3554
	mova	-18[FB],R2	;  this_tm 
	mov.w	#_Co+2,R1
	._inspect	'S', 'c', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 0, 3554
	jsr	$DateTimeNoSec4ByteTo5Byte
	._line	3555
	mov.w	-2[FB],R1	;  req_tm 
	._inspect	'S', 'c', "time_align", "$time_align", 'G', 0, 3555
	jsr	$time_align
	._line	3556
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	-18[FB],R2	;  this_tm 
	mov.w	-2[FB],R1	;  req_tm 
	._inspect	'S', 'c', "CompareBytes", "$CompareBytes", 'G', 0, 3556
	jsr	$CompareBytes
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	cmp.w	#0000H,R0
	jpz	L5359
	._line	3557
	._block
	._line	3558
	mova	-18[FB],R1	;  this_tm 
	._inspect	'S', 'c', "time_align", "$time_align", 'G', 0, 3558
	jsr	$time_align
	._line	3559
	mova	-8[FB],R2	;  this_l 
	push.w	-14[FB]	;  this_tm 
	._inspect	'S', 'p', 2
	push.w	-16[FB]	;  this_tm 
	._inspect	'S', 'p', 2
	push.w	-18[FB]	;  this_tm 
	._inspect	'S', 'p', 2
	._inspect	'S', 'c', "TimeToLong", "$TimeToLong", 'G', 0, 3559
	jsr	$TimeToLong
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	3561
	push.b	#06H
	._inspect	'S', 'p', 1
	mov.w	-2[FB],R2	;  req_tm 
	mova	-24[FB],R1	;  tm 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3561
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3562
	mova	-12[FB],R2	;  req_l 
	push.w	-20[FB]	;  tm 
	._inspect	'S', 'p', 2
	push.w	-22[FB]	;  tm 
	._inspect	'S', 'p', 2
	push.w	-24[FB]	;  tm 
	._inspect	'S', 'p', 2
	._inspect	'S', 'c', "TimeToLong", "$TimeToLong", 'G', 0, 3562
	jsr	$TimeToLong
	._inspect	'S', 'p', -6
	add.b	#06H,SP
	._line	3563
	mov.w	-8+2[FB],R2	;  this_l 
	mov.w	-8[FB],R0	;  this_l 
	sub.w	-12[FB],R0	;  req_l 
	sbb.w	-12+2[FB],R2	;  req_l 
	push.w	#0000H
	push.w	#003cH
	._inspect	'S', 'p', 4
	._inspect	'S', 'c', "", "__i4divU", 'G', 0, 3563
	jsr.a	__i4divU
	._inspect	'S', 'p', -4
	add.b	#04H,SP
	mov.w	_period,R1
	._inspect	'S', 'c', "", "__i4i2divU", 'G', 0, 3563
	.glb	__i4i2divU
	jsr.a	__i4i2divU
	._block
	._var	'pnt','R',3,1
	._line	3564
	cmp.b	_user_req_pnt,R0L	;  pnt 
	jltu	L5349
	._eblock
	._line	3565
	._block
	._line	3566
	mov.b	#00H,_user_req_pnt
	._eblock
	._line	3567
	jmp	L5351
	._line	3568
L5349:
	._block
	._var	'pnt','R',3,1
	._eblock
	._line	3569
	._block
	._block
	._var	'pnt','R',3,1
	._line	3570
	sub.b	R0L,_user_req_pnt	;  pnt 
	._eblock
	._eblock
	._line	3571
L5351:
	._line	3572
	push.b	#05H
	._inspect	'S', 'p', 1
	mova	-18[FB],R2	;  this_tm 
	mov.w	-2[FB],R1	;  req_tm 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3572
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
L5359:
	._line	3576
	mov.w	#0000H,R0
	exitd	
E63:
	._eblock
M75:
	._efunc	M75
	._inspect	'F', 'd', "check_time_pass_fst_record", "$check_time_pass_fst_record", 'G', 3530, 0, 00h, 0
	._inspect	'F', 't', "check_time_pass_fst_record", 'G', 687
	._inspect	'F', 'r', "Find_First_Record", "$Find_First_Record", 'G', 3542, 0, 00h, 0
	._inspect	'F', 'r', "ReadData_To_Cob", "$ReadData_To_Cob", 'G', 3548, 0, 00h, 0
	._inspect	'V', 'r', "Co", 'G', 3554, 1280, 0, 0, 00h
	._inspect	'F', 'r', "DateTimeNoSec4ByteTo5Byte", "$DateTimeNoSec4ByteTo5Byte", 'G', 3554, 0, 00h, 0
	._inspect	'F', 'r', "time_align", "$time_align", 'G', 3555, 0, 00h, 0
	._inspect	'F', 'r', "CompareBytes", "$CompareBytes", 'G', 3556, 0, 00h, 0
	._inspect	'F', 'r', "time_align", "$time_align", 'G', 3558, 0, 00h, 0
	._inspect	'F', 'r', "TimeToLong", "$TimeToLong", 'G', 3559, 0, 00h, 0
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3561, 0, 00h, 0
	._inspect	'F', 'r', "TimeToLong", "$TimeToLong", 'G', 3562, 0, 00h, 0
	._inspect	'V', 'r', "period", 'S', 3563, 2, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3564, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3566, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3570, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3570, 1, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3572, 0, 00h, 0
	._inspect	'F', 'e', "check_time_pass_fst_record", "$check_time_pass_fst_record", 'G', 6, 0


;## #	FUNCTION read_record_base_time_id
;## #	FRAME	AUTO	(  req_tm)	size  6,	offset -13
;## #	FRAME	AUTO	(     ret)	size  2,	offset -7
;## #	FRAME	AUTO	(rCommand)	size  2,	offset -5
;## #	FRAME	AUTO	(     seq)	size  1,	offset -3
;## #	FRAME	AUTO	( req_num)	size  1,	offset -2
;## #	FRAME	AUTO	( max_pnt)	size  1,	offset -1
;## #  FRAME   ARG (      id)  size   4,    offset 5
;## #  FRAME   ARG ( rBuffer)  size   2,    offset 9
;## #  FRAME   ARG (    mode)  size   1,    offset 11
;## #  FRAME   ARG (   uartx)  size   1,    offset 12
;## #  REGISTER ARG    (rCommand)   size   2,   REGISTER R2
;## #	ARG Size(8)	Auto Size(13)	Context Size(5)

	._type	689,'O',3
	._type	690,'O',3
	._type	691,'x',16,5
	._type	691,'m','id',0,438
	._type	691,'m','rCommand',0,689
	._type	691,'m','rBuffer',0,690
	._type	691,'m','mode',0,3
	._type	691,'m','uartx',0,3
	._func	'read_record_base_time_id','G',13,691,$read_record_base_time_id,0
	._inspect	'F', 's', "read_record_base_time_id", "$read_record_base_time_id", 'G', 18
	.align
	._line	3587
	.glb	$read_record_base_time_id
$read_record_base_time_id:
	enter	#0dH
	mov.w	R2,-5[FB]	;  rCommand  rCommand 
	._block
	._var	'id','A',438,5
	._type	692,'O',3
	._var	'rCommand','A',692,-5
	._type	693,'O',3
	._var	'rBuffer','A',693,9
	._var	'mode','A',3,11
	._var	'uartx','A',3,12
	._var	'req_tm','A',312,-13
	._var	'timeCounter','A',18,0
	._var	'temp','A',3,0
	._var	'mod','A',18,0
	._var	'ret','A',16,-7
	._var	'max_pnt','A',3,-1
	._var	'req_num','A',3,-2
	._var	'seq','A',3,-3
	._line	3598
	._inspect	'S', 'c', "GetNowTime", "_GetNowTime", 'G', 0, 3598
	jsr	_GetNowTime
	mov.w	R0,_rd_ld_time
	mov.w	R2,_rd_ld_time+2
	._line	3599
	mov.b	6[FB],R0L	;  id  type 
	._block
	._var	'type','R',3,1
	._line	3600
	mov.b	R0L,A0
	._eblock
	mov.b	_sort_base_type[A0],_sort
	._line	3601
	mov.b	_sort,A0
	dec.w	A0
	shl.w	#01H,A0
	cmp.w	#0ffffH,_LoadRecord+27[A0]
	jne	L5377
	._line	3602
	._block
	._line	3603
	mov.w	#0000H,R0
	exitd	
	._eblock
L5377:
	._line	3606
	push.b	6[FB]	;  id 
	._inspect	'S', 'p', 1
	mov.b	5[FB],R1L	;  id 
	._inspect	'S', 'c', "get_single_id_data_len", "$get_single_id_data_len", 'G', 0, 3606
	jsr	$get_single_id_data_len
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	mov.b	R0L,_per_len
	._line	3607
	mov.b	11[FB],R0L	;  mode 
	jne	L5387
	._line	3608
	mov.b	#0bfH,R0L
	mov.b	#00H,R0H
	divu.b	_per_len
	mov.b	R0L,-1[FB]	;  max_pnt 
	jmp	L5389
	._line	3609
L5387:
	._line	3610
	mov.b	#0c3H,R0L
	mov.b	#00H,R0H
	divu.b	_per_len
	mov.b	R0L,-1[FB]	;  max_pnt 
L5389:
	._line	3611
	cmp.b	_user_req_pnt,-1[FB]	;  max_pnt 
	jleu	L5397
	._line	3612
	._block
	._line	3613
	mov.b	_user_req_pnt,-1[FB]	;  max_pnt 
	._eblock
L5397:
	._line	3617
	mov.b	_sort,A0
	dec.w	A0
	shl.w	#01H,A0
	mov.w	_Meter_Parameter+364[A0],_period
	._line	3619
	mov.b	11[FB],R0L	;  mode 
	jne	L5479
	._line	3620
	._block
	._line	3621
	mov.b	12[FB],A0	;  uartx 
	mul.w	#000dH,A0
	mov.w	#0000H,_Iterate_Tree_Flag+0009H[A0]
	._line	3622
	mov.b	#00H,_lst_record_tm+5
	._line	3623
	mov.b	#00H,-8[FB]	;  req_tm 
	._line	3624
	mov.w	-5[FB],A0	;  rCommand 
	mov.b	0001H[A0],-9[FB]	;  req_tm 
	._line	3625
	mov.b	0002H[A0],-10[FB]	;  req_tm 
	._line	3626
	mov.b	0003H[A0],-11[FB]	;  req_tm 
	._line	3627
	mov.b	0004H[A0],-12[FB]	;  req_tm 
	._line	3628
	mov.b	0005H[A0],-13[FB]	;  req_tm 
	._line	3629
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "CheckTime", "$CheckTime", 'G', 0, 3629
	jsr	$CheckTime
	mov.b	R0L,R0H
	jne	L5407
	._line	3630
	._block
	._line	3631
	and.b	#0f7H,_cx+141
	._line	3632
	mov.w	#0000H,R0
	exitd	
	._eblock
L5407:
	._line	3634
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "check_time_pass_fst_record", "$check_time_pass_fst_record", 'G', 0, 3634
	jsr	$check_time_pass_fst_record
	mov.w	R0,-7[FB]	;  ret 
	._line	3635
	jpz	L5417
	._line	3636
	mov.w	#0000H,R0
	exitd	
L5417:
	._line	3637
	mov.b	_user_req_pnt,R0L
	jne	L5427
	._line	3638
	._block
	._line	3639
	mov.w	#0000H,R0
	exitd	
	._eblock
L5427:
	._line	3641
	cmp.b	#06H,6[FB]	;  id 
	jeq	L5561
	cmp.b	#07H,6[FB]	;  id 
	jne	L5437
L5561:
	._line	3642
	._block
	._line	3643
	push.b	_per_len
	._inspect	'S', 'p', 1
	push.b	#0ffH
	._inspect	'S', 'p', 1
	mov.w	#_lst_pnt_data,R1
	._inspect	'S', 'c', "memset", "$memset", 'G', 0, 3643
	jsr	$memset
	._inspect	'S', 'p', -2
	add.b	#02H,SP
	._eblock
L5437:
	._line	3666
	mov.w	#0000H,_sum_done_pnt
	._line	3667
	mov.w	#0ffffH,_next_record_block
	._line	3668
	mov.w	#0ffffH,_fst_not_rd_blk
	._line	3669
	cmp.b	_user_req_pnt,-1[FB]	;  max_pnt 
	jleu	L5475
	mov.b	_user_req_pnt,-2[FB]	;  req_num 
	jmp	L5477
L5475:
	mov.b	-1[FB],-2[FB]	;  max_pnt  req_num 
L5477:
	._line	3670
	push.b	11[FB]	;  mode 
	._inspect	'S', 'p', 1
	push.w	9[FB]	;  rBuffer 
	._inspect	'S', 'p', 2
	push.w	-5[FB]	;  rCommand 
	._inspect	'S', 'p', 2
	push.w	7[FB]	;  id 
	._inspect	'S', 'p', 2
	push.w	5[FB]	;  id 
	._inspect	'S', 'p', 2
	push.b	#01H
	._inspect	'S', 'p', 1
	push.b	-2[FB]	;  req_num 
	._inspect	'S', 'p', 1
	push.w	-9[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-11[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-13[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	._inspect	'S', 'c', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 0, 3670
	jsr	_read_n_pnt_record_from_time
	._inspect	'S', 'p', -17
	add.b	#011H,SP
	mov.w	R0,-7[FB]	;  ret 
	._line	3671
	mov.b	R0L,_last_frm_len
	._line	3672
	push.b	_last_frm_len
	._inspect	'S', 'p', 1
	mov.w	9[FB],R2	;  rBuffer 
	mov.w	#_Card_WR_Buff+256,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3672
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	3673
	jmp	L5519
	._line	3674
L5479:
	._line	3675
	._block
	._line	3676
	mov.w	-5[FB],A0	;  rCommand 
	mov.b	[A0],-3[FB]	;  seq 
	._line	3677
	mov.b	-3[FB],R0L	;  seq 
	mov.b	#00H,R0H
	mov.b	12[FB],A0	;  uartx 
	mul.w	#000dH,A0
	mov.w	_Iterate_Tree_Flag+0009H[A0],R1
	add.w	#0001H,R1
	cmp.w	R0,R1
	jne	L5499
	._line	3678
	._block
	._line	3679
	mov.b	_user_req_pnt,R0L
	mov.b	#00H,R0H
	mov.b	-1[FB],R1L	;  max_pnt 
	mov.b	#00H,R1H
	add.w	_sum_done_pnt,R1
	cmp.w	R0,R1
	jgtu	L5489
	._line	3680
	._block
	._line	3681
	mov.b	-1[FB],-2[FB]	;  max_pnt  req_num 
	._eblock
	._line	3682
	jmp	L5491
	._line	3683
L5489:
	._line	3684
	._block
	._line	3685
	mov.b	_user_req_pnt,-2[FB]	;  req_num 
	sub.b	_sum_done_pnt,-2[FB]	;  req_num 
	._eblock
	._line	3686
L5491:
	._line	3687
	mov.b	#00H,-8[FB]	;  req_tm 
	._line	3688
	push.b	#05H
	._inspect	'S', 'p', 1
	mov.w	#_lst_record_tm,R2
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3688
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3689
	mov.w	_period,R2
	mova	-13[FB],R1	;  req_tm 
	._inspect	'S', 'c', "time_add_minute", "$time_add_minute", 'G', 0, 3689
	jsr	$time_add_minute
	._line	3690
	push.b	11[FB]	;  mode 
	._inspect	'S', 'p', 1
	push.w	9[FB]	;  rBuffer 
	._inspect	'S', 'p', 2
	push.w	-5[FB]	;  rCommand 
	._inspect	'S', 'p', 2
	push.w	7[FB]	;  id 
	._inspect	'S', 'p', 2
	push.w	5[FB]	;  id 
	._inspect	'S', 'p', 2
	push.b	#00H
	._inspect	'S', 'p', 1
	push.b	-2[FB]	;  req_num 
	._inspect	'S', 'p', 1
	push.w	-9[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-11[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	push.w	-13[FB]	;  req_tm 
	._inspect	'S', 'p', 2
	._inspect	'S', 'c', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 0, 3690
	jsr	_read_n_pnt_record_from_time
	._inspect	'S', 'p', -17
	add.b	#011H,SP
	mov.w	R0,-7[FB]	;  ret 
	._line	3691
	mov.b	R0L,_last_frm_len
	._line	3692
	push.b	_last_frm_len
	._inspect	'S', 'p', 1
	mov.w	9[FB],R2	;  rBuffer 
	mov.w	#_Card_WR_Buff+256,R1
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3692
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._eblock
	._line	3693
	jmp	L5511
	._line	3694
L5499:
	cmp.w	R0,_Iterate_Tree_Flag+0009H[A0]
	jne	L5509
	._line	3695
	._block
	._line	3696
	push.b	_last_frm_len
	._inspect	'S', 'p', 1
	mov.w	#_Card_WR_Buff+256,R2
	mov.w	9[FB],R1	;  rBuffer 
	._inspect	'S', 'c', "memcpy", "$memcpy", 'G', 0, 3696
	jsr	$memcpy
	._inspect	'S', 'p', -1
	add.b	#01H,SP
	._line	3697
	mov.b	_last_frm_len,R0L
	mov.b	R0L,-7[FB]	;  ret 
	mov.b	#00H,-7+1[FB]	;  ret 
	._eblock
	._line	3698
	jmp	L5511
	._line	3699
L5509:
	._line	3700
	._block
	._line	3701
	mov.w	#8000H,R0
	exitd	
	._eblock
	._line	3702
L5511:
	._line	3704
	mov.b	-3[FB],R0L	;  seq 
	mov.b	#00H,R0H
	mov.b	12[FB],A0	;  uartx 
	mul.w	#000dH,A0
	cmp.w	R0,_Iterate_Tree_Flag+0009H[A0]
	jeq	L5519
	._line	3705
	._block
	._line	3706
	mov.w	#_Iterate_Tree_Flag,R0
	add.w	R0,A0
	add.w	#0009H,A0
	add.w	#0001H,[A0]
	._eblock
L5519:
	._eblock
	._line	3710
	mov.b	_user_req_pnt,R0L
	mov.b	#00H,R0H
	cmp.w	R0,_sum_done_pnt
	jgeu	L5529
	._line	3711
	._block
	._line	3712
	bset	7,-6[FB]	;  ret 
	._eblock
L5529:
	._line	3714
	mov.w	-7[FB],R0	;  ret 
	exitd	
E64:
	._eblock
M76:
	._efunc	M76
	._inspect	'F', 'd', "read_record_base_time_id", "$read_record_base_time_id", 'G', 3587, 0, 00h, 0
	._inspect	'F', 't', "read_record_base_time_id", 'G', 691
	._inspect	'F', 'r', "GetNowTime", "_GetNowTime", 'G', 3598, 0, 00h, 0
	._inspect	'V', 'r', "rd_ld_time", 'G', 3598, 4, 0, 0, 00h
	._inspect	'V', 'r', "sort", 'S', 3600, 1, 0, 0, 00h
	._inspect	'V', 'r', "sort_base_type", 'G', 3600, 9, 0, 0, 00h
	._inspect	'V', 'r', "sort", 'S', 3601, 1, 0, 0, 00h
	._inspect	'V', 'r', "LoadRecord", 'G', 3601, 46, 0, 0, 00h
	._inspect	'F', 'r', "get_single_id_data_len", "$get_single_id_data_len", 'G', 3606, 0, 00h, 0
	._inspect	'V', 'r', "per_len", 'S', 3606, 1, 0, 0, 00h
	._inspect	'V', 'r', "per_len", 'S', 3608, 1, 0, 0, 00h
	._inspect	'V', 'r', "per_len", 'S', 3610, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3611, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3613, 1, 0, 0, 00h
	._inspect	'V', 'r', "sort", 'S', 3617, 1, 0, 0, 00h
	._inspect	'V', 'r', "period", 'S', 3617, 2, 0, 0, 00h
	._inspect	'V', 'r', "Meter_Parameter", 'G', 3617, 623, 0, 0, 00h
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 3621, 52, 0, 0, 00h
	._inspect	'V', 'r', "lst_record_tm", 'G', 3622, 6, 0, 0, 00h
	._inspect	'F', 'r', "CheckTime", "$CheckTime", 'G', 3629, 0, 00h, 0
	._inspect	'V', 'r', "cx", 'G', 3631, 188, 0, 0, 0800h
	._inspect	'F', 'r', "check_time_pass_fst_record", "$check_time_pass_fst_record", 'G', 3634, 0, 00h, 0
	._inspect	'V', 'r', "user_req_pnt", 'G', 3637, 1, 0, 0, 00h
	._inspect	'V', 'r', "per_len", 'S', 3643, 1, 0, 0, 00h
	._inspect	'V', 'r', "lst_pnt_data", 'G', 3643, 16, 0, 0, 00h
	._inspect	'F', 'r', "memset", "$memset", 'G', 3643, 0, 00h, 0
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3666, 2, 0, 0, 00h
	._inspect	'V', 'r', "next_record_block", 'G', 3667, 2, 0, 0, 00h
	._inspect	'V', 'r', "fst_not_rd_blk", 'G', 3668, 2, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3669, 1, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3669, 1, 0, 0, 00h
	._inspect	'F', 'r', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 3670, 0, 00h, 0
	._inspect	'V', 'r', "last_frm_len", 'G', 3671, 1, 0, 0, 00h
	._inspect	'V', 'r', "last_frm_len", 'G', 3672, 1, 0, 0, 00h
	._inspect	'V', 'r', "Card_WR_Buff", 'G', 3672, 512, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3672, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 3677, 52, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3679, 1, 0, 0, 00h
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3679, 2, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3685, 1, 0, 0, 00h
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3685, 2, 0, 0, 00h
	._inspect	'V', 'r', "lst_record_tm", 'G', 3688, 6, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3688, 0, 00h, 0
	._inspect	'V', 'r', "period", 'S', 3689, 2, 0, 0, 00h
	._inspect	'F', 'r', "time_add_minute", "$time_add_minute", 'G', 3689, 0, 00h, 0
	._inspect	'F', 'r', "read_n_pnt_record_from_time", "_read_n_pnt_record_from_time", 'G', 3690, 0, 00h, 0
	._inspect	'V', 'r', "last_frm_len", 'G', 3691, 1, 0, 0, 00h
	._inspect	'V', 'r', "last_frm_len", 'G', 3692, 1, 0, 0, 00h
	._inspect	'V', 'r', "Card_WR_Buff", 'G', 3692, 512, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3692, 0, 00h, 0
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 3694, 52, 0, 0, 00h
	._inspect	'V', 'r', "last_frm_len", 'G', 3696, 1, 0, 0, 00h
	._inspect	'V', 'r', "Card_WR_Buff", 'G', 3696, 512, 0, 0, 00h
	._inspect	'F', 'r', "memcpy", "$memcpy", 'G', 3696, 0, 00h, 0
	._inspect	'V', 'r', "last_frm_len", 'G', 3697, 1, 0, 0, 00h
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 3704, 52, 0, 0, 00h
	._inspect	'V', 'r', "Iterate_Tree_Flag", 'G', 3706, 52, 0, 0, 00h
	._inspect	'V', 'r', "user_req_pnt", 'G', 3710, 1, 0, 0, 00h
	._inspect	'V', 'r', "sum_done_pnt", 'G', 3710, 2, 0, 0, 00h
	._inspect	'F', 'e', "read_record_base_time_id", "$read_record_base_time_id", 'G', 17, 0

	.glb	$BCD2Byte
	.glb	$OB_H
	.glb	$OH_B
	.glb	$CheckTime
	.glb	$CheckBCD
	.glb	$CheckBCD_NByte
	.glb	_ABS
	.glb	$ten_seq
	.glb	$HexToBcd
	.glb	$BcdToHex
	.glb	$FormatBCD
	.glb	$CompareBytes
	.glb	$HexToACK
	.glb	$ACKToHex
	.glb	$search_unit
	.glb	$HexToBcdnByte
	.glb	$BcdToHexnByte
	.glb	$memcpy
	.glb	_format_data
	.glb	_Clear_Demand_Mode
	.glb	_EventEnergyValid_Flag
	.glb	_Event_AmpHour
	.glb	_EventCriticalVoltage_Flag
	.glb	_TempEventData
	.glb	_lostvoltenergyall
	.glb	_lostvoltenergy
	.glb	_EventTimeAdd
	.glb	_New2007_Event
	.glb	_EventRecordAdjustEnergy
	.glb	_EventData_PowerDown_Save
	.glb	_EventData_PowerOn_Check
	.glb	_EventRecord_Poweron_Check
	.glb	_PowerDownEvent_OnCheck
	.glb	_ProgrammeEvent
	.glb	_ClearMeterRecord
	.glb	_VoltStatSetDefault
	.glb	_VoltStatInit
	.glb	_VoltStatisticCheck
	.glb	_OverDemandEvent
	.glb	_AdjustTimeRecord
	.glb	_ClearDemandRecord
	.glb	_ProgWeekRecord
	.glb	_ProgAEModeRecord
	.glb	_ProgNEMode1Record
	.glb	_ProgNEMode2Record
	.glb	$ProgBillDayRecord
	.glb	_ProgYearSlotRecord
	.glb	_ProgDailySlotRecord
	.glb	_ClearNewEventRecord
	.glb	_PrepVoltStatReadData
	.glb	_ResetCpuEvent_OnCheck
	.glb	_RunClockErrorRecord
	.glb	_PowerUpClockErrorRecord
	.glb	_EepromErrorRecord
	.glb	_EnergyPassZeroRecord
	.glb	_SetPrimaryRecord
	.glb	_EepromEventSetDefault
	.glb	_EMeterPowerdownRecord
	.glb	_ClearEventRecord
	.glb	_ProgAEMode_NEMode1_NEMode2_Record
	.glb	_OpenBoxCoverEvent_Check
	.glb	_EventFlagPowerOnInit
	.glb	_ProgrammeEventEnd_Check_Payment
	.glb	_ProgrammeEventEnd_Check
	.glb	_VoltStatisticFunc
	.glb	_AdjustMeterRecord
	.glb	_PrepNewFirstEventData
	.glb	$Save_EventTimesANDPointer_4byte
	.glb	$Prepare_For_EventLastTime
	.glb	_Refresh_EventData
	.glb	_Refresh_AddTime
	.glb	_ClearEventDate_BatteryPowerOn
	.glb	_PrepLostVoltEnergyData
	.glb	_PowerAbnormalEventCheck
	.glb	_ClockBatteryDisplayBattery_Event
	.glb	$PdOpenCoverCheckInit
	.glb	_PdOpenCoverCheck
	.glb	_PdOpenCoverCheckPowerUpDeal
	.glb	_ClearEventAll
	.glb	_ClearEventCommDeal
	.glb	_ClearEventDataPowerOn
	.glb	$ClearEvent_EventBegin
	.glb	_VoltCheck_N
	.glb	_VoltStat
	.glb	_Clearevent_ID
	.glb	_pdopencovercheckdata
	.glb	_eventstatusinfo
	.glb	$Save_EventReportTimes
	.glb	_Freq
	.glb	_Volt
	.glb	_Voltc
	.glb	_Curr
	.glb	_Factor
	.glb	_Active_power
	.glb	_Reactive_power
	.glb	_Active_energy_per_sec
	.glb	_Reactive_energy_per_sec
	.glb	_Visual_power
	.glb	_Reactive_phase
	.glb	_Phase_Angle
	.glb	_N_Current
	.glb	_Meter_States
	.glb	_NEW645Meter_States
	.glb	_Meter_Parameter
	.glb	_Event_Power_Net_Flag
	.glb	_Event_Power_Net_Pointer
	.glb	_Event_Meter_Pro_Pointer
	.glb	_Event_Power_Net_Times
	.glb	_Event_Meter_Pro_Times
	.glb	_Event_Power_Net_Timeticks
	.glb	_Powerdown_Save_Data
	.glb	_energy_rail
	.glb	_This_Month_Data
	.glb	_Other_Data
	.glb	_CurrentImbalance_Energy
	.glb	_Co
	.glb	_WriteWhitchEeprom
	.glb	_Cal_PowerDown_Energy_add
	.glb	_TimeChontrolFlag
	.glb	_ProgramRunPhaseFlag
	.glb	_WriteTimeFlag
	.glb	_Event_Time_Flag
	.glb	_Alarm_Map_Flag
	.glb	_MainSoftDate
	.glb	_MainRamDate1
	.glb	_MainRamDate2
	.glb	_O1ther_Meter_Parameter
	.glb	_Max_Triff_Current
	.glb	_Active_power_Per_Mintue
	.glb	_Temperature_Current
	.glb	_Show_Powerdown_Cyc_Data
	.glb	_Show_Powerdown_Key_Data
	.glb	_Show_ID_vatiy
	.glb	_Show_Powerdown_Net_Flag_Backup
	.glb	_Show_flash_poweron_vatiy
	.glb	_show_which_now
	.glb	_Check_Max_Imbalance_Rate
	.glb	_SoftDate
	.glb	$SendByte
	.glb	$WriteBuffer
	.glb	_SwitchPage
	.glb	$ReadBuffer
	.glb	$SaveBuffer
	.glb	$LoadToBuffer
	.glb	$SaveIndex
	.glb	$Continuously_Program
	.glb	_Check_Sector_Have_Erased
	.glb	$FastRead_Data_Bytes
	.glb	$Write_Read_FM24C256
	.glb	_PowerOn_PCF8576
	.glb	_PowerOff_PCF8576
	.glb	_IIC_SOFT_RESET
	.glb	_Check_IIC_State
	.glb	$ClockChipInit
	.glb	$ClockChipRead
	.glb	$ClockChipWrite
	.glb	_ClockChipOpenSec
	.glb	_ClockChipCloseSec
	.glb	$IIC_Delay
	.glb	_CommB
	.glb	_ProgramEventFlag
	.glb	_JustMeterDataFlag
	.glb	_JustMeterDateFlag
	.glb	_JustMeterFlag
	.glb	_cx
	.glb	_Readdata_buff
	.glb	_COMM_Curr
	.glb	_COMM_Factor
	.glb	_COMM_Active_power
	.glb	_COMM_Reactive_power
	.glb	_COMM_Visual_power
	.glb	_COMM_Current_Demand
	.glb	_Freeze_Flag_DayHour
	.glb	_Comm_DailyOrYear_Slot
	.glb	_Comm_Firrespon_SecDispos_Buff
	.glb	_Comm_Firrespon_SecDispos_Uart
	.glb	_GPRS_Status
	.glb	_Voltage_ad_data
	.glb	_Displayfinish_flag
	.glb	_FullScreenTime
	.glb	_ad_Flag
	.glb	_ad_finish_Flag
	.glb	_meter_model_ok
	.glb	_fix_ad_data
	.glb	_comm_plus_energy_01wh
	.glb	_comm_nega_energy_01wh
	.glb	$Init_Comm
	.glb	$Interr_Comm_R
	.glb	$Interr_Comm_W
	.glb	$Communication
	.glb	$FindComCommand
	.glb	$AnswerComCommand
	.glb	$TransferData
	.glb	_GetNowTime
	.glb	_GetTimeCount
	.glb	$F_Ar
	.glb	$ReadData
	.glb	_WriteData
	.glb	_BroadcastJustTime
	.glb	_WriteAddress
	.glb	_WriteBaud
	.glb	_WritePassword
	.glb	_ClearDemand
	.glb	_R_W_Data
	.glb	$ReadLC256
	.glb	$WriteLC256
	.glb	$GetRecordAddr
	.glb	$Delay
	.glb	$CalDay
	.glb	$ComTime
	.glb	$ClearDemandCommAndKey
	.glb	$Clear_PasswordErr
	.glb	_CheckProgramKeyState
	.glb	_IC_Set_Program
	.glb	$FreezeEvent_Energy
	.glb	_Read_SystemTime_YMDH
	.glb	_Read_SystemTime_HMS
	.glb	_Set_SystemTime_YMDH
	.glb	_Set_SystemTime_HMS
	.glb	_Set_DemandPeriod
	.glb	_Set_DemandSkipPeriod
	.glb	_Set_Activem_Erengy_Mode
	.glb	_Set_REActivem_Erengy_1_Mode
	.glb	_Set_REActivem_Erengy_2_Mode
	.glb	_Set_ActivePulseConst
	.glb	_Set_Erengypoint
	.glb	_Set_BILL_Day
	.glb	_Set_SlotParemeter
	.glb	_Set_YearSlot
	.glb	_Set_ProgWeek
	.glb	_Set_Holiday
	.glb	_Set_DailySlot
	.glb	_Set_LoadRecoedBeginTime
	.glb	_Set_LoadRecoedPeriod
	.glb	_Set_MeterMode
	.glb	_Set_Meterlocktimes
	.glb	_Set_OutputModel
	.glb	_Exit_WorkRoomState
	.glb	_Read_primary_energy
	.glb	_Set_primary_energy
	.glb	_Read_WorkRoomState
	.glb	_Read_Freeze_Bit_0_data
	.glb	_Read_Freeze_Bit_1_data
	.glb	_Read_Freeze_Bit_2_data
	.glb	_Read_Freeze_Bit_3_data
	.glb	_Read_Freeze_Bit_4_data
	.glb	_Read_Freeze_Bit_5_data
	.glb	_Read_Freeze_Bit_6_data
	.glb	_Read_Freeze_Bit_7_data
	.glb	_Read_Freeze_Block_data
	.glb	_Read_Meter_lock_times
	.glb	$Check_Parameter_Len_IS_ok
	.glb	_Pre_No_use_leaf_data
	.glb	_Set_Display_Number
	.glb	_Set_Commrate
	.glb	_Read_Freeze_Date
	.glb	_Set_CycleDisplayTime
	.glb	_Read_Far_IR_Commate
	.glb	_Set_CriticalVoltage
	.glb	_Set_CommAddr
	.glb	_Set_Show_USER_Code
	.glb	_Read_Sign_Instance_Variable
	.glb	_Read_Meter_Temperature
	.glb	_Read_YearSlot_Table
	.glb	_Read_DailySlot_Table
	.glb	_Comm_Initialize_FLASH
	.glb	_Read_Last_loss_voltage_start_time
	.glb	_Read_Last_loss_voltage_end_time
	.glb	_Set_Freeze_Period_Begin_time
	.glb	_Set_Freeze_Period
	.glb	_Set_TriffSwitchDate
	.glb	_Set_Cycle_Key_Display
	.glb	_Read_Meter_FILEDATE_VI
	.glb	_CommBP
	.glb	_CurrPC
	.glb	_WriteDateBuff
	.glb	_Set_ShowNoKeyRetTime
	.glb	$CheckPasswordRight
	.glb	$CheckPasswoerErr
	.glb	$AppointTrasfPortBuff
	.glb	$Crc16l
	.glb	$Set_which_Responsion_Flag
	.glb	_Set_JFPG_Triff
	.glb	$Set_Meter_para_Deal
	.glb	_Read_Display_Number
	.glb	_Read_LostVoltEnergy
	.glb	_Read_LostVolt_AllEnergy
	.glb	_RTC_Init
	.glb	_PowerOn_FullScreen_TimeDetection
	.glb	_ReadClockBatteryVoltage
	.glb	_ReadDisplayBatteryVoltage
	.glb	_ReadEventReportInfo
	.glb	_GetEventReportMode
	.glb	_SetEventReportMode
	.glb	_SetPowerOnFullScreenTime
	.glb	_Set_SystemTime_YMDHHMS
	.glb	_GetMeterSoftIdNumber
	.glb	_SetMeterSoftIdNumber
	.glb	_GetNowMonthComActiveEnergy
	.glb	_GetLastMonthComActiveEnergy
	.glb	_Set_Freeze_Day
	.glb	_ReadEnergy01Wh
	.glb	_ResetEventReportInfo
	.glb	_Clear_EventReportStatus_And_Times
	.glb	_Set_ResetReportTime
	.glb	$Set_Read_Block_Para
	.glb	_Iterate_Tree_Flag
	.glb	_Comm_Staut
	.glb	_Leaf_num_now
	.glb	_Read_Com_ID
	.glb	$TransferData_New
	.glb	$math_Add
	.glb	$math_Demand
	.glb	$Check_Data_valid
	.glb	_TRAFF_RATE
	.glb	_Demand_Data_New
	.glb	_GDemandControl
	.glb	_Last_Average_Value
	.glb	_Current_Demand
	.glb	_demand_start
	.glb	_demand_init
	.glb	$ClearDemandArea
	.glb	_Demand_New_Init
	.glb	_Demand_New_Main
	.glb	_Demand_Accumulator
	.glb	_DemandputoutNum
	.glb	_DemandOutPutflagdata
	.glb	_Demand_Triff_Change
	.glb	$sizeof_format
	.glb	$TimeToLong
	.glb	$data_change
	.glb	$TimeIndex
	.glb	$IsLeapYear
	.glb	$CalWeek
	.glb	_Not_Rong_Year
	.glb	_Rong_Year
	.glb	_OLD_TRAFF_RATE
	.glb	_ErrEnergyNumber
	.glb	_WriteEE_Or_F
	.glb	_energy_back
	.glb	_ClockBatteryClear_Flag
	.glb	_ClockBatteryClearCounter
	.glb	_TempClockBatteryClearCounter
	.glb	_Light_Back_Up_Flag
	.glb	_Event_Report_flag
	.glb	_open_cover_reported
	.glb	_RamData_Valid_flag
	.glb	_Event_Report_Status
	.glb	_Event_Report_Status_Times
	.glb	_EventStatus_flag
	.glb	_Event_Report_Status_Backup
	.glb	_Event_Report_Status_communication
	.glb	_Event_Report_Iterate_flag
	.glb	_powerup_init_time
	.glb	_PowerUpProcese
	.glb	_FeedWatchdog
	.glb	_CheckPowerDown
	.glb	_Measure
	.glb	_OpenCoverCheck
	.glb	_ReadRTC
	.glb	_BackupDataToEeprom
	.glb	_FindTriff
	.glb	_BackUpEnergyToRam
	.glb	_CheckRamTime
	.glb	_Monitor_Program
	.glb	_Light_Back_Led
	.glb	_Close_Back_Light
	.glb	$CheckChange
	.glb	_CheckState
	.glb	$FreezeData_All
	.glb	_Cal_EnergyLimit
	.glb	_Bill_New
	.glb	$Check_Billdate_Validity
	.glb	_RailEnergyValidity
	.glb	_CheckState_New645
	.glb	_PowerUpLossTotalVoltage
	.glb	_Meter_Para_Check
	.glb	_Check_If_Clear_all
	.glb	_ClearClockBatteryTime
	.glb	_IsChangeBattery
	.glb	_LastMouthDayNumber
	.glb	_ISAutoBillDay
	.glb	$CRC
	.glb	_Meter_Staut_Check_And_Count
	.glb	$Event_Report_Status_Chk
	.glb	$Get_Event_Report_Status
	.glb	_Clear_ALLEventReportInfo_NO_ACK
	.glb	$EventReportState_Expand
	.glb	_ESAM_ErrReport
	.glb	_SwitchOn_Report
	.glb	_SwitchOff_Report
	.glb	_Overdraft_Report
	.glb	_IniRam
	.glb	$CheckEnergyRom1AndRom2
	.glb	$checkEnergyRight
	.glb	_Write_TO_Cal_PowerDown_Energy_add
	.glb	_SetDefault
	.glb	$Retort_New
	.glb	$TotalEnergyRight
	.glb	$ALL_TotalEnergyRight
	.glb	_EnergyAutoRectifyLevel1
	.glb	_EnergyAutoRectifyLevel2
	.glb	_Powerdown_to_ThisMonth
	.glb	$CheckEnergyPowerEnergy
	.glb	_ReadMeterPara
	.glb	$IsNormalReset
	.glb	_IsHaveSaveData
	.glb	_Clear_Savedata_flag
	.glb	_ReadEepromEnergy
	.glb	$ReadBlock
	.glb	_IsNormalResetWrite
	.glb	_Check_New
	.glb	_Para_Process_main
	.glb	_ReadEeprom
	.glb	_Para_Process_run
	.glb	_Parameter_flag
	.glb	_para_err_times
	.glb	$My_Memcmp
	.glb	$Byte2BCD
	.glb	$Find_Data_Record
	.glb	$Add_Addr
	.glb	$Get_SortAddr
	.glb	$Get_SortAddr1
	.glb	$Get_TotalAddr
	.glb	$Page_equal
	.glb	$Cover_Addr_Find
	.glb	$My_memcpyRev
	.glb	_Card_WR_Buff
	.glb	_DaysOfMonth

	.SECTION	data_NE,DATA,align
	._inspect	'U', 1, "data_NE", "data_NE", 0
	.glb	_FlashEaseTimes
_FlashEaseTimes:
	.blkb	4

	.SECTION	data_NO,DATA
	._inspect	'U', 1, "data_NO", "data_NO", 0
	.glb	_sort_base_type
_sort_base_type:
	.blkb	9

	.SECTION	data_NEI,ROMDATA
	._inspect	'U', 1, "data_NEI", "data_NEI", 0
;## # init data of FlashEaseTimes.
	.word	0000H
	.word	0000H

	.SECTION	data_NOI,ROMDATA
	._inspect	'U', 1, "data_NOI", "data_NOI", 0
;## # init data of sort_base_type.
	.byte	00H
	.byte	01H
	.byte	01H
	.byte	02H
	.byte	02H
	.byte	03H
	.byte	04H
	.byte	05H
	.byte	06H

	.SECTION	bss_NE,DATA,align
	._inspect	'U', 3, "bss_NE", "bss_NE", 0
	.glb	_LoadRecord
_LoadRecord:
	.blkb	46
	.glb	_Minute_Power_Data
_Minute_Power_Data:
	.blkb	72
	.glb	_Fs_Buff
_Fs_Buff:
	.blkb	528
	.glb	_Set_LoadRecoed_Btime
_Set_LoadRecoed_Btime:
	.blkb	6
	.glb	_First_Sort
_First_Sort:
	.blkb	6
	.glb	_remain_skip_pnt
_remain_skip_pnt:
	.blkb	2
	.glb	_sum_done_pnt
_sum_done_pnt:
	.blkb	2
	.glb	_next_record_block
_next_record_block:
	.blkb	2
	.glb	_fst_not_rd_blk
_fst_not_rd_blk:
	.blkb	2
_period:
	.blkb	2
	.glb	_lst_pnt_data
_lst_pnt_data:
	.blkb	16
	.glb	_lst_record_tm
_lst_record_tm:
	.blkb	6
	.glb	_l_lst_record
_l_lst_record:
	.blkb	4
	.glb	_rd_ld_time
_rd_ld_time:
	.blkb	4

	.SECTION	bss_NO,DATA
	._inspect	'U', 3, "bss_NO", "bss_NO", 0
	.glb	_user_req_pnt
_user_req_pnt:
	.blkb	1
	.glb	_Read_Count
_Read_Count:
	.blkb	3
	.glb	_Dat_Num
_Dat_Num:
	.blkb	1
	.glb	_FlashErrStatus
_FlashErrStatus:
	.blkb	1
	.glb	_last_frm_len
_last_frm_len:
	.blkb	1
_sort:
	.blkb	1
_per_len:
	.blkb	1
	.glb	_cur_hour_empty
_cur_hour_empty:
	.blkb	1

	.SECTION	rom_FE,ROMDATA,align
	._inspect	'U', 4, "rom_FE", "rom_FE", 0
	.glb	_BIT_UNC
_BIT_UNC:
	.byte	01H
	.byte	02H
	.byte	04H
	.byte	08H
	.byte	10H
	.byte	20H	;  ' '
	.byte	40H	;  '@'
	.byte	80H

	.SECTION	UserROMData_FE,ROMDATA,align
	._inspect	'U', 4, "UserROMData_FE", "rom_FE", 1
	.glb	_day_num
_day_num:
	.word	0000H
	.word	001fH
	.word	003cH
	.word	005bH
	.word	0079H
	.word	0098H
	.word	00b6H
	.word	00d5H
	.word	00f4H
	.word	0112H
	.word	0131H
	.word	014fH
	.glb	_Clase_Length
_Clase_Length:
	.byte	06H
	.byte	10H
	.byte	08H
	.byte	08H
	.byte	2aH	;  '*'
	.byte	14H
;#################################
;###  STATIC DATA INFORMATION  ###
;#################################
	._type	694,'O',3
	._type	695,'x',16,2
	._type	695,'m','src_data',0,3
	._type	695,'m','dest_data',0,694
	._var	'BCD2Byte','F',695
	._type	696,'x',3,1
	._type	696,'m','bcd',0,3
	._var	'OB_H','F',696
	._type	697,'x',3,1
	._type	697,'m','hex',0,3
	._var	'OH_B','F',697
	._type	698,'O',3
	._type	699,'x',3,1
	._type	699,'m','time',0,698
	._var	'CheckTime','F',699
	._type	700,'x',3,1
	._type	700,'m','data',0,3
	._var	'CheckBCD','F',700
	._type	701,'O',3
	._type	702,'x',3,2
	._type	702,'m','input',0,701
	._type	702,'m','n',0,3
	._var	'CheckBCD_NByte','F',702
	._type	703,'x',7,1
	._type	703,'m','rData',0,20
	._var	'ABS','F',703
	._type	704,'x',20,1
	._type	704,'m','seq',0,19
	._var	'ten_seq','F',704
	._type	705,'v'
	._type	706,'O',3
	._type	707,'O',3
	._type	708,'x',705,3
	._type	708,'m','',0,18
	._type	708,'m','',0,706
	._type	708,'m','',0,707
	._var	'HexToBcd','F',708
	._type	709,'v'
	._type	710,'O',3
	._type	711,'O',3
	._type	712,'x',709,3
	._type	712,'m','',0,18
	._type	712,'m','',0,710
	._type	712,'m','',0,711
	._var	'BcdToHex','F',712
	._type	713,'v'
	._type	714,'O',3
	._type	715,'x',713,3
	._type	715,'m','rSource',0,7
	._type	715,'m','rDesc',0,714
	._type	715,'m','rLength',0,3
	._var	'FormatBCD','F',715
	._type	716,'O',3
	._type	717,'O',3
	._type	718,'x',16,3
	._type	718,'m','rData1',0,716
	._type	718,'m','rData2',0,717
	._type	718,'m','rLength',0,3
	._var	'CompareBytes','F',718
	._type	719,'v'
	._type	720,'O',3
	._type	721,'O',3
	._type	722,'x',719,3
	._type	722,'m','point1',0,720
	._type	722,'m','point2',0,721
	._type	722,'m','len',0,18
	._var	'HexToACK','F',722
	._type	723,'v'
	._type	724,'O',3
	._type	725,'O',3
	._type	726,'x',723,3
	._type	726,'m','point1',0,724
	._type	726,'m','point2',0,725
	._type	726,'m','len',0,18
	._var	'ACKToHex','F',726
	._type	727,'x',7,1
	._type	727,'m','unit_flag',0,3
	._var	'search_unit','F',727
	._type	728,'v'
	._type	729,'O',3
	._type	730,'O',3
	._type	731,'x',728,3
	._type	731,'m','n',0,3
	._type	731,'m','src_data',0,729
	._type	731,'m','dest_data',0,730
	._var	'HexToBcdnByte','F',731
	._type	732,'v'
	._type	733,'O',3
	._type	734,'O',3
	._type	735,'x',732,3
	._type	735,'m','n',0,3
	._type	735,'m','src_data',0,733
	._type	735,'m','dest_data',0,734
	._var	'BcdToHexnByte','F',735
	._type	736,'O',3
	._type	737,'O',3
	._type	738,'O',3
	._type	739,'x',736,3
	._type	739,'m','Dest',0,737
	._type	739,'m','Src',0,738
	._type	739,'m','len',0,3
	._var	'memcpy','F',739
	._type	740,'x',20,2
	._type	740,'m','input',0,20
	._type	740,'m','mode',0,3
	._var	'format_data','F',740
	._type	743,'g','b0',0,1,3
	._type	744,'g','b1',0,1,3
	._type	745,'g','b2',0,1,3
	._type	746,'g','b3',0,1,3
	._type	747,'g','b4',0,1,3
	._type	748,'g','b5',0,1,3
	._type	749,'g','b6',0,1,3
	._type	750,'g','b7',0,1,3
	._type	742,'S','',1
	._type	742,'m','b0',743,0
	._type	742,'m','b1',744,1
	._type	742,'m','b2',745,2
	._type	742,'m','b3',746,3
	._type	742,'m','b4',747,4
	._type	742,'m','b5',748,5
	._type	742,'m','b6',749,6
	._type	742,'m','b7',750,7
	._type	741,'U','BYTE_DEF',1
	._type	741,'m','bit',742,0
	._type	741,'m','byte',3,0
	._var	'pm0_addr','S',741,_pm0_addr
	._var	'pm1_addr','S',741,_pm1_addr
	._var	'cm0_addr','S',741,_cm0_addr
	._var	'cm1_addr','S',741,_cm1_addr
	._var	'csr_addr','S',741,_csr_addr
	._var	'prcr_addr','S',741,_prcr_addr
	._var	'dbr_addr','S',741,_dbr_addr
	._var	'cm2_addr','S',741,_cm2_addr
	._var	'prg2c_addr','S',741,_prg2c_addr
	._var	'pclkr_addr','S',741,_pclkr_addr
	._var	'cpsrf_addr','S',741,_cpsrf_addr
	._var	'rstfr_addr','S',741,_rstfr_addr
	._var	'vcr1_addr','S',741,_vcr1_addr
	._var	'vcr2_addr','S',741,_vcr2_addr
	._var	'cse_addr','S',741,_cse_addr
	._var	'plc0_addr','S',741,_plc0_addr
	._var	'pm2_addr','S',741,_pm2_addr
	._var	'vwce_addr','S',741,_vwce_addr
	._var	'vd1ls_addr','S',741,_vd1ls_addr
	._var	'vw0c_addr','S',741,_vw0c_addr
	._var	'vw1c_addr','S',741,_vw1c_addr
	._var	'vw2c_addr','S',741,_vw2c_addr
	._var	'int7ic_addr','S',741,_int7ic_addr
	._var	'int6ic_addr','S',741,_int6ic_addr
	._var	'int3ic_addr','S',741,_int3ic_addr
	._var	'tb5ic_addr','S',741,_tb5ic_addr
	._var	'tb4ic_addr','S',741,_tb4ic_addr
	._var	'u1bcnic_addr','S',741,_u1bcnic_addr
	._var	'tb3ic_addr','S',741,_tb3ic_addr
	._var	'u0bcnic_addr','S',741,_u0bcnic_addr
	._var	's4ic_addr','S',741,_s4ic_addr
	._var	'int5ic_addr','S',741,_int5ic_addr
	._var	's3ic_addr','S',741,_s3ic_addr
	._var	'int4ic_addr','S',741,_int4ic_addr
	._var	'bcnic_addr','S',741,_bcnic_addr
	._var	'dm0ic_addr','S',741,_dm0ic_addr
	._var	'dm1ic_addr','S',741,_dm1ic_addr
	._var	'kupic_addr','S',741,_kupic_addr
	._var	'adic_addr','S',741,_adic_addr
	._var	's2tic_addr','S',741,_s2tic_addr
	._var	's2ric_addr','S',741,_s2ric_addr
	._var	's0tic_addr','S',741,_s0tic_addr
	._var	's0ric_addr','S',741,_s0ric_addr
	._var	's1tic_addr','S',741,_s1tic_addr
	._var	's1ric_addr','S',741,_s1ric_addr
	._var	'ta0ic_addr','S',741,_ta0ic_addr
	._var	'ta1ic_addr','S',741,_ta1ic_addr
	._var	'ta2ic_addr','S',741,_ta2ic_addr
	._var	'ta3ic_addr','S',741,_ta3ic_addr
	._var	'ta4ic_addr','S',741,_ta4ic_addr
	._var	'tb0ic_addr','S',741,_tb0ic_addr
	._var	'tb1ic_addr','S',741,_tb1ic_addr
	._var	'tb2ic_addr','S',741,_tb2ic_addr
	._var	'int0ic_addr','S',741,_int0ic_addr
	._var	'int1ic_addr','S',741,_int1ic_addr
	._var	'int2ic_addr','S',741,_int2ic_addr
	._var	'dm2ic_addr','S',741,_dm2ic_addr
	._var	'dm3ic_addr','S',741,_dm3ic_addr
	._var	'u5bcnic_addr','S',741,_u5bcnic_addr
	._var	'cec1ic_addr','S',741,_cec1ic_addr
	._var	's5tic_addr','S',741,_s5tic_addr
	._var	'cec2ic_addr','S',741,_cec2ic_addr
	._var	's5ric_addr','S',741,_s5ric_addr
	._var	'u6bcnic_addr','S',741,_u6bcnic_addr
	._var	'rtctic_addr','S',741,_rtctic_addr
	._var	's6tic_addr','S',741,_s6tic_addr
	._var	'rtccic_addr','S',741,_rtccic_addr
	._var	's6ric_addr','S',741,_s6ric_addr
	._var	'u7bcnic_addr','S',741,_u7bcnic_addr
	._var	'pmc0ic_addr','S',741,_pmc0ic_addr
	._var	's7tic_addr','S',741,_s7tic_addr
	._var	'pmc1ic_addr','S',741,_pmc1ic_addr
	._var	's7ric_addr','S',741,_s7ric_addr
	._var	'iicic_addr','S',741,_iicic_addr
	._var	'scldaic_addr','S',741,_scldaic_addr
	._type	753,'g','b0',0,1,3
	._type	754,'g','b1',0,1,3
	._type	755,'g','b2',0,1,3
	._type	756,'g','b3',0,1,3
	._type	757,'g','b4',0,1,3
	._type	758,'g','b5',0,1,3
	._type	759,'g','b6',0,1,3
	._type	760,'g','b7',0,1,3
	._type	761,'g','b8',0,1,3
	._type	762,'g','b9',0,1,3
	._type	763,'g','b10',0,1,3
	._type	764,'g','b11',0,1,3
	._type	765,'g','b12',0,1,3
	._type	766,'g','b13',0,1,3
	._type	767,'g','b14',0,1,3
	._type	768,'g','b15',0,1,3
	._type	769,'g','b16',0,1,3
	._type	770,'g','b17',0,1,3
	._type	771,'g','b18',0,1,3
	._type	772,'g','b19',0,1,3
	._type	773,'g','b20',0,1,3
	._type	774,'g','b21',0,1,3
	._type	775,'g','b22',0,1,3
	._type	776,'g','b23',0,1,3
	._type	777,'g','b24',0,1,3
	._type	778,'g','b25',0,1,3
	._type	779,'g','b26',0,1,3
	._type	780,'g','b27',0,1,3
	._type	781,'g','b28',0,1,3
	._type	782,'g','b29',0,1,3
	._type	783,'g','b30',0,1,3
	._type	784,'g','b31',0,1,3
	._type	752,'S','',4
	._type	752,'m','b0',753,0
	._type	752,'m','b1',754,1
	._type	752,'m','b2',755,2
	._type	752,'m','b3',756,3
	._type	752,'m','b4',757,4
	._type	752,'m','b5',758,5
	._type	752,'m','b6',759,6
	._type	752,'m','b7',760,7
	._type	752,'m','b8',761,8
	._type	752,'m','b9',762,9
	._type	752,'m','b10',763,10
	._type	752,'m','b11',764,11
	._type	752,'m','b12',765,12
	._type	752,'m','b13',766,13
	._type	752,'m','b14',767,14
	._type	752,'m','b15',768,15
	._type	752,'m','b16',769,16
	._type	752,'m','b17',770,17
	._type	752,'m','b18',771,18
	._type	752,'m','b19',772,19
	._type	752,'m','b20',773,20
	._type	752,'m','b21',774,21
	._type	752,'m','b22',775,22
	._type	752,'m','b23',776,23
	._type	752,'m','b24',777,24
	._type	752,'m','b25',778,25
	._type	752,'m','b26',779,26
	._type	752,'m','b27',780,27
	._type	752,'m','b28',781,28
	._type	752,'m','b29',782,29
	._type	752,'m','b30',783,30
	._type	752,'m','b31',784,31
	._type	785,'S','',4
	._type	785,'m','low',3,0
	._type	785,'m','mid',3,1
	._type	785,'m','high',3,2
	._type	785,'m','nc',3,3
	._type	751,'U','DWORD_DEF',4
	._type	751,'m','bit',752,0
	._type	751,'m','byte',785,0
	._type	751,'m','dword',7,0
	._var	'sar0_addr','S',751,_sar0_addr
	._var	'dar0_addr','S',751,_dar0_addr
	._type	788,'g','b0',0,1,3
	._type	789,'g','b1',0,1,3
	._type	790,'g','b2',0,1,3
	._type	791,'g','b3',0,1,3
	._type	792,'g','b4',0,1,3
	._type	793,'g','b5',0,1,3
	._type	794,'g','b6',0,1,3
	._type	795,'g','b7',0,1,3
	._type	796,'g','b8',0,1,3
	._type	797,'g','b9',0,1,3
	._type	798,'g','b10',0,1,3
	._type	799,'g','b11',0,1,3
	._type	800,'g','b12',0,1,3
	._type	801,'g','b13',0,1,3
	._type	802,'g','b14',0,1,3
	._type	803,'g','b15',0,1,3
	._type	787,'S','',2
	._type	787,'m','b0',788,0
	._type	787,'m','b1',789,1
	._type	787,'m','b2',790,2
	._type	787,'m','b3',791,3
	._type	787,'m','b4',792,4
	._type	787,'m','b5',793,5
	._type	787,'m','b6',794,6
	._type	787,'m','b7',795,7
	._type	787,'m','b8',796,8
	._type	787,'m','b9',797,9
	._type	787,'m','b10',798,10
	._type	787,'m','b11',799,11
	._type	787,'m','b12',800,12
	._type	787,'m','b13',801,13
	._type	787,'m','b14',802,14
	._type	787,'m','b15',803,15
	._type	804,'S','',2
	._type	804,'m','low',3,0
	._type	804,'m','high',3,1
	._type	786,'U','WORD_DEF',2
	._type	786,'m','bit',787,0
	._type	786,'m','byte',804,0
	._type	786,'m','word',5,0
	._var	'tcr0_addr','S',786,_tcr0_addr
	._var	'dm0con_addr','S',741,_dm0con_addr
	._var	'sar1_addr','S',751,_sar1_addr
	._var	'dar1_addr','S',751,_dar1_addr
	._var	'tcr1_addr','S',786,_tcr1_addr
	._var	'dm1con_addr','S',741,_dm1con_addr
	._var	'sar2_addr','S',751,_sar2_addr
	._var	'dar2_addr','S',751,_dar2_addr
	._var	'tcr2_addr','S',786,_tcr2_addr
	._var	'dm2con_addr','S',741,_dm2con_addr
	._var	'sar3_addr','S',751,_sar3_addr
	._var	'dar3_addr','S',751,_dar3_addr
	._var	'tcr3_addr','S',786,_tcr3_addr
	._var	'dm3con_addr','S',741,_dm3con_addr
	._var	'tb01_addr','S',786,_tb01_addr
	._var	'tb11_addr','S',786,_tb11_addr
	._var	'tb21_addr','S',786,_tb21_addr
	._var	'ppwfs1_addr','S',741,_ppwfs1_addr
	._var	'tbcs0_addr','S',741,_tbcs0_addr
	._var	'tbcs1_addr','S',741,_tbcs1_addr
	._var	'tacs0_addr','S',741,_tacs0_addr
	._var	'tacs1_addr','S',741,_tacs1_addr
	._var	'tacs2_addr','S',741,_tacs2_addr
	._var	'pwmfs_addr','S',741,_pwmfs_addr
	._var	'tapofs_addr','S',741,_tapofs_addr
	._var	'taow_addr','S',741,_taow_addr
	._var	'tprc_addr','S',741,_tprc_addr
	._var	'tb31_addr','S',786,_tb31_addr
	._var	'tb41_addr','S',786,_tb41_addr
	._var	'tb51_addr','S',786,_tb51_addr
	._var	'ppwfs2_addr','S',741,_ppwfs2_addr
	._var	'tbcs2_addr','S',741,_tbcs2_addr
	._var	'tbcs3_addr','S',741,_tbcs3_addr
	._var	'pmc0con0_addr','S',741,_pmc0con0_addr
	._var	'pmc0con1_addr','S',741,_pmc0con1_addr
	._var	'pmc0con2_addr','S',741,_pmc0con2_addr
	._var	'pmc0con3_addr','S',741,_pmc0con3_addr
	._var	'pmc0sts_addr','S',741,_pmc0sts_addr
	._var	'pmc0int_addr','S',741,_pmc0int_addr
	._var	'pmc0cpc_addr','S',741,_pmc0cpc_addr
	._var	'pmc0cpd_addr','S',741,_pmc0cpd_addr
	._var	'pmc1con0_addr','S',741,_pmc1con0_addr
	._var	'pmc1con1_addr','S',741,_pmc1con1_addr
	._var	'pmc1con2_addr','S',741,_pmc1con2_addr
	._var	'pmc1con3_addr','S',741,_pmc1con3_addr
	._var	'pmc1sts_addr','S',741,_pmc1sts_addr
	._var	'pmc1int_addr','S',741,_pmc1int_addr
	._var	'ifsr3a_addr','S',741,_ifsr3a_addr
	._var	'ifsr2a_addr','S',741,_ifsr2a_addr
	._var	'ifsr_addr','S',741,_ifsr_addr
	._var	'aier_addr','S',741,_aier_addr
	._var	'aier2_addr','S',741,_aier2_addr
	._var	'rmad0_addr','S',751,_rmad0_addr
	._var	'rmad1_addr','S',751,_rmad1_addr
	._var	'rmad2_addr','S',751,_rmad2_addr
	._var	'rmad3_addr','S',751,_rmad3_addr
	._var	'fmr0_addr','S',741,_fmr0_addr
	._var	'fmr1_addr','S',741,_fmr1_addr
	._var	'fmr2_addr','S',741,_fmr2_addr
	._var	'fmr6_addr','S',741,_fmr6_addr
	._var	'u0smr4_addr','S',741,_u0smr4_addr
	._var	'u0smr3_addr','S',741,_u0smr3_addr
	._var	'u0smr2_addr','S',741,_u0smr2_addr
	._var	'u0smr_addr','S',741,_u0smr_addr
	._var	'u0mr_addr','S',741,_u0mr_addr
	._var	'u0brg_addr','S',741,_u0brg_addr
	._var	'u0tb_addr','S',786,_u0tb_addr
	._var	'u0c0_addr','S',741,_u0c0_addr
	._var	'u0c1_addr','S',741,_u0c1_addr
	._var	'u0rb_addr','S',786,_u0rb_addr
	._var	'ucon_addr','S',741,_ucon_addr
	._var	'u1smr4_addr','S',741,_u1smr4_addr
	._var	'u1smr3_addr','S',741,_u1smr3_addr
	._var	'u1smr2_addr','S',741,_u1smr2_addr
	._var	'u1smr_addr','S',741,_u1smr_addr
	._var	'u1mr_addr','S',741,_u1mr_addr
	._var	'u1brg_addr','S',741,_u1brg_addr
	._var	'u1tb_addr','S',786,_u1tb_addr
	._var	'u1c0_addr','S',741,_u1c0_addr
	._var	'u1c1_addr','S',741,_u1c1_addr
	._var	'u1rb_addr','S',786,_u1rb_addr
	._var	'u2smr4_addr','S',741,_u2smr4_addr
	._var	'u2smr3_addr','S',741,_u2smr3_addr
	._var	'u2smr2_addr','S',741,_u2smr2_addr
	._var	'u2smr_addr','S',741,_u2smr_addr
	._var	'u2mr_addr','S',741,_u2mr_addr
	._var	'u2brg_addr','S',741,_u2brg_addr
	._var	'u2tb_addr','S',786,_u2tb_addr
	._var	'u2c0_addr','S',741,_u2c0_addr
	._var	'u2c1_addr','S',741,_u2c1_addr
	._var	'u2rb_addr','S',786,_u2rb_addr
	._var	's3trr_addr','S',741,_s3trr_addr
	._var	's3c_addr','S',741,_s3c_addr
	._var	's3brg_addr','S',741,_s3brg_addr
	._var	's4trr_addr','S',741,_s4trr_addr
	._var	's4c_addr','S',741,_s4c_addr
	._var	's4brg_addr','S',741,_s4brg_addr
	._var	's34c2_addr','S',741,_s34c2_addr
	._var	'u5smr4_addr','S',741,_u5smr4_addr
	._var	'u5smr3_addr','S',741,_u5smr3_addr
	._var	'u5smr2_addr','S',741,_u5smr2_addr
	._var	'u5smr_addr','S',741,_u5smr_addr
	._var	'u5mr_addr','S',741,_u5mr_addr
	._var	'u5brg_addr','S',741,_u5brg_addr
	._var	'u5tb_addr','S',786,_u5tb_addr
	._var	'u5c0_addr','S',741,_u5c0_addr
	._var	'u5c1_addr','S',741,_u5c1_addr
	._var	'u5rb_addr','S',786,_u5rb_addr
	._var	'u6smr4_addr','S',741,_u6smr4_addr
	._var	'u6smr3_addr','S',741,_u6smr3_addr
	._var	'u6smr2_addr','S',741,_u6smr2_addr
	._var	'u6smr_addr','S',741,_u6smr_addr
	._var	'u6mr_addr','S',741,_u6mr_addr
	._var	'u6brg_addr','S',741,_u6brg_addr
	._var	'u6tb_addr','S',786,_u6tb_addr
	._var	'u6c0_addr','S',741,_u6c0_addr
	._var	'u6c1_addr','S',741,_u6c1_addr
	._var	'u6rb_addr','S',786,_u6rb_addr
	._var	'u7smr4_addr','S',741,_u7smr4_addr
	._var	'u7smr3_addr','S',741,_u7smr3_addr
	._var	'u7smr2_addr','S',741,_u7smr2_addr
	._var	'u7smr_addr','S',741,_u7smr_addr
	._var	'u7mr_addr','S',741,_u7mr_addr
	._var	'u7brg_addr','S',741,_u7brg_addr
	._var	'u7tb_addr','S',786,_u7tb_addr
	._var	'u7c0_addr','S',741,_u7c0_addr
	._var	'u7c1_addr','S',741,_u7c1_addr
	._var	'u7rb_addr','S',786,_u7rb_addr
	._var	's00_addr','S',741,_s00_addr
	._var	's0d0_addr','S',741,_s0d0_addr
	._var	's1d0_addr','S',741,_s1d0_addr
	._var	's20_addr','S',741,_s20_addr
	._var	's2d0_addr','S',741,_s2d0_addr
	._var	's3d0_addr','S',741,_s3d0_addr
	._var	's4d0_addr','S',741,_s4d0_addr
	._var	's10_addr','S',741,_s10_addr
	._var	's11_addr','S',741,_s11_addr
	._var	's0d1_addr','S',741,_s0d1_addr
	._var	's0d2_addr','S',741,_s0d2_addr
	._var	'tbsr_addr','S',741,_tbsr_addr
	._var	'ta11_addr','S',786,_ta11_addr
	._var	'ta21_addr','S',786,_ta21_addr
	._var	'ta41_addr','S',786,_ta41_addr
	._var	'invc0_addr','S',741,_invc0_addr
	._var	'invc1_addr','S',741,_invc1_addr
	._var	'idb0_addr','S',741,_idb0_addr
	._var	'idb1_addr','S',741,_idb1_addr
	._var	'dtt_addr','S',741,_dtt_addr
	._var	'ictb2_addr','S',741,_ictb2_addr
	._var	'pdrf_addr','S',741,_pdrf_addr
	._var	'tb3_addr','S',786,_tb3_addr
	._var	'tb4_addr','S',786,_tb4_addr
	._var	'tb5_addr','S',786,_tb5_addr
	._var	'pfcr_addr','S',741,_pfcr_addr
	._var	'tb3mr_addr','S',741,_tb3mr_addr
	._var	'tb4mr_addr','S',741,_tb4mr_addr
	._var	'tb5mr_addr','S',741,_tb5mr_addr
	._var	'tabsr_addr','S',741,_tabsr_addr
	._var	'onsf_addr','S',741,_onsf_addr
	._var	'trgsr_addr','S',741,_trgsr_addr
	._var	'udf_addr','S',741,_udf_addr
	._var	'ta0_addr','S',786,_ta0_addr
	._var	'ta1_addr','S',786,_ta1_addr
	._var	'ta2_addr','S',786,_ta2_addr
	._var	'ta3_addr','S',786,_ta3_addr
	._var	'ta4_addr','S',786,_ta4_addr
	._var	'tb0_addr','S',786,_tb0_addr
	._var	'tb1_addr','S',786,_tb1_addr
	._var	'tb2_addr','S',786,_tb2_addr
	._var	'ta0mr_addr','S',741,_ta0mr_addr
	._var	'ta1mr_addr','S',741,_ta1mr_addr
	._var	'ta2mr_addr','S',741,_ta2mr_addr
	._var	'ta3mr_addr','S',741,_ta3mr_addr
	._var	'ta4mr_addr','S',741,_ta4mr_addr
	._var	'tb0mr_addr','S',741,_tb0mr_addr
	._var	'tb1mr_addr','S',741,_tb1mr_addr
	._var	'tb2mr_addr','S',741,_tb2mr_addr
	._var	'tb2sc_addr','S',741,_tb2sc_addr
	._var	'rtcsec_addr','S',741,_rtcsec_addr
	._var	'rtcmin_addr','S',741,_rtcmin_addr
	._var	'rtchr_addr','S',741,_rtchr_addr
	._var	'rtcwk_addr','S',741,_rtcwk_addr
	._var	'rtccr1_addr','S',741,_rtccr1_addr
	._var	'rtccr2_addr','S',741,_rtccr2_addr
	._var	'rtccsr_addr','S',741,_rtccsr_addr
	._var	'rtccsec_addr','S',741,_rtccsec_addr
	._var	'rtccmin_addr','S',741,_rtccmin_addr
	._var	'rtcchr_addr','S',741,_rtcchr_addr
	._var	'cecc1_addr','S',741,_cecc1_addr
	._var	'cecc2_addr','S',741,_cecc2_addr
	._var	'cecc3_addr','S',741,_cecc3_addr
	._var	'cecc4_addr','S',741,_cecc4_addr
	._var	'cecflg_addr','S',741,_cecflg_addr
	._var	'cisel_addr','S',741,_cisel_addr
	._var	'cctb1_addr','S',741,_cctb1_addr
	._var	'cctb2_addr','S',741,_cctb2_addr
	._var	'ccrb1_addr','S',741,_ccrb1_addr
	._var	'ccrb2_addr','S',741,_ccrb2_addr
	._var	'cradri1_addr','S',741,_cradri1_addr
	._var	'cradri2_addr','S',741,_cradri2_addr
	._var	'pur0_addr','S',741,_pur0_addr
	._var	'pur1_addr','S',741,_pur1_addr
	._var	'pur2_addr','S',741,_pur2_addr
	._var	'pcr_addr','S',741,_pcr_addr
	._var	'nmidf_addr','S',741,_nmidf_addr
	._var	'pwmcon0_addr','S',741,_pwmcon0_addr
	._var	'pwmpre0_addr','S',741,_pwmpre0_addr
	._var	'pwmreg0_addr','S',741,_pwmreg0_addr
	._var	'pwmpre1_addr','S',741,_pwmpre1_addr
	._var	'pwmreg1_addr','S',741,_pwmreg1_addr
	._var	'pwmcon1_addr','S',741,_pwmcon1_addr
	._var	'cspr_addr','S',741,_cspr_addr
	._var	'wdtr_addr','S',741,_wdtr_addr
	._var	'wdts_addr','S',741,_wdts_addr
	._var	'wdc_addr','S',741,_wdc_addr
	._var	'dm2sl_addr','S',741,_dm2sl_addr
	._var	'dm3sl_addr','S',741,_dm3sl_addr
	._var	'dm0sl_addr','S',741,_dm0sl_addr
	._var	'dm1sl_addr','S',741,_dm1sl_addr
	._var	'ainrst_addr','S',741,_ainrst_addr
	._var	'crcsar_addr','S',786,_crcsar_addr
	._var	'crcmr_addr','S',741,_crcmr_addr
	._var	'crcd_addr','S',786,_crcd_addr
	._var	'crcin_addr','S',741,_crcin_addr
	._var	'ad0_addr','S',786,_ad0_addr
	._var	'ad1_addr','S',786,_ad1_addr
	._var	'ad2_addr','S',786,_ad2_addr
	._var	'ad3_addr','S',786,_ad3_addr
	._var	'ad4_addr','S',786,_ad4_addr
	._var	'ad5_addr','S',786,_ad5_addr
	._var	'ad6_addr','S',786,_ad6_addr
	._var	'ad7_addr','S',786,_ad7_addr
	._var	'adcon2_addr','S',741,_adcon2_addr
	._var	'adcon0_addr','S',741,_adcon0_addr
	._var	'adcon1_addr','S',741,_adcon1_addr
	._var	'da0_addr','S',741,_da0_addr
	._var	'da1_addr','S',741,_da1_addr
	._var	'dacon_addr','S',741,_dacon_addr
	._var	'p0_addr','S',741,_p0_addr
	._var	'p1_addr','S',741,_p1_addr
	._var	'pd0_addr','S',741,_pd0_addr
	._var	'pd1_addr','S',741,_pd1_addr
	._var	'p2_addr','S',741,_p2_addr
	._var	'p3_addr','S',741,_p3_addr
	._var	'pd2_addr','S',741,_pd2_addr
	._var	'pd3_addr','S',741,_pd3_addr
	._var	'p4_addr','S',741,_p4_addr
	._var	'p5_addr','S',741,_p5_addr
	._var	'pd4_addr','S',741,_pd4_addr
	._var	'pd5_addr','S',741,_pd5_addr
	._var	'p6_addr','S',741,_p6_addr
	._var	'p7_addr','S',741,_p7_addr
	._var	'pd6_addr','S',741,_pd6_addr
	._var	'pd7_addr','S',741,_pd7_addr
	._var	'p8_addr','S',741,_p8_addr
	._var	'p9_addr','S',741,_p9_addr
	._var	'pd8_addr','S',741,_pd8_addr
	._var	'pd9_addr','S',741,_pd9_addr
	._var	'p10_addr','S',741,_p10_addr
	._var	'pd10_addr','S',741,_pd10_addr
	._var	'pmc0hdpmin_addr','S',786,_pmc0hdpmin_addr
	._var	'pmc0hdpmax_addr','S',786,_pmc0hdpmax_addr
	._var	'pmc0d0pmin_addr','S',741,_pmc0d0pmin_addr
	._var	'pmc0d0pmax_addr','S',741,_pmc0d0pmax_addr
	._var	'pmc0d1pmin_addr','S',741,_pmc0d1pmin_addr
	._var	'pmc0d1pmax_addr','S',741,_pmc0d1pmax_addr
	._var	'pmc0tim_addr','S',786,_pmc0tim_addr
	._var	'pmc0bc_addr','S',786,_pmc0bc_addr
	._var	'pmc0dat0_addr','S',741,_pmc0dat0_addr
	._var	'pmc0dat1_addr','S',741,_pmc0dat1_addr
	._var	'pmc0dat2_addr','S',741,_pmc0dat2_addr
	._var	'pmc0dat3_addr','S',741,_pmc0dat3_addr
	._var	'pmc0dat4_addr','S',741,_pmc0dat4_addr
	._var	'pmc0dat5_addr','S',741,_pmc0dat5_addr
	._var	'pmc0rbit_addr','S',741,_pmc0rbit_addr
	._var	'pmc1hdpmin_addr','S',786,_pmc1hdpmin_addr
	._var	'pmc1hdpmax_addr','S',786,_pmc1hdpmax_addr
	._var	'pmc1d0pmin_addr','S',741,_pmc1d0pmin_addr
	._var	'pmc1d0pmax_addr','S',741,_pmc1d0pmax_addr
	._var	'pmc1d1pmin_addr','S',741,_pmc1d1pmin_addr
	._var	'pmc1d1pmax_addr','S',741,_pmc1d1pmax_addr
	._var	'pmc1tim_addr','S',786,_pmc1tim_addr
	._var	'pmc1bc_addr','S',786,_pmc1bc_addr
	._type	805,'O',3
	._type	806,'x',3,4
	._type	806,'m','eeprom_addr',0,18
	._type	806,'m','event_filename',0,18
	._type	806,'m','event_adjusteflag',0,3
	._type	806,'m','tempdatep',0,805
	._type	807,'P',806
	._type	808,'T','TSave_General_Event',807
	._type	809,'O',3
	._type	810,'x',3,5
	._type	810,'m','Card_Addr',0,18
	._type	810,'m','DataPointer',0,809
	._type	810,'m','Data_Length',0,18
	._type	810,'m','DeviceName',0,3
	._type	810,'m','OperationType',0,3
	._type	811,'P',810
	._type	812,'T','TSpec_Event',811
	._type	813,'x',3,4
	._type	813,'m','eeprom_addr',0,18
	._type	813,'m','event_filename',0,18
	._type	813,'m','event_adjusteflag',0,3
	._type	813,'m','storekind',0,3
	._type	814,'P',813
	._type	815,'T','TGeneral_Event',814
	._var	'Clear_Demand_Mode','E',3
	._var	'EventEnergyValid_Flag','E',3
	._type	816,'Z',3,7
	._var	'Event_AmpHour','E',816
	._var	'EventCriticalVoltage_Flag','E',3
	._type	817,'Z',400,3
	._var	'TempEventData','E',817
	._type	818,'Z',2,7
	._var	'lostvoltenergyall','E',818
	._type	819,'Z',6,7
	._var	'lostvoltenergy','E',819
	._type	820,'v'
	._type	821,'v'
	._type	822,'x',820,1
	._type	822,'m','',0,821
	._var	'EventTimeAdd','F',822
	._type	823,'v'
	._type	824,'v'
	._type	825,'x',823,1
	._type	825,'m','',0,824
	._var	'New2007_Event','F',825
	._type	826,'v'
	._type	827,'v'
	._type	828,'x',826,1
	._type	828,'m','',0,827
	._var	'EventRecordAdjustEnergy','F',828
	._type	829,'v'
	._type	830,'v'
	._type	831,'x',829,1
	._type	831,'m','',0,830
	._var	'EventData_PowerDown_Save','F',831
	._type	832,'v'
	._type	833,'x',3,1
	._type	833,'m','',0,832
	._var	'EventData_PowerOn_Check','F',833
	._type	834,'v'
	._type	835,'x',3,1
	._type	835,'m','',0,834
	._var	'EventRecord_Poweron_Check','F',835
	._type	836,'v'
	._type	837,'v'
	._type	838,'x',836,1
	._type	838,'m','',0,837
	._var	'PowerDownEvent_OnCheck','F',838
	._type	839,'x',18,2
	._type	839,'m','',0,7
	._type	839,'m','',0,7
	._var	'ProgrammeEvent','F',839
	._type	840,'x',18,1
	._type	840,'m','',0,7
	._var	'ClearMeterRecord','F',840
	._type	841,'v'
	._type	842,'v'
	._type	843,'x',841,1
	._type	843,'m','',0,842
	._var	'VoltStatSetDefault','F',843
	._type	844,'v'
	._type	845,'v'
	._type	846,'x',844,1
	._type	846,'m','',0,845
	._var	'VoltStatInit','F',846
	._type	847,'v'
	._type	848,'v'
	._type	849,'x',847,1
	._type	849,'m','',0,848
	._var	'VoltStatisticCheck','F',849
	._type	850,'v'
	._type	851,'v'
	._type	852,'x',850,1
	._type	852,'m','',0,851
	._var	'OverDemandEvent','F',852
	._type	853,'x',18,1
	._type	853,'m','',0,7
	._var	'AdjustTimeRecord','F',853
	._type	854,'x',18,1
	._type	854,'m','',0,7
	._var	'ClearDemandRecord','F',854
	._type	855,'x',18,2
	._type	855,'m','',0,7
	._type	855,'m','',0,3
	._var	'ProgWeekRecord','F',855
	._type	856,'x',18,2
	._type	856,'m','',0,7
	._type	856,'m','',0,3
	._var	'ProgAEModeRecord','F',856
	._type	857,'x',18,2
	._type	857,'m','',0,7
	._type	857,'m','',0,3
	._var	'ProgNEMode1Record','F',857
	._type	858,'x',18,2
	._type	858,'m','',0,7
	._type	858,'m','',0,3
	._var	'ProgNEMode2Record','F',858
	._type	859,'O',3
	._type	860,'x',18,2
	._type	860,'m','',0,7
	._type	860,'m','',0,859
	._var	'ProgBillDayRecord','F',860
	._type	861,'x',18,1
	._type	861,'m','',0,7
	._var	'ProgYearSlotRecord','F',861
	._type	862,'x',18,1
	._type	862,'m','',0,7
	._var	'ProgDailySlotRecord','F',862
	._type	863,'x',3,2
	._type	863,'m','',0,7
	._type	863,'m','',0,7
	._var	'ClearNewEventRecord','F',863
	._type	864,'v'
	._type	865,'x',16,1
	._type	865,'m','',0,864
	._var	'PrepVoltStatReadData','F',865
	._type	866,'v'
	._type	867,'v'
	._type	868,'x',866,1
	._type	868,'m','',0,867
	._var	'ResetCpuEvent_OnCheck','F',868
	._type	869,'v'
	._type	870,'v'
	._type	871,'x',869,1
	._type	871,'m','',0,870
	._var	'RunClockErrorRecord','F',871
	._type	872,'v'
	._type	873,'v'
	._type	874,'x',872,1
	._type	874,'m','',0,873
	._var	'PowerUpClockErrorRecord','F',874
	._type	875,'v'
	._type	876,'v'
	._type	877,'x',875,1
	._type	877,'m','',0,876
	._var	'EepromErrorRecord','F',877
	._type	878,'v'
	._type	879,'v'
	._type	880,'x',878,1
	._type	880,'m','',0,879
	._var	'EnergyPassZeroRecord','F',880
	._type	881,'v'
	._type	882,'v'
	._type	883,'x',881,1
	._type	883,'m','',0,882
	._var	'SetPrimaryRecord','F',883
	._type	884,'v'
	._type	885,'v'
	._type	886,'x',884,1
	._type	886,'m','',0,885
	._var	'EepromEventSetDefault','F',886
	._type	887,'v'
	._type	888,'v'
	._type	889,'x',887,1
	._type	889,'m','',0,888
	._var	'EMeterPowerdownRecord','F',889
	._type	890,'x',18,2
	._type	890,'m','',0,7
	._type	890,'m','',0,7
	._var	'ClearEventRecord','F',890
	._type	891,'x',18,3
	._type	891,'m','progman',0,7
	._type	891,'m','progoldvaluep',0,3
	._type	891,'m','sort',0,3
	._var	'ProgAEMode_NEMode1_NEMode2_Record','F',891
	._type	892,'v'
	._type	893,'v'
	._type	894,'x',892,1
	._type	894,'m','',0,893
	._var	'OpenBoxCoverEvent_Check','F',894
	._type	895,'v'
	._type	896,'v'
	._type	897,'x',895,1
	._type	897,'m','',0,896
	._var	'EventFlagPowerOnInit','F',897
	._type	898,'v'
	._type	899,'v'
	._type	900,'x',898,1
	._type	900,'m','',0,899
	._var	'ProgrammeEventEnd_Check_Payment','F',900
	._type	901,'v'
	._type	902,'v'
	._type	903,'x',901,1
	._type	903,'m','',0,902
	._var	'ProgrammeEventEnd_Check','F',903
	._type	904,'v'
	._type	905,'v'
	._type	906,'x',904,1
	._type	906,'m','',0,905
	._var	'VoltStatisticFunc','F',906
	._type	907,'v'
	._type	908,'v'
	._type	909,'x',907,1
	._type	909,'m','',0,908
	._var	'AdjustMeterRecord','F',909
	._type	910,'x',3,1
	._type	910,'m','',0,7
	._var	'PrepNewFirstEventData','F',910
	._type	911,'O',3
	._type	912,'O',7
	._type	913,'x',3,4
	._type	913,'m','Pointer_Addr',0,18
	._type	913,'m','Times_Addr',0,18
	._type	913,'m','Event_Pointer',0,911
	._type	913,'m','Event_times',0,912
	._var	'Save_EventTimesANDPointer_4byte','F',913
	._type	914,'O',3
	._type	915,'O',7
	._type	916,'x',7,5
	._type	916,'m','eventaddr',0,18
	._type	916,'m','eventaddrkind',0,3
	._type	916,'m','eventendtimepointer',0,914
	._type	916,'m','eventlasttimeaddr',0,18
	._type	916,'m','eventlasttimepointer',0,915
	._var	'Prepare_For_EventLastTime','F',916
	._type	917,'v'
	._type	918,'x',917,1
	._type	918,'m','eventcode',0,7
	._var	'Refresh_EventData','F',918
	._type	919,'x',3,1
	._type	919,'m','eventcode',0,7
	._var	'Refresh_AddTime','F',919
	._type	920,'v'
	._type	921,'v'
	._type	922,'x',920,1
	._type	922,'m','',0,921
	._var	'ClearEventDate_BatteryPowerOn','F',922
	._type	923,'x',16,1
	._type	923,'m','',0,7
	._var	'PrepLostVoltEnergyData','F',923
	._type	924,'v'
	._type	925,'v'
	._type	926,'x',924,1
	._type	926,'m','',0,925
	._var	'PowerAbnormalEventCheck','F',926
	._type	927,'v'
	._type	928,'v'
	._type	929,'x',927,1
	._type	929,'m','',0,928
	._var	'ClockBatteryDisplayBattery_Event','F',929
	._type	930,'v'
	._type	931,'x',930,1
	._type	931,'m','',0,3
	._var	'PdOpenCoverCheckInit','F',931
	._type	932,'v'
	._type	933,'v'
	._type	934,'x',932,1
	._type	934,'m','',0,933
	._var	'PdOpenCoverCheck','F',934
	._type	935,'v'
	._type	936,'v'
	._type	937,'x',935,1
	._type	937,'m','',0,936
	._var	'PdOpenCoverCheckPowerUpDeal','F',937
	._type	938,'v'
	._type	939,'v'
	._type	940,'x',938,1
	._type	940,'m','',0,939
	._var	'ClearEventAll','F',940
	._type	941,'v'
	._type	942,'x',941,1
	._type	942,'m','eventID',0,7
	._var	'ClearEventCommDeal','F',942
	._type	943,'v'
	._type	944,'v'
	._type	945,'x',943,1
	._type	945,'m','',0,944
	._var	'ClearEventDataPowerOn','F',945
	._type	946,'v'
	._type	947,'O',3
	._type	948,'x',946,2
	._type	948,'m','pEventPoint',0,947
	._type	948,'m','begin_file',0,18
	._var	'ClearEvent_EventBegin','F',948
	._type	949,'Z',2,268
	._type	950,'Z',3,949
	._var	'VoltCheck_N','E',950
	._type	952,'Z',4,7
	._type	953,'Z',2,7
	._type	954,'Z',6,3
	._type	955,'Z',2,954
	._type	956,'Z',2,7
	._type	957,'Z',2,18
	._type	951,'S','VoltStatistic_Data',48
	._type	951,'m','checktime',952,0
	._type	951,'m','checkvolt',953,16
	._type	951,'m','checkvolttime',955,24
	._type	951,'m','voltratebcd',956,36
	._type	951,'m','checkvoltbcd',957,44
	._type	958,'Z',4,951
	._var	'VoltStat','E',958
	._type	959,'Z',74,7
	._var	'Clearevent_ID','E',959
	._type	960,'S','PDOPENCOVER_STRUCTURE',0
	._type	961,'Z',2,960
	._var	'pdopencovercheckdata','E',961
	._type	962,'U','EVENTSTATUS',0
	._var	'eventstatusinfo','E',962
	._type	963,'O',3
	._type	964,'x',3,2
	._type	964,'m','Times_Addr',0,18
	._type	964,'m','EventReport_times',0,963
	._var	'Save_EventReportTimes','F',964
	._type	965,'Z',4,7
	._var	'Freq','E',965
	._type	966,'Z',3,7
	._var	'Volt','E',966
	._type	967,'Z',3,7
	._var	'Voltc','E',967
	._type	968,'Z',3,7
	._var	'Curr','E',968
	._type	969,'Z',4,7
	._var	'Factor','E',969
	._type	970,'Z',4,7
	._var	'Active_power','E',970
	._type	971,'Z',4,7
	._var	'Reactive_power','E',971
	._var	'Active_energy_per_sec','E',7
	._var	'Reactive_energy_per_sec','E',7
	._type	972,'Z',4,7
	._var	'Visual_power','E',972
	._type	973,'Z',4,3
	._var	'Reactive_phase','E',973
	._type	974,'Z',4,7
	._var	'Phase_Angle','E',974
	._var	'N_Current','E',7
	._type	978,'g','Eeprom_Err1',0,1,3
	._type	979,'g','Eeprom_Err2',0,1,3
	._type	980,'g','Eeprom_Err3',0,1,3
	._type	981,'g','Eeprom_Err4',0,1,3
	._type	982,'g','Rtc_Err1',0,1,3
	._type	983,'g','Rtc_Err2',0,1,3
	._type	984,'g','Battery1_Err',0,1,3
	._type	985,'g','Battery2_Err',0,1,3
	._type	986,'g','Battery3_Err',0,1,3
	._type	987,'g','Energymodule_Err',0,1,3
	._type	988,'g','Comm_Module_Err',0,1,3
	._type	989,'g','Boad_Module_Err',0,1,3
	._type	990,'g','Ic_Card_Err',0,1,3
	._type	991,'g','Eeprom_Data_Err',0,1,3
	._type	992,'g','Timer_Data_Err',0,1,3
	._type	993,'g','Parameter_Data_Err',0,1,3
	._type	994,'g','Ic_Card_Data_Err',0,1,3
	._type	995,'g','Boad_Data_Err',0,1,3
	._type	977,'S','',3
	._type	977,'m','Eeprom_Err1',978,0
	._type	977,'m','Eeprom_Err2',979,1
	._type	977,'m','Eeprom_Err3',980,2
	._type	977,'m','Eeprom_Err4',981,3
	._type	977,'m','Rtc_Err1',982,4
	._type	977,'m','Rtc_Err2',983,5
	._type	977,'m','Battery1_Err',984,6
	._type	977,'m','Battery2_Err',985,7
	._type	977,'m','Battery3_Err',986,8
	._type	977,'m','Energymodule_Err',987,9
	._type	977,'m','Comm_Module_Err',988,10
	._type	977,'m','Boad_Module_Err',989,11
	._type	977,'m','Ic_Card_Err',990,12
	._type	977,'m','Eeprom_Data_Err',991,13
	._type	977,'m','Timer_Data_Err',992,14
	._type	977,'m','Parameter_Data_Err',993,15
	._type	977,'m','Ic_Card_Data_Err',994,16
	._type	977,'m','Boad_Data_Err',995,17
	._type	976,'U','METERFLAG',3
	._type	976,'m','bit',977,0
	._type	976,'m','intd',18,0
	._type	998,'g','Bill_Mode',0,1,3
	._type	999,'g','Demand_Mode',0,1,3
	._type	1000,'g','Battery_Status',0,1,3
	._type	1001,'g','',0,1,3
	._type	1002,'g','ActivePower_Direct',0,1,3
	._type	1003,'g','ReActivePower_Direct',0,1,3
	._type	1004,'g','',0,1,3
	._type	1005,'g','',0,1,3
	._type	997,'S','',1
	._type	997,'m','Bill_Mode',998,0
	._type	997,'m','Demand_Mode',999,1
	._type	997,'m','Battery_Status',1000,2
	._type	997,'m','',1001,3
	._type	997,'m','ActivePower_Direct',1002,4
	._type	997,'m','ReActivePower_Direct',1003,5
	._type	997,'m','',1004,6
	._type	997,'m','',1005,7
	._type	996,'U','METERSTATUS1',1
	._type	996,'m','bit',997,0
	._type	996,'m','byte',3,0
	._type	1008,'g','ActiveDirection_A',0,1,3
	._type	1009,'g','ActiveDirection_B',0,1,3
	._type	1010,'g','ActiveDirection_C',0,1,3
	._type	1011,'g','ActiveDirection_T',0,1,3
	._type	1012,'g','ReactiveDirection_A',0,1,3
	._type	1013,'g','ReactiveDirection_B',0,1,3
	._type	1014,'g','ReactiveDirection_C',0,1,3
	._type	1015,'g','ReactiveDirection_T',0,1,3
	._type	1007,'S','',1
	._type	1007,'m','ActiveDirection_A',1008,0
	._type	1007,'m','ActiveDirection_B',1009,1
	._type	1007,'m','ActiveDirection_C',1010,2
	._type	1007,'m','ActiveDirection_T',1011,3
	._type	1007,'m','ReactiveDirection_A',1012,4
	._type	1007,'m','ReactiveDirection_B',1013,5
	._type	1007,'m','ReactiveDirection_C',1014,6
	._type	1007,'m','ReactiveDirection_T',1015,7
	._type	1006,'U','METERSTATUS2',1
	._type	1006,'m','bit',1007,0
	._type	1006,'m','byte',3,0
	._type	1018,'g','CurrentPhaseReverse',0,1,3
	._type	1019,'g','VoltagePhaseRevers',0,1,3
	._type	1020,'g','',0,1,3
	._type	1021,'g','',0,1,3
	._type	1022,'g','LossCurrent_A',0,1,3
	._type	1023,'g','LossCurrent_B',0,1,3
	._type	1024,'g','LossCurrent_C',0,1,3
	._type	1025,'g','',0,1,3
	._type	1017,'S','',1
	._type	1017,'m','CurrentPhaseReverse',1018,0
	._type	1017,'m','VoltagePhaseRevers',1019,1
	._type	1017,'m','',1020,2
	._type	1017,'m','',1021,3
	._type	1017,'m','LossCurrent_A',1022,4
	._type	1017,'m','LossCurrent_B',1023,5
	._type	1017,'m','LossCurrent_C',1024,6
	._type	1017,'m','',1025,7
	._type	1016,'U','METERSTATUS3',1
	._type	1016,'m','bit',1017,0
	._type	1016,'m','byte',3,0
	._type	1028,'g','OverPower_Alarm',0,1,3
	._type	1029,'g','OverPower_SwitchOff',0,1,3
	._type	1030,'g','LowClockBattery',0,1,3
	._type	1031,'g','',0,1,3
	._type	1032,'g','OweFee_Alarm',0,1,3
	._type	1033,'g','OweFee_SwitchOff',0,1,3
	._type	1034,'g','LowBattery',0,1,3
	._type	1035,'g','',0,1,3
	._type	1027,'S','',1
	._type	1027,'m','OverPower_Alarm',1028,0
	._type	1027,'m','OverPower_SwitchOff',1029,1
	._type	1027,'m','LowClockBattery',1030,2
	._type	1027,'m','',1031,3
	._type	1027,'m','OweFee_Alarm',1032,4
	._type	1027,'m','OweFee_SwitchOff',1033,5
	._type	1027,'m','LowBattery',1034,6
	._type	1027,'m','',1035,7
	._type	1026,'U','METERSTATUS4',1
	._type	1026,'m','bit',1027,0
	._type	1026,'m','byte',3,0
	._type	1038,'g','BreakPhase_A',0,1,3
	._type	1039,'g','BreakPhase_B',0,1,3
	._type	1040,'g','BreakPhase_C',0,1,3
	._type	1041,'g','',0,1,3
	._type	1042,'g','OverVoltage_A',0,1,3
	._type	1043,'g','OverVoltage_B',0,1,3
	._type	1044,'g','OverVoltage_C',0,1,3
	._type	1045,'g','',0,1,3
	._type	1037,'S','',1
	._type	1037,'m','BreakPhase_A',1038,0
	._type	1037,'m','BreakPhase_B',1039,1
	._type	1037,'m','BreakPhase_C',1040,2
	._type	1037,'m','',1041,3
	._type	1037,'m','OverVoltage_A',1042,4
	._type	1037,'m','OverVoltage_B',1043,5
	._type	1037,'m','OverVoltage_C',1044,6
	._type	1037,'m','',1045,7
	._type	1036,'U','POWERNETSTATUS',1
	._type	1036,'m','bit',1037,0
	._type	1036,'m','byte',3,0
	._type	1048,'g','Invalid_Data',0,1,3
	._type	1049,'g','Invalid_OBIS',0,1,3
	._type	1050,'g','Invalid_Password',0,1,3
	._type	1051,'g','Invalid_COMMRATE',0,1,3
	._type	1052,'g','OutYearZone',0,1,3
	._type	1053,'g','OutDailySlot',0,1,3
	._type	1054,'g','OutTriff',0,1,3
	._type	1055,'g','',0,1,3
	._type	1047,'S','',1
	._type	1047,'m','Invalid_Data',1048,0
	._type	1047,'m','Invalid_OBIS',1049,1
	._type	1047,'m','Invalid_Password',1050,2
	._type	1047,'m','Invalid_COMMRATE',1051,3
	._type	1047,'m','OutYearZone',1052,4
	._type	1047,'m','OutDailySlot',1053,5
	._type	1047,'m','OutTriff',1054,6
	._type	1047,'m','',1055,7
	._type	1046,'U','ERRORINFORMATION',1
	._type	1046,'m','bit',1047,0
	._type	1046,'m','byte',3,0
	._type	1058,'g','Su',0,1,3
	._type	1059,'g','Mo',0,1,3
	._type	1060,'g','Tu',0,1,3
	._type	1061,'g','We',0,1,3
	._type	1062,'g','Th',0,1,3
	._type	1063,'g','Fr',0,1,3
	._type	1064,'g','Sa',0,1,3
	._type	1065,'g','',0,1,3
	._type	1057,'S','',1
	._type	1057,'m','Su',1058,0
	._type	1057,'m','Mo',1059,1
	._type	1057,'m','Tu',1060,2
	._type	1057,'m','We',1061,3
	._type	1057,'m','Th',1062,4
	._type	1057,'m','Fr',1063,5
	._type	1057,'m','Sa',1064,6
	._type	1057,'m','',1065,7
	._type	1056,'U','WEEKSTATUS',1
	._type	1056,'m','bit',1057,0
	._type	1056,'m','byte',3,0
	._type	1068,'g','Cover_Open',0,1,3
	._type	1069,'g','IC_Insert',0,1,3
	._type	1070,'g','Cal_Meter',0,1,3
	._type	1071,'g','Set_Parameter',0,1,3
	._type	1072,'g','Selftest_Pass',0,1,3
	._type	1073,'g','Powerup',0,1,3
	._type	1074,'g','',0,1,3
	._type	1075,'g','',0,1,3
	._type	1067,'S','',1
	._type	1067,'m','Cover_Open',1068,0
	._type	1067,'m','IC_Insert',1069,1
	._type	1067,'m','Cal_Meter',1070,2
	._type	1067,'m','Set_Parameter',1071,3
	._type	1067,'m','Selftest_Pass',1072,4
	._type	1067,'m','Powerup',1073,5
	._type	1067,'m','',1074,6
	._type	1067,'m','',1075,7
	._type	1066,'U','METERSTATUS5',1
	._type	1066,'m','bit',1067,0
	._type	1066,'m','byte',3,0
	._type	1078,'g','',0,1,3
	._type	1079,'g','B600',0,1,3
	._type	1080,'g','B1200',0,1,3
	._type	1081,'g','B2400',0,1,3
	._type	1082,'g','B4800',0,1,3
	._type	1083,'g','B9600',0,1,3
	._type	1084,'g','B19200',0,1,3
	._type	1085,'g','',0,1,3
	._type	1077,'S','',1
	._type	1077,'m','',1078,0
	._type	1077,'m','B600',1079,1
	._type	1077,'m','B1200',1080,2
	._type	1077,'m','B2400',1081,3
	._type	1077,'m','B4800',1082,4
	._type	1077,'m','B9600',1083,5
	._type	1077,'m','B19200',1084,6
	._type	1077,'m','',1085,7
	._type	1076,'U','COMMRATE',1
	._type	1076,'m','bit',1077,0
	._type	1076,'m','byte',3,0
	._type	1086,'Z',3,1076
	._type	1089,'g','Eeprom_Err',0,1,3
	._type	1090,'g','Eeprom_Data_Err',0,1,3
	._type	1091,'g','BatteryClK_Err',0,1,3
	._type	1092,'g','BatteryDIS_Err',0,1,3
	._type	1093,'g','VoltageReserve',0,1,3
	._type	1094,'g','LossVoltage',0,1,3
	._type	1095,'g','OverVoltage',0,1,3
	._type	1096,'g','LossCurrent',0,1,3
	._type	1097,'g','',0,1,3
	._type	1098,'g','BreakPhase',0,1,3
	._type	1099,'g','',0,1,3
	._type	1100,'g','OverPower',0,1,3
	._type	1101,'g','',0,1,3
	._type	1102,'g','',0,1,3
	._type	1103,'g','',0,1,3
	._type	1104,'g','Rtc_Err',0,1,3
	._type	1088,'S','',2
	._type	1088,'m','Eeprom_Err',1089,0
	._type	1088,'m','Eeprom_Data_Err',1090,1
	._type	1088,'m','BatteryClK_Err',1091,2
	._type	1088,'m','BatteryDIS_Err',1092,3
	._type	1088,'m','VoltageReserve',1093,4
	._type	1088,'m','LossVoltage',1094,5
	._type	1088,'m','OverVoltage',1095,6
	._type	1088,'m','LossCurrent',1096,7
	._type	1088,'m','',1097,8
	._type	1088,'m','BreakPhase',1098,9
	._type	1088,'m','',1099,10
	._type	1088,'m','OverPower',1100,11
	._type	1088,'m','',1101,12
	._type	1088,'m','',1102,13
	._type	1088,'m','',1103,14
	._type	1088,'m','Rtc_Err',1104,15
	._type	1087,'U','ERR_INFORM_FLG',2
	._type	1087,'m','bit',1088,0
	._type	1087,'m','intd',18,0
	._type	975,'S','METER_STATES',18
	._type	975,'m','Meter_Flag',976,0
	._type	975,'m','Meter_Status1',996,3
	._type	975,'m','Meter_Status2',1006,4
	._type	975,'m','Meter_Status3',1016,5
	._type	975,'m','Meter_Status4',1026,6
	._type	975,'m','PowerNet_Status',1036,7
	._type	975,'m','ErrOfInformation',1046,8
	._type	975,'m','Week_Status',1056,9
	._type	975,'m','Meter_Status5',1066,10
	._type	975,'m','Comm_Rate',1086,11
	._type	975,'m','BatteryState',268,14
	._type	975,'m','AlarmState',268,15
	._type	975,'m','Err_Infor',1087,16
	._var	'Meter_States','E',975
	._type	1108,'g','',0,1,3
	._type	1109,'g','Demand_Mode',0,1,3
	._type	1110,'g','Battery1_Status',0,1,3
	._type	1111,'g','Battery2_Status',0,1,3
	._type	1112,'g','ActivePower_Direct',0,1,3
	._type	1113,'g','ReActivePower_Direct',0,1,3
	._type	1114,'g','',0,1,3
	._type	1115,'g','',0,1,3
	._type	1116,'g','CtrCircleErr',0,1,3
	._type	1117,'g','EsamErr',0,1,3
	._type	1118,'g','B10',0,1,3
	._type	1119,'g','B11',0,1,3
	._type	1120,'g','ProgrammeErr',0,1,3
	._type	1121,'g','EepromErr',0,1,3
	._type	1122,'g','Overdraft',0,1,3
	._type	1123,'g','ClockErr',0,1,3
	._type	1107,'S','',2
	._type	1107,'m','',1108,0
	._type	1107,'m','Demand_Mode',1109,1
	._type	1107,'m','Battery1_Status',1110,2
	._type	1107,'m','Battery2_Status',1111,3
	._type	1107,'m','ActivePower_Direct',1112,4
	._type	1107,'m','ReActivePower_Direct',1113,5
	._type	1107,'m','',1114,6
	._type	1107,'m','',1115,7
	._type	1107,'m','CtrCircleErr',1116,8
	._type	1107,'m','EsamErr',1117,9
	._type	1107,'m','B10',1118,10
	._type	1107,'m','B11',1119,11
	._type	1107,'m','ProgrammeErr',1120,12
	._type	1107,'m','EepromErr',1121,13
	._type	1107,'m','Overdraft',1122,14
	._type	1107,'m','ClockErr',1123,15
	._type	1106,'U','NEW645METERSTATUS1',2
	._type	1106,'m','bit',1107,0
	._type	1106,'m','intd',18,0
	._type	1126,'g','ActiveDirection_A',0,1,3
	._type	1127,'g','ActiveDirection_B',0,1,3
	._type	1128,'g','ActiveDirection_C',0,1,3
	._type	1129,'g','',0,1,3
	._type	1130,'g','ReactiveDirection_A',0,1,3
	._type	1131,'g','ReactiveDirection_B',0,1,3
	._type	1132,'g','ReactiveDirection_C',0,1,3
	._type	1133,'g','',0,1,3
	._type	1134,'g','',0,1,3
	._type	1135,'g','',0,1,3
	._type	1136,'g','',0,1,3
	._type	1137,'g','',0,1,3
	._type	1138,'g','',0,1,3
	._type	1139,'g','',0,1,3
	._type	1140,'g','',0,1,3
	._type	1141,'g','',0,1,3
	._type	1125,'S','',2
	._type	1125,'m','ActiveDirection_A',1126,0
	._type	1125,'m','ActiveDirection_B',1127,1
	._type	1125,'m','ActiveDirection_C',1128,2
	._type	1125,'m','',1129,3
	._type	1125,'m','ReactiveDirection_A',1130,4
	._type	1125,'m','ReactiveDirection_B',1131,5
	._type	1125,'m','ReactiveDirection_C',1132,6
	._type	1125,'m','',1133,7
	._type	1125,'m','',1134,8
	._type	1125,'m','',1135,9
	._type	1125,'m','',1136,10
	._type	1125,'m','',1137,11
	._type	1125,'m','',1138,12
	._type	1125,'m','',1139,13
	._type	1125,'m','',1140,14
	._type	1125,'m','',1141,15
	._type	1124,'U','NEW645METERSTATUS2',2
	._type	1124,'m','bit',1125,0
	._type	1124,'m','intd',18,0
	._type	1144,'g','WhitchDialySlotIsNow',0,1,3
	._type	1145,'g','Power_Mode1',0,1,3
	._type	1146,'g','Power_Mode2',0,1,3
	._type	1147,'g','Program_Allow',0,1,3
	._type	1148,'g','Relay_Status',0,1,3
	._type	1149,'g','WhitchSlotIsNow',0,1,3
	._type	1150,'g','SwitchCommandStatus',0,1,3
	._type	1151,'g','SwitchAlarmStatus',0,1,3
	._type	1152,'g','MeterType_L',0,1,3
	._type	1153,'g','MeterType_H',0,1,3
	._type	1154,'g','WhitchTriffIsNow',0,1,3
	._type	1155,'g','WhitchStepIsNow',0,1,3
	._type	1156,'g','keep_power_status',0,1,3
	._type	1157,'g','Identity_Flg',0,1,3
	._type	1158,'g','local_open_account',0,1,3
	._type	1159,'g','far_open_account',0,1,3
	._type	1143,'S','',2
	._type	1143,'m','WhitchDialySlotIsNow',1144,0
	._type	1143,'m','Power_Mode1',1145,1
	._type	1143,'m','Power_Mode2',1146,2
	._type	1143,'m','Program_Allow',1147,3
	._type	1143,'m','Relay_Status',1148,4
	._type	1143,'m','WhitchSlotIsNow',1149,5
	._type	1143,'m','SwitchCommandStatus',1150,6
	._type	1143,'m','SwitchAlarmStatus',1151,7
	._type	1143,'m','MeterType_L',1152,8
	._type	1143,'m','MeterType_H',1153,9
	._type	1143,'m','WhitchTriffIsNow',1154,10
	._type	1143,'m','WhitchStepIsNow',1155,11
	._type	1143,'m','keep_power_status',1156,12
	._type	1143,'m','Identity_Flg',1157,13
	._type	1143,'m','local_open_account',1158,14
	._type	1143,'m','far_open_account',1159,15
	._type	1142,'U','NEW645METERSTATUS3',2
	._type	1142,'m','bit',1143,0
	._type	1142,'m','intd',18,0
	._type	1162,'g','LossVoltage',0,1,3
	._type	1163,'g','FailVoltage',0,1,3
	._type	1164,'g','OverVoltage',0,1,3
	._type	1165,'g','LossCurrent',0,1,3
	._type	1166,'g','OverCurrent',0,1,3
	._type	1167,'g','OverLoad',0,1,3
	._type	1168,'g','TideWay',0,1,3
	._type	1169,'g','BreakPhase',0,1,3
	._type	1170,'g','BreakCurrent',0,1,3
	._type	1171,'g','',0,1,3
	._type	1172,'g','',0,1,3
	._type	1173,'g','',0,1,3
	._type	1174,'g','',0,1,3
	._type	1175,'g','',0,1,3
	._type	1176,'g','',0,1,3
	._type	1177,'g','',0,1,3
	._type	1161,'S','',2
	._type	1161,'m','LossVoltage',1162,0
	._type	1161,'m','FailVoltage',1163,1
	._type	1161,'m','OverVoltage',1164,2
	._type	1161,'m','LossCurrent',1165,3
	._type	1161,'m','OverCurrent',1166,4
	._type	1161,'m','OverLoad',1167,5
	._type	1161,'m','TideWay',1168,6
	._type	1161,'m','BreakPhase',1169,7
	._type	1161,'m','BreakCurrent',1170,8
	._type	1161,'m','',1171,9
	._type	1161,'m','',1172,10
	._type	1161,'m','',1173,11
	._type	1161,'m','',1174,12
	._type	1161,'m','',1175,13
	._type	1161,'m','',1176,14
	._type	1161,'m','',1177,15
	._type	1160,'U','NEW645METERSTATUS4',2
	._type	1160,'m','bit',1161,0
	._type	1160,'m','intd',18,0
	._type	1180,'g','LossVoltage',0,1,3
	._type	1181,'g','FailVoltage',0,1,3
	._type	1182,'g','OverVoltage',0,1,3
	._type	1183,'g','LossCurrent',0,1,3
	._type	1184,'g','OverCurrent',0,1,3
	._type	1185,'g','OverLoad',0,1,3
	._type	1186,'g','TideWay',0,1,3
	._type	1187,'g','BreakPhase',0,1,3
	._type	1188,'g','BreakCurrent',0,1,3
	._type	1189,'g','',0,1,3
	._type	1190,'g','',0,1,3
	._type	1191,'g','',0,1,3
	._type	1192,'g','',0,1,3
	._type	1193,'g','',0,1,3
	._type	1194,'g','',0,1,3
	._type	1195,'g','',0,1,3
	._type	1179,'S','',2
	._type	1179,'m','LossVoltage',1180,0
	._type	1179,'m','FailVoltage',1181,1
	._type	1179,'m','OverVoltage',1182,2
	._type	1179,'m','LossCurrent',1183,3
	._type	1179,'m','OverCurrent',1184,4
	._type	1179,'m','OverLoad',1185,5
	._type	1179,'m','TideWay',1186,6
	._type	1179,'m','BreakPhase',1187,7
	._type	1179,'m','BreakCurrent',1188,8
	._type	1179,'m','',1189,9
	._type	1179,'m','',1190,10
	._type	1179,'m','',1191,11
	._type	1179,'m','',1192,12
	._type	1179,'m','',1193,13
	._type	1179,'m','',1194,14
	._type	1179,'m','',1195,15
	._type	1178,'U','NEW645METERSTATUS5',2
	._type	1178,'m','bit',1179,0
	._type	1178,'m','intd',18,0
	._type	1198,'g','LossVoltage',0,1,3
	._type	1199,'g','FailVoltage',0,1,3
	._type	1200,'g','OverVoltage',0,1,3
	._type	1201,'g','LossCurrent',0,1,3
	._type	1202,'g','OverCurrent',0,1,3
	._type	1203,'g','OverLoad',0,1,3
	._type	1204,'g','TideWay',0,1,3
	._type	1205,'g','BreakPhase',0,1,3
	._type	1206,'g','BreakCurrent',0,1,3
	._type	1207,'g','',0,1,3
	._type	1208,'g','',0,1,3
	._type	1209,'g','',0,1,3
	._type	1210,'g','',0,1,3
	._type	1211,'g','',0,1,3
	._type	1212,'g','',0,1,3
	._type	1213,'g','',0,1,3
	._type	1197,'S','',2
	._type	1197,'m','LossVoltage',1198,0
	._type	1197,'m','FailVoltage',1199,1
	._type	1197,'m','OverVoltage',1200,2
	._type	1197,'m','LossCurrent',1201,3
	._type	1197,'m','OverCurrent',1202,4
	._type	1197,'m','OverLoad',1203,5
	._type	1197,'m','TideWay',1204,6
	._type	1197,'m','BreakPhase',1205,7
	._type	1197,'m','BreakCurrent',1206,8
	._type	1197,'m','',1207,9
	._type	1197,'m','',1208,10
	._type	1197,'m','',1209,11
	._type	1197,'m','',1210,12
	._type	1197,'m','',1211,13
	._type	1197,'m','',1212,14
	._type	1197,'m','',1213,15
	._type	1196,'U','NEW645METERSTATUS6',2
	._type	1196,'m','bit',1197,0
	._type	1196,'m','intd',18,0
	._type	1216,'g','VoltagePhaseRevers',0,1,3
	._type	1217,'g','CurrentPhaseReverse',0,1,3
	._type	1218,'g','VoltageImbalance',0,1,3
	._type	1219,'g','CurrentImbalance',0,1,3
	._type	1220,'g','AuxiliaryPower',0,1,3
	._type	1221,'g','PowerDown',0,1,3
	._type	1222,'g','OverDemand',0,1,3
	._type	1223,'g','OverFactor',0,1,3
	._type	1224,'g','CurrentGraveImbalance',0,1,3
	._type	1225,'g','OpenCover',0,1,3
	._type	1226,'g','OpenBox',0,1,3
	._type	1227,'g','',0,1,3
	._type	1228,'g','',0,1,3
	._type	1229,'g','',0,1,3
	._type	1230,'g','',0,1,3
	._type	1231,'g','',0,1,3
	._type	1215,'S','',2
	._type	1215,'m','VoltagePhaseRevers',1216,0
	._type	1215,'m','CurrentPhaseReverse',1217,1
	._type	1215,'m','VoltageImbalance',1218,2
	._type	1215,'m','CurrentImbalance',1219,3
	._type	1215,'m','AuxiliaryPower',1220,4
	._type	1215,'m','PowerDown',1221,5
	._type	1215,'m','OverDemand',1222,6
	._type	1215,'m','OverFactor',1223,7
	._type	1215,'m','CurrentGraveImbalance',1224,8
	._type	1215,'m','OpenCover',1225,9
	._type	1215,'m','OpenBox',1226,10
	._type	1215,'m','',1227,11
	._type	1215,'m','',1228,12
	._type	1215,'m','',1229,13
	._type	1215,'m','',1230,14
	._type	1215,'m','',1231,15
	._type	1214,'U','NEW645METERSTATUS7',2
	._type	1214,'m','bit',1215,0
	._type	1214,'m','intd',18,0
	._type	1105,'S','NEW645METER_STATES',19
	._type	1105,'m','Meter_Status1',1106,0
	._type	1105,'m','Meter_Status2',1124,2
	._type	1105,'m','Meter_Status3',1142,4
	._type	1105,'m','Meter_Status4',1160,6
	._type	1105,'m','Meter_Status5',1178,8
	._type	1105,'m','Meter_Status6',1196,10
	._type	1105,'m','Meter_Status7',1214,12
	._type	1105,'m','OpenCoverStates',268,14
	._type	1105,'m','psw_status_word',7,15
	._var	'NEW645Meter_States','E',1105
	._type	1234,'Z',6,3
	._type	1235,'Z',3,1234
	._type	1236,'Z',4,268
	._type	1239,'g','ClockBatteryEvent',0,1,3
	._type	1240,'g','DisplayBatteryEvent',0,1,3
	._type	1241,'g','RunClockError',0,1,3
	._type	1242,'g','Eeprom_Err',0,1,3
	._type	1243,'g','OpenBoxEvent',0,1,3
	._type	1244,'g','OpenCoverEvent',0,1,3
	._type	1245,'g','OverFactor',0,1,3
	._type	1246,'g','VoltageReserve',0,1,3
	._type	1247,'g','CurrReverse',0,1,3
	._type	1248,'g','PowerReverse',0,1,3
	._type	1249,'g','OverPaADemand',0,1,3
	._type	1250,'g','OverNeADemand',0,1,3
	._type	1251,'g','LostVoltage',0,1,3
	._type	1252,'g','BreakPhase',0,1,3
	._type	1253,'g','OverVoltage',0,1,3
	._type	1254,'g','VoltageDown',0,1,3
	._type	1255,'g','VoltImBalance',0,1,3
	._type	1256,'g','CurrImBalance',0,1,3
	._type	1257,'g','CurrFarImBalance',0,1,3
	._type	1258,'g','LostCurrent',0,1,3
	._type	1259,'g','OverCurrent',0,1,3
	._type	1260,'g','FailCurrent',0,1,3
	._type	1261,'g','UpLoad',0,1,3
	._type	1262,'g','Programme',0,1,3
	._type	1263,'g','OverReDemand',0,1,3
	._type	1264,'g','ConstMagnet',0,1,3
	._type	1265,'g','EsamErr',0,1,3
	._type	1266,'g','CtrCircleErr',0,1,3
	._type	1267,'g','',0,1,3
	._type	1268,'g','',0,1,3
	._type	1269,'g','',0,1,3
	._type	1270,'g','',0,1,3
	._type	1238,'S','',4
	._type	1238,'m','ClockBatteryEvent',1239,0
	._type	1238,'m','DisplayBatteryEvent',1240,1
	._type	1238,'m','RunClockError',1241,2
	._type	1238,'m','Eeprom_Err',1242,3
	._type	1238,'m','OpenBoxEvent',1243,4
	._type	1238,'m','OpenCoverEvent',1244,5
	._type	1238,'m','OverFactor',1245,6
	._type	1238,'m','VoltageReserve',1246,7
	._type	1238,'m','CurrReverse',1247,8
	._type	1238,'m','PowerReverse',1248,9
	._type	1238,'m','OverPaADemand',1249,10
	._type	1238,'m','OverNeADemand',1250,11
	._type	1238,'m','LostVoltage',1251,12
	._type	1238,'m','BreakPhase',1252,13
	._type	1238,'m','OverVoltage',1253,14
	._type	1238,'m','VoltageDown',1254,15
	._type	1238,'m','VoltImBalance',1255,16
	._type	1238,'m','CurrImBalance',1256,17
	._type	1238,'m','CurrFarImBalance',1257,18
	._type	1238,'m','LostCurrent',1258,19
	._type	1238,'m','OverCurrent',1259,20
	._type	1238,'m','FailCurrent',1260,21
	._type	1238,'m','UpLoad',1261,22
	._type	1238,'m','Programme',1262,23
	._type	1238,'m','OverReDemand',1263,24
	._type	1238,'m','ConstMagnet',1264,25
	._type	1238,'m','EsamErr',1265,26
	._type	1238,'m','CtrCircleErr',1266,27
	._type	1238,'m','',1267,28
	._type	1238,'m','',1268,29
	._type	1238,'m','',1269,30
	._type	1238,'m','',1270,31
	._type	1237,'U','LCD_LED_Speaker_Terminal_ALARM_FLAG',4
	._type	1237,'m','bit',1238,0
	._type	1237,'m','Alarm_Flag',7,0
	._type	1271,'S','DAYHOUR_DEF',2
	._type	1271,'m','Day',3,0
	._type	1271,'m','Hour',3,1
	._type	1272,'Z',3,1271
	._type	1273,'Z',4,1076
	._type	1274,'S','SLOTPAREMETER',8
	._type	1274,'m','YearSlotNumble',3,0
	._type	1274,'m','DailySlotTableNumble',3,1
	._type	1274,'m','DailySlotNumble',3,2
	._type	1274,'m','TriffNumble',3,3
	._type	1274,'m','HollidayNumble',18,4
	._type	1274,'m','WeekEndTable',3,6
	._type	1274,'m','Week_Status',1056,7
	._type	1275,'Z',2,1274
	._type	1276,'S','SWITCH_ITEM',10
	._type	1276,'m','WhitchSlotIsNow',3,0
	._type	1276,'m','SwitchDate',311,1
	._type	1276,'m','FreezeData_addr',3,8
	._type	1276,'m','DropProtectFlag',3,9
	._type	1277,'Z',4,3
	._type	1278,'Z',5,1277
	._type	1279,'Z',3,3
	._type	1282,'g','Switch_err',0,1,3
	._type	1283,'g','ESAM_err',0,1,3
	._type	1284,'g','Eeprom_init_err',0,1,3
	._type	1285,'g','Clock_Battery_Volt_low',0,1,3
	._type	1286,'g','Code_err',0,1,3
	._type	1287,'g','Memorizer_err',0,1,3
	._type	1288,'g','',0,1,3
	._type	1289,'g','Clock_err',0,1,3
	._type	1290,'g','LowPower_Battery_Volt_low',0,1,3
	._type	1291,'g','Overdraft',0,1,3
	._type	1292,'g','Open_Meter_Cover',0,1,3
	._type	1293,'g','Open_Rail_Cover',0,1,3
	._type	1294,'g','ConstantMagnet_event',0,1,3
	._type	1295,'g','PowerAbnormal_event',0,1,3
	._type	1296,'g','Switch_off',0,1,3
	._type	1297,'g','Switch_on',0,1,3
	._type	1298,'g','LostVolt',0,1,3
	._type	1299,'g','LowVolt',0,1,3
	._type	1300,'g','OverVolt',0,1,3
	._type	1301,'g','LossCurr',0,1,3
	._type	1302,'g','OverCurr',0,1,3
	._type	1303,'g','UpLoad',0,1,3
	._type	1304,'g','PowerReserve',0,1,3
	._type	1305,'g','BreakPhase',0,1,3
	._type	1306,'g','BreakCurr',0,1,3
	._type	1307,'g','',0,1,3
	._type	1308,'g','',0,1,3
	._type	1309,'g','',0,1,3
	._type	1310,'g','',0,1,3
	._type	1311,'g','',0,1,3
	._type	1312,'g','',0,1,3
	._type	1313,'g','',0,1,3
	._type	1314,'g','VoltReverse',0,1,3
	._type	1315,'g','CurrReverse',0,1,3
	._type	1316,'g','VoltImbalance',0,1,3
	._type	1317,'g','CurrImbalance',0,1,3
	._type	1318,'g','AuxiliaryPower_event',0,1,3
	._type	1319,'g','PowerDown',0,1,3
	._type	1320,'g','OverDemand',0,1,3
	._type	1321,'g','Factor_Low',0,1,3
	._type	1322,'g','CurrCriticalImbalance',0,1,3
	._type	1323,'g','TotalPowerReverse',0,1,3
	._type	1324,'g','AllLostVoltage',0,1,3
	._type	1325,'g','',0,1,3
	._type	1326,'g','',0,1,3
	._type	1327,'g','',0,1,3
	._type	1328,'g','',0,1,3
	._type	1329,'g','',0,1,3
	._type	1330,'g','Program_event',0,1,3
	._type	1331,'g','Meter_clear',0,1,3
	._type	1332,'g','Demand_clear',0,1,3
	._type	1333,'g','Event_clear',0,1,3
	._type	1334,'g','AdjustTime_event',0,1,3
	._type	1335,'g','ProgDailySlot',0,1,3
	._type	1336,'g','ProgYearSlot',0,1,3
	._type	1337,'g','ProgWeek',0,1,3
	._type	1338,'g','ProgHoliday',0,1,3
	._type	1339,'g','ProgAEMode',0,1,3
	._type	1340,'g','ProgNEMode1',0,1,3
	._type	1341,'g','ProgNEMode2',0,1,3
	._type	1342,'g','ProgBillDay',0,1,3
	._type	1343,'g','ProgTriffPrice',0,1,3
	._type	1344,'g','ProgStepPrice',0,1,3
	._type	1345,'g','PSWUpdate',0,1,3
	._type	1281,'S','',8
	._type	1281,'m','Switch_err',1282,0
	._type	1281,'m','ESAM_err',1283,1
	._type	1281,'m','Eeprom_init_err',1284,2
	._type	1281,'m','Clock_Battery_Volt_low',1285,3
	._type	1281,'m','Code_err',1286,4
	._type	1281,'m','Memorizer_err',1287,5
	._type	1281,'m','',1288,6
	._type	1281,'m','Clock_err',1289,7
	._type	1281,'m','LowPower_Battery_Volt_low',1290,8
	._type	1281,'m','Overdraft',1291,9
	._type	1281,'m','Open_Meter_Cover',1292,10
	._type	1281,'m','Open_Rail_Cover',1293,11
	._type	1281,'m','ConstantMagnet_event',1294,12
	._type	1281,'m','PowerAbnormal_event',1295,13
	._type	1281,'m','Switch_off',1296,14
	._type	1281,'m','Switch_on',1297,15
	._type	1281,'m','LostVolt',1298,16
	._type	1281,'m','LowVolt',1299,17
	._type	1281,'m','OverVolt',1300,18
	._type	1281,'m','LossCurr',1301,19
	._type	1281,'m','OverCurr',1302,20
	._type	1281,'m','UpLoad',1303,21
	._type	1281,'m','PowerReserve',1304,22
	._type	1281,'m','BreakPhase',1305,23
	._type	1281,'m','BreakCurr',1306,24
	._type	1281,'m','',1307,25
	._type	1281,'m','',1308,26
	._type	1281,'m','',1309,27
	._type	1281,'m','',1310,28
	._type	1281,'m','',1311,29
	._type	1281,'m','',1312,30
	._type	1281,'m','',1313,31
	._type	1281,'m','VoltReverse',1314,32
	._type	1281,'m','CurrReverse',1315,33
	._type	1281,'m','VoltImbalance',1316,34
	._type	1281,'m','CurrImbalance',1317,35
	._type	1281,'m','AuxiliaryPower_event',1318,36
	._type	1281,'m','PowerDown',1319,37
	._type	1281,'m','OverDemand',1320,38
	._type	1281,'m','Factor_Low',1321,39
	._type	1281,'m','CurrCriticalImbalance',1322,40
	._type	1281,'m','TotalPowerReverse',1323,41
	._type	1281,'m','AllLostVoltage',1324,42
	._type	1281,'m','',1325,43
	._type	1281,'m','',1326,44
	._type	1281,'m','',1327,45
	._type	1281,'m','',1328,46
	._type	1281,'m','',1329,47
	._type	1281,'m','Program_event',1330,48
	._type	1281,'m','Meter_clear',1331,49
	._type	1281,'m','Demand_clear',1332,50
	._type	1281,'m','Event_clear',1333,51
	._type	1281,'m','AdjustTime_event',1334,52
	._type	1281,'m','ProgDailySlot',1335,53
	._type	1281,'m','ProgYearSlot',1336,54
	._type	1281,'m','ProgWeek',1337,55
	._type	1281,'m','ProgHoliday',1338,56
	._type	1281,'m','ProgAEMode',1339,57
	._type	1281,'m','ProgNEMode1',1340,58
	._type	1281,'m','ProgNEMode2',1341,59
	._type	1281,'m','ProgBillDay',1342,60
	._type	1281,'m','ProgTriffPrice',1343,61
	._type	1281,'m','ProgStepPrice',1344,62
	._type	1281,'m','PSWUpdate',1345,63
	._type	1346,'Z',8,3
	._type	1280,'U','EVENT_REPORT_MODE',8
	._type	1280,'m','bit',1281,0
	._type	1280,'m','byte',1346,0
	._type	1233,'S','PARAMETER1',143
	._type	1233,'m','ActivePulseConst',7,0
	._type	1233,'m','ReactivePulseConst',7,4
	._type	1233,'m','BcdCommAddr',1235,8
	._type	1233,'m','MeterMode',1236,26
	._type	1233,'m','MeterMode_Alarm_Flag',1237,30
	._type	1233,'m','MeterMode_LedAlarm_Flag',1237,34
	._type	1233,'m','MeterMode_SpeakerAlarm_Flag',1237,38
	._type	1233,'m','MeterMode_TerminalAlarm_Flag',1237,42
	._type	1233,'m','DemandPeriod',3,46
	._type	1233,'m','DemandSkipPeriod',3,47
	._type	1233,'m','CycleDisplayTime',3,48
	._type	1233,'m','DisplayNumber',3,49
	._type	1233,'m','AutoBillDayHour',1272,50
	._type	1233,'m','Activem_Erengy_Mode',268,56
	._type	1233,'m','REActivem_Erengy_1_Mode',268,57
	._type	1233,'m','REActivem_Erengy_2_Mode',268,58
	._type	1233,'m','MeterTypeMode',268,59
	._type	1233,'m','CarrierMode',268,60
	._type	1233,'m','Commrate',1273,61
	._type	1233,'m','SlotParemeter',1275,65
	._type	1233,'m','TriffSwitch',1276,81
	._type	1233,'m','DailySlotSwitch',1276,91
	._type	1233,'m','KeyDisplayNumber',18,101
	._type	1233,'m','ClearPassword',1278,103
	._type	1233,'m','UserClass',1279,123
	._type	1233,'m','EventJudgeIn',7,126
	._type	1233,'m','DISP_In',3,130
	._type	1233,'m','EventReportMode',1280,131
	._type	1233,'m','LocalFunctionMode',268,139
	._type	1233,'m','ResetReportTime',3,140
	._type	1233,'m','crc_cal',18,141
	._type	1348,'Z',32,3
	._type	1349,'Z',6,3
	._type	1350,'Z',6,3
	._type	1351,'Z',6,3
	._type	1352,'Z',4,3
	._type	1353,'Z',4,3
	._type	1354,'Z',10,3
	._type	1355,'Z',10,3
	._type	1356,'Z',16,3
	._type	1357,'Z',32,3
	._type	1358,'Z',32,3
	._type	1359,'Z',32,3
	._type	1360,'Z',6,3
	._type	1361,'Z',6,3
	._type	1362,'Z',6,3
	._type	1363,'Z',6,18
	._type	1364,'Z',63,3
	._type	1365,'Z',8,3
	._type	1347,'S','PARAMETER2',335
	._type	1347,'m','AscII_MeterManage_Code',1348,0
	._type	1347,'m','AscII_V_Regulation',1349,32
	._type	1347,'m','AscII_I_Regulation',1350,38
	._type	1347,'m','AscII_MAX_I',1351,44
	._type	1347,'m','AscII_Active_Accu',1352,50
	._type	1347,'m','AscII_Reactive_Accu',1353,54
	._type	1347,'m','AscII_Meter_Moder',1354,58
	._type	1347,'m','AscII_Manufacture_Day',1355,68
	._type	1347,'m','AscII_Protocol_Version',1356,78
	._type	1347,'m','AscII_Factory_Hardware_Version',1357,94
	._type	1347,'m','AscII_Factory_Sofeware_Version',1358,126
	._type	1347,'m','AscII_Factory_Number_Version',1359,158
	._type	1347,'m','EnergyPoint',3,190
	._type	1347,'m','PowerPoint',3,191
	._type	1347,'m','LoadDay',3,192
	._type	1347,'m','PulseWidth',18,193
	._type	1347,'m','BcdMeterID',1360,195
	._type	1347,'m','BcdUserID',1361,201
	._type	1347,'m','BcdDeviceID',1362,207
	._type	1347,'m','LoadRecordMode',268,213
	._type	1347,'m','LoadRecoedBeginTime',311,214
	._type	1347,'m','LoadRecordPeriod',1363,221
	._type	1347,'m','OpenSwitchDelayTime',3,233
	._type	1347,'m','CloseSwitchDelayTime',3,234
	._type	1347,'m','ShowNoKeyRetTime',18,235
	._type	1347,'m','Meterlocktimes',3,237
	._type	1347,'m','PlusEnergyData',7,238
	._type	1347,'m','NegaEnergyData',7,242
	._type	1347,'m','ExitProgrameTime',18,246
	._type	1347,'m','BroadcastJustTtimes',3,248
	._type	1347,'m','JFPG_ExpressTriff',1364,249
	._type	1347,'m','PowerOnFullScreenTime',3,312
	._type	1347,'m','Longitude',20,313
	._type	1347,'m','Latitude',20,317
	._type	1347,'m','Height',20,321
	._type	1347,'m','MeterSoftIdNumber',1365,325
	._type	1347,'m','crc_cal',18,333
	._type	1367,'Z',2,7
	._type	1366,'S','EVENT_PARAMETER',123
	._type	1366,'m','VoltageHealth_UpSet',7,0
	._type	1366,'m','VoltageHealth_DownSet',7,4
	._type	1366,'m','VoltageCheck_UpSet',7,8
	._type	1366,'m','VoltageCheck_DownSet',7,12
	._type	1366,'m','JudgeLossVoltageSecond',3,16
	._type	1366,'m','JudgeBreakPhaseSecond',3,17
	._type	1366,'m','JudgeLostCurr_T',3,18
	._type	1366,'m','JudgeLostCurr_I',1367,19
	._type	1366,'m','JudgeBreakPhaseI',7,27
	._type	1366,'m','PaADemandLimit',7,31
	._type	1366,'m','NeADemandLimit',7,35
	._type	1366,'m','CriticalVoltage',3,39
	._type	1366,'m','JudgeOverVolt_V',18,40
	._type	1366,'m','JudgeCurrImBalanceN',7,42
	._type	1366,'m','JudgeVoltImBalanceN',7,46
	._type	1366,'m','JudgeLossVoltage',7,50
	._type	1366,'m','JudgeLossVoltageNV',3,54
	._type	1366,'m','JudgeVoltDown_V',18,55
	._type	1366,'m','JudgeOverCurrentI',7,57
	._type	1366,'m','JudgeLostVoltSV',18,61
	._type	1366,'m','JudgeLostVoltEV',18,63
	._type	1366,'m','JudgeVoltDownT',3,65
	._type	1366,'m','JudgeOverVoltT',3,66
	._type	1366,'m','JudgeBreakPhaseV',18,67
	._type	1366,'m','JudgeVoltImBalanceT',3,69
	._type	1366,'m','JudgeCurrImBalanceT',3,70
	._type	1366,'m','JudgeLostCurrSV',18,71
	._type	1366,'m','JudgeOverCurrentT',3,73
	._type	1366,'m','JudgePowerReverseP',7,74
	._type	1366,'m','JudgePowerReverseT',3,78
	._type	1366,'m','JudgeUpLoadP',7,79
	._type	1366,'m','JudgeUpLoadT',3,83
	._type	1366,'m','JudgeOverDemandP',7,84
	._type	1366,'m','JudgeOverFactorN',18,88
	._type	1366,'m','JudgeOverFactorT',3,90
	._type	1366,'m','JudgeCurrFarImBN',18,91
	._type	1366,'m','JudgeCurrFarImBT',3,93
	._type	1366,'m','JudgeFailCurrSV',18,94
	._type	1366,'m','JudgeFailCurrI',7,96
	._type	1366,'m','JudgeFailCurrT',3,100
	._type	1366,'m','JudgeOverDemandN',7,101
	._type	1366,'m','JudgeOverDemandT',3,105
	._type	1366,'m','JudgeCurrImBMinI',7,106
	._type	1366,'m','JudgeABCPowerReverseP',7,110
	._type	1366,'m','JudgeABCPowerReverseT',3,114
	._type	1366,'m','AD_Sample_Vref',18,115
	._type	1366,'m','ClockBattery_volt_Low_Threshold',18,117
	._type	1366,'m','DisplayBattery_volt_Low_Threshold',18,119
	._type	1366,'m','crc_cal',18,121
	._type	1369,'Z',4,3
	._type	1368,'S','FREEZE_PARAMETER',22
	._type	1368,'m','FreezeDate',1369,0
	._type	1368,'m','FreezeDateFlag',3,4
	._type	1368,'m','Freeze_Period_Date',311,5
	._type	1368,'m','Freeze_Period_Interval',3,12
	._type	1368,'m','FreezeDay_Hour',3,13
	._type	1368,'m','FreezeDay_Min',3,14
	._type	1368,'m','New645_Freeze_Time_Mode',268,15
	._type	1368,'m','New645_Freeze_Moment_Mode',268,16
	._type	1368,'m','New645_Freeze_Promise_Mode',268,17
	._type	1368,'m','New645_Freeze_Period_Mode',268,18
	._type	1368,'m','New645_Freeze_Day_Mode',268,19
	._type	1368,'m','crc_cal',18,20
	._type	1232,'S','METER_PARAMETER',623
	._type	1232,'m','parameter1',1233,0
	._type	1232,'m','parameter2',1347,143
	._type	1232,'m','event_parameter',1366,478
	._type	1232,'m','freeze_parameter',1368,601
	._var	'Meter_Parameter','E',1232
	._type	1372,'g','LostVoltage_A',0,1,3
	._type	1373,'g','LostVoltage_B',0,1,3
	._type	1374,'g','LostVoltage_C',0,1,3
	._type	1375,'g','VoltageReserve',0,1,3
	._type	1376,'g','Phase3LostVolt',0,1,3
	._type	1377,'g','LostCurrent_A',0,1,3
	._type	1378,'g','LostCurrent_B',0,1,3
	._type	1379,'g','LostCurrent_C',0,1,3
	._type	1380,'g','BreakPhase_A',0,1,3
	._type	1381,'g','BreakPhase_B',0,1,3
	._type	1382,'g','BreakPhase_C',0,1,3
	._type	1383,'g','VoltageDown_A',0,1,3
	._type	1384,'g','VoltageDown_B',0,1,3
	._type	1385,'g','VoltageDown_C',0,1,3
	._type	1386,'g','OverPaADemand',0,1,3
	._type	1387,'g','OverNeADemand',0,1,3
	._type	1388,'g','PowerReverse_A',0,1,3
	._type	1389,'g','PowerReverse_B',0,1,3
	._type	1390,'g','PowerReverse_C',0,1,3
	._type	1391,'g','OverVoltage_A',0,1,3
	._type	1392,'g','OverVoltage_B',0,1,3
	._type	1393,'g','OverVoltage_C',0,1,3
	._type	1394,'g','CurrImBalanceEvent',0,1,3
	._type	1395,'g','VoltImBalanceEvent',0,1,3
	._type	1396,'g','OverCurrent_A',0,1,3
	._type	1397,'g','OverCurrent_B',0,1,3
	._type	1398,'g','OverCurrent_C',0,1,3
	._type	1399,'g','UpLoad_A',0,1,3
	._type	1400,'g','UpLoad_B',0,1,3
	._type	1401,'g','UpLoad_C',0,1,3
	._type	1402,'g','OpenCoverEvent',0,1,3
	._type	1403,'g','OpenBoxEvent',0,1,3
	._type	1404,'g','OverPowerAlarm',0,1,3
	._type	1405,'g','ClockBatteryEvent',0,1,3
	._type	1406,'g','DisplayBatteryEvent',0,1,3
	._type	1407,'g','AdjustMeterEvent',0,1,3
	._type	1408,'g','ProgrammeEvent',0,1,3
	._type	1409,'g','OverFactor_A',0,1,3
	._type	1410,'g','OverFactor_B',0,1,3
	._type	1411,'g','OverFactor_C',0,1,3
	._type	1412,'g','CurrReverse',0,1,3
	._type	1413,'g','OverFactor',0,1,3
	._type	1414,'g','CurrFarImB',0,1,3
	._type	1415,'g','FailCurrent_A',0,1,3
	._type	1416,'g','FailCurrent_B',0,1,3
	._type	1417,'g','FailCurrent_C',0,1,3
	._type	1418,'g','PowerDownEvent',0,1,3
	._type	1419,'g','',0,1,3
	._type	1420,'g','OkVoltageCheck_A',0,1,3
	._type	1421,'g','UpVoltageCheck_A',0,1,3
	._type	1422,'g','DownVoltageCheck_A',0,1,3
	._type	1423,'g','OkVoltageCheck_B',0,1,3
	._type	1424,'g','UpVoltageCheck_B',0,1,3
	._type	1425,'g','DownVoltageCheck_B',0,1,3
	._type	1426,'g','ConstantMagnet',0,1,3
	._type	1427,'g','PowerAbnormal',0,1,3
	._type	1428,'g','OkVoltageCheck_C',0,1,3
	._type	1429,'g','UpVoltageCheck_C',0,1,3
	._type	1430,'g','DownVoltageCheck_C',0,1,3
	._type	1431,'g','Over1RDemand',0,1,3
	._type	1432,'g','Over2RDemand',0,1,3
	._type	1433,'g','Over3RDemand',0,1,3
	._type	1434,'g','Over4RDemand',0,1,3
	._type	1435,'g','',0,1,3
	._type	1371,'S','',8
	._type	1371,'m','LostVoltage_A',1372,0
	._type	1371,'m','LostVoltage_B',1373,1
	._type	1371,'m','LostVoltage_C',1374,2
	._type	1371,'m','VoltageReserve',1375,3
	._type	1371,'m','Phase3LostVolt',1376,4
	._type	1371,'m','LostCurrent_A',1377,5
	._type	1371,'m','LostCurrent_B',1378,6
	._type	1371,'m','LostCurrent_C',1379,7
	._type	1371,'m','BreakPhase_A',1380,8
	._type	1371,'m','BreakPhase_B',1381,9
	._type	1371,'m','BreakPhase_C',1382,10
	._type	1371,'m','VoltageDown_A',1383,11
	._type	1371,'m','VoltageDown_B',1384,12
	._type	1371,'m','VoltageDown_C',1385,13
	._type	1371,'m','OverPaADemand',1386,14
	._type	1371,'m','OverNeADemand',1387,15
	._type	1371,'m','PowerReverse_A',1388,16
	._type	1371,'m','PowerReverse_B',1389,17
	._type	1371,'m','PowerReverse_C',1390,18
	._type	1371,'m','OverVoltage_A',1391,19
	._type	1371,'m','OverVoltage_B',1392,20
	._type	1371,'m','OverVoltage_C',1393,21
	._type	1371,'m','CurrImBalanceEvent',1394,22
	._type	1371,'m','VoltImBalanceEvent',1395,23
	._type	1371,'m','OverCurrent_A',1396,24
	._type	1371,'m','OverCurrent_B',1397,25
	._type	1371,'m','OverCurrent_C',1398,26
	._type	1371,'m','UpLoad_A',1399,27
	._type	1371,'m','UpLoad_B',1400,28
	._type	1371,'m','UpLoad_C',1401,29
	._type	1371,'m','OpenCoverEvent',1402,30
	._type	1371,'m','OpenBoxEvent',1403,31
	._type	1371,'m','OverPowerAlarm',1404,32
	._type	1371,'m','ClockBatteryEvent',1405,33
	._type	1371,'m','DisplayBatteryEvent',1406,34
	._type	1371,'m','AdjustMeterEvent',1407,35
	._type	1371,'m','ProgrammeEvent',1408,36
	._type	1371,'m','OverFactor_A',1409,37
	._type	1371,'m','OverFactor_B',1410,38
	._type	1371,'m','OverFactor_C',1411,39
	._type	1371,'m','CurrReverse',1412,40
	._type	1371,'m','OverFactor',1413,41
	._type	1371,'m','CurrFarImB',1414,42
	._type	1371,'m','FailCurrent_A',1415,43
	._type	1371,'m','FailCurrent_B',1416,44
	._type	1371,'m','FailCurrent_C',1417,45
	._type	1371,'m','PowerDownEvent',1418,46
	._type	1371,'m','',1419,47
	._type	1371,'m','OkVoltageCheck_A',1420,48
	._type	1371,'m','UpVoltageCheck_A',1421,49
	._type	1371,'m','DownVoltageCheck_A',1422,50
	._type	1371,'m','OkVoltageCheck_B',1423,51
	._type	1371,'m','UpVoltageCheck_B',1424,52
	._type	1371,'m','DownVoltageCheck_B',1425,53
	._type	1371,'m','ConstantMagnet',1426,54
	._type	1371,'m','PowerAbnormal',1427,55
	._type	1371,'m','OkVoltageCheck_C',1428,56
	._type	1371,'m','UpVoltageCheck_C',1429,57
	._type	1371,'m','DownVoltageCheck_C',1430,58
	._type	1371,'m','Over1RDemand',1431,59
	._type	1371,'m','Over2RDemand',1432,60
	._type	1371,'m','Over3RDemand',1433,61
	._type	1371,'m','Over4RDemand',1434,62
	._type	1371,'m','',1435,63
	._type	1436,'Z',8,3
	._type	1370,'U','EVENT_POWER_NET_FLAG',8
	._type	1370,'m','bit',1371,0
	._type	1370,'m','byte',1436,0
	._var	'Event_Power_Net_Flag','E',1370
	._type	1437,'S','EVENT_POWER_NET_POINTER',58
	._type	1437,'m','BreakPhase_A_P',3,0
	._type	1437,'m','BreakPhase_B_P',3,1
	._type	1437,'m','BreakPhase_C_P',3,2
	._type	1437,'m','LostVoltage_A_P',3,3
	._type	1437,'m','LostVoltage_B_P',3,4
	._type	1437,'m','LostVoltage_C_P',3,5
	._type	1437,'m','LostCurrent_A_P',3,6
	._type	1437,'m','LostCurrent_B_P',3,7
	._type	1437,'m','LostCurrent_C_P',3,8
	._type	1437,'m','PowerReverse_T_P',3,9
	._type	1437,'m','PowerReverse_A_P',3,10
	._type	1437,'m','PowerReverse_B_P',3,11
	._type	1437,'m','PowerReverse_C_P',3,12
	._type	1437,'m','OverPowerAlarm_P',3,13
	._type	1437,'m','VoltageReserve_P',3,14
	._type	1437,'m','OverVoltage_A_P',3,15
	._type	1437,'m','OverVoltage_B_P',3,16
	._type	1437,'m','OverVoltage_C_P',3,17
	._type	1437,'m','PowerDown_P',3,18
	._type	1437,'m','ProgrammeEvent_P',3,19
	._type	1437,'m','VoltStatistic_A_P',3,20
	._type	1437,'m','VoltStatistic_B_P',3,21
	._type	1437,'m','VoltStatistic_C_P',3,22
	._type	1437,'m','VoltStatistic_T_P',3,23
	._type	1437,'m','OverPaADemand_P',3,24
	._type	1437,'m','OverNeADemand_P',3,25
	._type	1437,'m','Over1RDemand_P',3,26
	._type	1437,'m','Over2RDemand_P',3,27
	._type	1437,'m','Over3RDemand_P',3,28
	._type	1437,'m','Over4RDemand_P',3,29
	._type	1437,'m','OpenCoverEvent_P',3,30
	._type	1437,'m','OpenBoxEvent_P',3,31
	._type	1437,'m','Phase3LostVolt_P',3,32
	._type	1437,'m','CurrFarImB_P',3,33
	._type	1437,'m','ConstantMagnet_P',3,34
	._type	1437,'m','PowerAbnormal_P',3,35
	._type	1437,'m','CurrImBalanceEvent_P',3,36
	._type	1437,'m','VoltImBalanceEvent_P',3,37
	._type	1437,'m','VoltageDown_A_P',3,38
	._type	1437,'m','VoltageDown_B_P',3,39
	._type	1437,'m','VoltageDown_C_P',3,40
	._type	1437,'m','OverCurrent_A_P',3,41
	._type	1437,'m','OverCurrent_B_P',3,42
	._type	1437,'m','OverCurrent_C_P',3,43
	._type	1437,'m','UpLoad_A_P',3,44
	._type	1437,'m','UpLoad_B_P',3,45
	._type	1437,'m','UpLoad_C_P',3,46
	._type	1437,'m','CurrReverse_P',3,47
	._type	1437,'m','OverFactor_P',3,48
	._type	1437,'m','OverFactor_A_P',3,49
	._type	1437,'m','OverFactor_B_P',3,50
	._type	1437,'m','OverFactor_C_P',3,51
	._type	1437,'m','FailCurrent_A_P',3,52
	._type	1437,'m','FailCurrent_B_P',3,53
	._type	1437,'m','FailCurrent_C_P',3,54
	._type	1437,'m','ClockBatteryEvent_P',3,55
	._type	1437,'m','DisplayBatteryEvent_P',3,56
	._type	1437,'m','AdjustMeterEvent_P',3,57
	._var	'Event_Power_Net_Pointer','E',1437
	._type	1438,'S','EVENT_METER_PRO_POINTER',22
	._type	1438,'m','ResetCPU_P',3,0
	._type	1438,'m','SetPrimary_P',3,1
	._type	1438,'m','RunClockError_P',3,2
	._type	1438,'m','PowerUpClockError_P',3,3
	._type	1438,'m','AdjustEnergy_P',3,4
	._type	1438,'m','EepromErr_P',3,5
	._type	1438,'m','AdjustTimeOverT_P',3,6
	._type	1438,'m','Energypasszero_P',3,7
	._type	1438,'m','Rst90E36_P',3,8
	._type	1438,'m','ClearMeterRecord_P',3,9
	._type	1438,'m','AdjustTimeRecord_P',3,10
	._type	1438,'m','ClearDemandRecord_P',3,11
	._type	1438,'m','ClearEventRecord_P',3,12
	._type	1438,'m','ProgWeekRecord_P',3,13
	._type	1438,'m','ProgAEModeRecord_P',3,14
	._type	1438,'m','ProgNEMode1Record_P',3,15
	._type	1438,'m','ProgNEMode2Record_P',3,16
	._type	1438,'m','ProgBillDayRecord_P',3,17
	._type	1438,'m','ProgYearSlotRecord_P',3,18
	._type	1438,'m','ProgDailySlotRecord_P',3,19
	._type	1438,'m','ProgHolidayRecord_P',3,20
	._type	1438,'m','OverPowerCloseSwitch_P',3,21
	._var	'Event_Meter_Pro_Pointer','E',1438
	._type	1439,'S','EVENT_POWER_NET_TIMES',232
	._type	1439,'m','BreakPhase_A_Times',7,0
	._type	1439,'m','BreakPhase_B_Times',7,4
	._type	1439,'m','BreakPhase_C_Times',7,8
	._type	1439,'m','LostVoltage_A_Times',7,12
	._type	1439,'m','LostVoltage_B_Times',7,16
	._type	1439,'m','LostVoltage_C_Times',7,20
	._type	1439,'m','LostCurrent_A_Times',7,24
	._type	1439,'m','LostCurrent_B_Times',7,28
	._type	1439,'m','LostCurrent_C_Times',7,32
	._type	1439,'m','PowerReverse_T_Times',7,36
	._type	1439,'m','PowerReverse_A_Times',7,40
	._type	1439,'m','PowerReverse_B_Times',7,44
	._type	1439,'m','PowerReverse_C_Times',7,48
	._type	1439,'m','OverPowerAlarm_Times',7,52
	._type	1439,'m','VoltageReserve_Times',7,56
	._type	1439,'m','OverVoltage_A_Times',7,60
	._type	1439,'m','OverVoltage_B_Times',7,64
	._type	1439,'m','OverVoltage_C_Times',7,68
	._type	1439,'m','PowerDown_Times',7,72
	._type	1439,'m','ProgrammeEvent_Times',7,76
	._type	1439,'m','VoltStatistic_A_Times',7,80
	._type	1439,'m','VoltStatistic_B_Times',7,84
	._type	1439,'m','VoltStatistic_C_Times',7,88
	._type	1439,'m','VoltStatistic_T_Times',7,92
	._type	1439,'m','OverPaADemand_Times',7,96
	._type	1439,'m','OverNeADemand_Times',7,100
	._type	1439,'m','Over1RDemand_Times',7,104
	._type	1439,'m','Over2RDemand_Times',7,108
	._type	1439,'m','Over3RDemand_Times',7,112
	._type	1439,'m','Over4RDemand_Times',7,116
	._type	1439,'m','OpenCoverEvent_Times',7,120
	._type	1439,'m','OpenBoxEvent_Times',7,124
	._type	1439,'m','Phase3LostVolt_Times',7,128
	._type	1439,'m','CurrFarImB_Times',7,132
	._type	1439,'m','ConstantMagnet_Times',7,136
	._type	1439,'m','PowerAbnormal_Times',7,140
	._type	1439,'m','CurrImBalanceEvent_Times',7,144
	._type	1439,'m','VoltImBalanceEvent_Times',7,148
	._type	1439,'m','VoltageDown_A_Times',7,152
	._type	1439,'m','VoltageDown_B_Times',7,156
	._type	1439,'m','VoltageDown_C_Times',7,160
	._type	1439,'m','OverCurrent_A_Times',7,164
	._type	1439,'m','OverCurrent_B_Times',7,168
	._type	1439,'m','OverCurrent_C_Times',7,172
	._type	1439,'m','UpLoad_A_Times',7,176
	._type	1439,'m','UpLoad_B_Times',7,180
	._type	1439,'m','UpLoad_C_Times',7,184
	._type	1439,'m','CurrReverse_Times',7,188
	._type	1439,'m','OverFactor_Times',7,192
	._type	1439,'m','OverFactor_A_Times',7,196
	._type	1439,'m','OverFactor_B_Times',7,200
	._type	1439,'m','OverFactor_C_Times',7,204
	._type	1439,'m','FailCurrent_A_Times',7,208
	._type	1439,'m','FailCurrent_B_Times',7,212
	._type	1439,'m','FailCurrent_C_Times',7,216
	._type	1439,'m','ClockBatteryEvent_Times',7,220
	._type	1439,'m','DisplayBatteryEvent_Times',7,224
	._type	1439,'m','AdjustMeterEvent_Times',7,228
	._var	'Event_Power_Net_Times','E',1439
	._type	1440,'S','EVENT_METER_PRO_TIMES',88
	._type	1440,'m','ResetCPU_Times',7,0
	._type	1440,'m','SetPrimary_Times',7,4
	._type	1440,'m','RunClockError_Times',7,8
	._type	1440,'m','PowerUpClockError_Times',7,12
	._type	1440,'m','AdjustEnergy_Times',7,16
	._type	1440,'m','EepromErr_Times',7,20
	._type	1440,'m','AdjustTimeOverT_Times',7,24
	._type	1440,'m','Energypasszero_Times',7,28
	._type	1440,'m','Rst90E36_Times',7,32
	._type	1440,'m','ClearMeterRecord_Times',7,36
	._type	1440,'m','AdjustTimeRecord_Times',7,40
	._type	1440,'m','ClearDemandRecord_Times',7,44
	._type	1440,'m','ClearEventRecord_Times',7,48
	._type	1440,'m','ProgWeekRecord_Times',7,52
	._type	1440,'m','ProgAEModeRecord_Times',7,56
	._type	1440,'m','ProgNEMode1Record_Times',7,60
	._type	1440,'m','ProgNEMode2Record_Times',7,64
	._type	1440,'m','ProgBillDayRecord_Times',7,68
	._type	1440,'m','ProgYearSlotRecord_Times',7,72
	._type	1440,'m','ProgDailySlotRecord_Times',7,76
	._type	1440,'m','ProgHolidayRecord_Times',7,80
	._type	1440,'m','OverPowerCloseSwitch_Times',7,84
	._var	'Event_Meter_Pro_Times','E',1440
	._type	1441,'S','EVENT_POWER_NET_TIMETICKS',256
	._type	1441,'m','LostVoltage_A_Times_Ticks',7,0
	._type	1441,'m','LostVoltage_B_Times_Ticks',7,4
	._type	1441,'m','LostVoltage_C_Times_Ticks',7,8
	._type	1441,'m','VoltageReserve_Times_Ticks',7,12
	._type	1441,'m','Phase3LostVolt_Times_Ticks',7,16
	._type	1441,'m','LostCurrent_A_Times_Ticks',7,20
	._type	1441,'m','LostCurrent_B_Times_Ticks',7,24
	._type	1441,'m','LostCurrent_C_Times_Ticks',7,28
	._type	1441,'m','BreakPhase_A_Times_Ticks',7,32
	._type	1441,'m','BreakPhase_B_Times_Ticks',7,36
	._type	1441,'m','BreakPhase_C_Times_Ticks',7,40
	._type	1441,'m','VoltageDown_A_Times_Ticks',7,44
	._type	1441,'m','VoltageDown_B_Times_Ticks',7,48
	._type	1441,'m','VoltageDown_C_Times_Ticks',7,52
	._type	1441,'m','OverPaADemand_Times_Ticks',7,56
	._type	1441,'m','OverNeADemand_Times_Ticks',7,60
	._type	1441,'m','PowerReverse_A_Ticks',7,64
	._type	1441,'m','PowerReverse_B_Ticks',7,68
	._type	1441,'m','PowerReverse_C_Ticks',7,72
	._type	1441,'m','OverVoltage_A_Times_Ticks',7,76
	._type	1441,'m','OverVoltage_B_Times_Ticks',7,80
	._type	1441,'m','OverVoltage_C_Times_Ticks',7,84
	._type	1441,'m','CurrImBalanceEvent_Times_Ticks',7,88
	._type	1441,'m','VoltImBalanceEvent_Times_Ticks',7,92
	._type	1441,'m','OverCurrent_A_Times_Ticks',7,96
	._type	1441,'m','OverCurrent_B_Times_Ticks',7,100
	._type	1441,'m','OverCurrent_C_Times_Ticks',7,104
	._type	1441,'m','UpLoad_A_Times_Ticks',7,108
	._type	1441,'m','UpLoad_B_Times_Ticks',7,112
	._type	1441,'m','UpLoad_C_Times_Ticks',7,116
	._type	1441,'m','Nouse_0_Times_Ticks',7,120
	._type	1441,'m','Nouse_1_Times_Ticks',7,124
	._type	1441,'m','OverPowerAlarm_Times_Ticks',7,128
	._type	1441,'m','Nouse_2_Times_Ticks',7,132
	._type	1441,'m','Nouse_3_Times_Ticks',7,136
	._type	1441,'m','Nouse_4_Times_Ticks',7,140
	._type	1441,'m','Nouse_5_Times_Ticks',7,144
	._type	1441,'m','OverFactor_A_Times_Ticks',7,148
	._type	1441,'m','OverFactor_B_Times_Ticks',7,152
	._type	1441,'m','OverFactor_C_Times_Ticks',7,156
	._type	1441,'m','CurrReverse_Times_Ticks',7,160
	._type	1441,'m','OverFactor_Times_Ticks',7,164
	._type	1441,'m','CurrFarImB_Times_Ticks',7,168
	._type	1441,'m','FailCurrent_A_Times_Ticks',7,172
	._type	1441,'m','FailCurrent_B_Times_Ticks',7,176
	._type	1441,'m','FailCurrent_C_Times_Ticks',7,180
	._type	1441,'m','Nouse_15_Times_Ticks',7,184
	._type	1441,'m','Nouse_16_Times_Ticks',7,188
	._type	1441,'m','OkVoltageCheck_A_Times_Ticks',7,192
	._type	1441,'m','UpVoltageCheck_A_Times_Ticks',7,196
	._type	1441,'m','DownVoltageCheck_A_Times_Ticks',7,200
	._type	1441,'m','OkVoltageCheck_B_Times_Ticks',7,204
	._type	1441,'m','UpVoltageCheck_B_Times_Ticks',7,208
	._type	1441,'m','DownVoltageCheck_B_Times_Ticks',7,212
	._type	1441,'m','Nouse_18_Times_Ticks',7,216
	._type	1441,'m','Nouse_19_Times_Ticks',7,220
	._type	1441,'m','OkVoltageCheck_C_Times_Ticks',7,224
	._type	1441,'m','UpVoltageCheck_C_Times_Ticks',7,228
	._type	1441,'m','DownVoltageCheck_C_Times_Ticks',7,232
	._type	1441,'m','Nouse_20_Times_Ticks',7,236
	._type	1441,'m','Nouse_21_Times_Ticks',7,240
	._type	1441,'m','Nouse_22_Times_Ticks',7,244
	._type	1441,'m','Nouse_23_Times_Ticks',7,248
	._type	1441,'m','Nouse_24_Times_Ticks',7,252
	._var	'Event_Power_Net_Timeticks','E',1441
	._type	1444,'Z',2,18
	._type	1445,'Z',2,18
	._type	1446,'Z',2,18
	._type	1447,'Z',4,1446
	._type	1448,'Z',3,7
	._type	1449,'Z',3,7
	._type	1450,'Z',4,7
	._type	1451,'Z',3,1450
	._type	1443,'S','ENERGY_POWERDOWN',96
	._type	1443,'m','Plus_Active',1444,0
	._type	1443,'m','Nega_Active',1445,4
	._type	1443,'m','Quad_Reactive',1447,8
	._type	1443,'m','Phase_Plus_Active',1448,24
	._type	1443,'m','Phase_Nega_Active',1449,36
	._type	1443,'m','Phase_Reactive',1451,48
	._type	1452,'Z',8,3
	._type	1453,'S','PRE_SAVE_DATA',21
	._type	1453,'m','Remain_Money',20,0
	._type	1453,'m','Remain_Money_bottom',7,4
	._type	1453,'m','Energy_Next_Step',7,8
	._type	1453,'m','Month_Total_Energy',7,12
	._type	1453,'m','Year_Total_Energy',7,16
	._type	1453,'m','duct_eng',3,20
	._type	1442,'S','POWERDOWN_SAVE_DATA',135
	._type	1442,'m','energy_powerdown',1443,0
	._type	1442,'m','date',311,96
	._type	1442,'m','fee',3,103
	._type	1442,'m','PdEventFlag',1452,104
	._type	1442,'m','Pre_Save_Data',1453,112
	._type	1442,'m','crc_cal',18,133
	._var	'Powerdown_Save_Data','E',1442
	._type	1455,'Z',4,7
	._type	1456,'Z',4,7
	._type	1457,'Z',4,7
	._type	1458,'Z',4,1457
	._type	1459,'Z',9,3
	._type	1460,'Z',9,3
	._type	1454,'S','ENERGY_RAIL_ADD_BUFFER',116
	._type	1454,'m','Rail_Plus_Active',1455,0
	._type	1454,'m','Rail_Nega_Active',1456,16
	._type	1454,'m','Rail_Quad_Reactive',1458,32
	._type	1454,'m','Total_Plus_Active_100mwh',1459,96
	._type	1454,'m','Total_Nega_Active_100mwh',1460,105
	._type	1454,'m','crc_cal',18,114
	._var	'energy_rail','E',1454
	._type	1463,'Z',9,7
	._type	1464,'Z',9,7
	._type	1465,'Z',9,7
	._type	1466,'Z',4,1465
	._type	1467,'Z',3,7
	._type	1468,'Z',3,7
	._type	1469,'Z',4,7
	._type	1470,'Z',3,1469
	._type	1471,'Z',6,3
	._type	1462,'S','ENERGY_RECORD',317
	._type	1462,'m','Plus_Active',1463,0
	._type	1462,'m','Nega_Active',1464,36
	._type	1462,'m','Quad_Reactive',1466,72
	._type	1462,'m','Phase_Plus_Active',1467,216
	._type	1462,'m','Phase_Nega_Active',1468,228
	._type	1462,'m','Phase_Reactive',1470,240
	._type	1462,'m','EnergyPassMAXTimes',1471,288
	._type	1462,'m','Pre_Save_Data',1453,294
	._type	1462,'m','crc_cal',18,315
	._type	1475,'Z',5,3
	._type	1474,'S','DEMAND_DATA_FORM',9
	._type	1474,'m','Demand',7,0
	._type	1474,'m','time',1475,4
	._type	1476,'Z',9,1474
	._type	1477,'Z',9,1474
	._type	1478,'Z',9,1474
	._type	1479,'Z',4,1478
	._type	1473,'S','DEMAND_RECORD',486
	._type	1473,'m','Plus_Active',1476,0
	._type	1473,'m','Nega_Active',1477,81
	._type	1473,'m','Quad_Reactive',1479,162
	._type	1480,'Z',9,1474
	._type	1481,'Z',6,1480
	._type	1472,'U','DEMAND_TYPE',486
	._type	1472,'m','Demand',1473,0
	._type	1472,'m','Value',1481,0
	._type	1461,'S','THIS_MONTH_DATA',803
	._type	1461,'m','Energy_Record',1462,0
	._type	1461,'m','Demand_Record',1472,317
	._var	'This_Month_Data','E',1461
	._type	1483,'S','PASSWORDERR',16
	._type	1483,'m','flag',3,0
	._type	1483,'m','num',3,1
	._type	1483,'m','firsttime',311,2
	._type	1483,'m','secondtime',311,9
	._type	1484,'Z',5,1483
	._type	1485,'S','COMMCLEARSTRDEF',7
	._type	1485,'m','Clear_All_Flag',3,0
	._type	1485,'m','Clear_Event_Flag',3,1
	._type	1485,'m','Clear_Demand_Flag',3,2
	._type	1485,'m','CommDailyProgFlag',3,3
	._type	1485,'m','CommYearProgFlag',3,4
	._type	1485,'m','Comm_Clear_Crc_Data',18,5
	._type	1482,'S','OTHER_DATA',125
	._type	1482,'m','BatteryWorkTime1',7,0
	._type	1482,'m','BatteryWorkTime2',7,4
	._type	1482,'m','PasswordErr',1484,8
	._type	1482,'m','Clear_PasswordErr_Flag',3,88
	._type	1482,'m','LastClearDemandDate',311,89
	._type	1482,'m','LastJusttime',311,96
	._type	1482,'m','JusttimesAdd',3,103
	._type	1482,'m','ProgramDate',311,104
	._type	1482,'m','LastClearDemandDateCM',311,111
	._type	1482,'m','CommClearFlagCurrEE',1485,118
	._var	'Other_Data','E',1482
	._type	1486,'S','POWERRESERVE_ENERGY_SING',8
	._type	1486,'m','P_PowerReserveEnergy',7,0
	._type	1486,'m','N_PowerReserveEnergy',7,4
	._type	1487,'Z',3,1486
	._var	'CurrentImbalance_Energy','E',1487
	._type	1489,'Z',1280,3
	._type	1491,'O',3
	._type	1492,'Z',4,1491
	._type	1493,'Z',4,18
	._type	1494,'O',3
	._type	1496,'Z',4,3
	._type	1497,'Z',2,18
	._type	1495,'U','DATA',4
	._type	1495,'m','c',1496,0
	._type	1495,'m','i',1497,0
	._type	1495,'m','g',20,0
	._type	1498,'Z',12,3
	._type	1499,'Z',20,3
	._type	1500,'Z',4,1499
	._type	1501,'Z',50,3
	._type	1502,'Z',50,3
	._type	1490,'S','COMM',225
	._type	1490,'m','num',3,0
	._type	1490,'m','com',268,1
	._type	1490,'m','addrr',1492,2
	._type	1490,'m','addre',1493,10
	._type	1490,'m','flag1',268,18
	._type	1490,'m','format',3,19
	._type	1490,'m','rw',3,20
	._type	1490,'m','len',3,21
	._type	1490,'m','addr5',1494,22
	._type	1490,'m','condition',3,24
	._type	1490,'m','flag2',268,25
	._type	1490,'m','flag3',268,26
	._type	1490,'m','flag4',268,27
	._type	1490,'m','calnumber',3,28
	._type	1490,'m','d',1495,29
	._type	1490,'m','Convert',1498,33
	._type	1490,'m','data',1500,45
	._type	1490,'m','f',1501,125
	._type	1490,'m','h',1502,175
	._type	1504,'O',3
	._type	1503,'S','Event',9
	._type	1503,'m','addr',18,0
	._type	1503,'m','point',3,2
	._type	1503,'m','eaddr',1504,3
	._type	1503,'m','len',18,5
	._type	1503,'m','elen',18,7
	._type	1488,'U','CoBuff',1280
	._type	1488,'m','b',1489,0
	._type	1488,'m','Energy_Record',1462,0
	._type	1488,'m','Energy_Powerdown',1443,0
	._type	1488,'m','Powerdown_Save_Data',1442,0
	._type	1488,'m','Meter_Parameter',1232,0
	._type	1488,'m','c',1490,0
	._type	1488,'m','e',1503,0
	._var	'Co','E',1488
	._type	1505,'Z',3,3
	._var	'WriteWhitchEeprom','E',1505
	._var	'Cal_PowerDown_Energy_add','E',1443
	._var	'TimeChontrolFlag','E',268
	._var	'ProgramRunPhaseFlag','E',268
	._var	'WriteTimeFlag','E',268
	._var	'Event_Time_Flag','E',268
	._type	1506,'Z',3,268
	._var	'Alarm_Map_Flag','E',1506
	._var	'MainSoftDate','E',311
	._var	'MainRamDate1','E',311
	._var	'MainRamDate2','E',311
	._type	1507,'S','OTHER_METER_PARAMETER',60
	._type	1507,'m','WorkRoomState',3,0
	._type	1507,'m','WorkRoomFlag',3,1
	._type	1507,'m','WorkRoomStateDate',311,2
	._type	1507,'m','WorkRoom_RunTime',7,9
	._type	1507,'m','ProgramKeyStartFlag',3,13
	._type	1507,'m','ProgramKeyTimeAdd',7,14
	._type	1507,'m','CommClearFlagCurrFF',1485,18
	._type	1507,'m','JustMeter',3,25
	._type	1507,'m','OutputModel',3,26
	._type	1507,'m','PowerOnDayfreeze_flag',3,27
	._type	1507,'m','DayFreezeReferenceDate',311,28
	._type	1507,'m','PowerOnRetort_flag',3,35
	._type	1507,'m','EventReport_RunTime',18,36
	._type	1507,'m','ResetEventReport_flag',3,38
	._type	1507,'m','OldSegParameter',7,39
	._type	1507,'m','Bill_Flag',3,43
	._type	1507,'m','Bill_Addr',3,44
	._type	1507,'m','Bill_DM_Flag',3,45
	._type	1507,'m','Bill_DM_Addr',3,46
	._type	1507,'m','LastEnergyBillDate',311,47
	._type	1507,'m','FreezeData_Time_addr',3,54
	._type	1507,'m','FreezeData_Moment_addr',3,55
	._type	1507,'m','FreezeData_Period_addr',3,56
	._type	1507,'m','FreezeData_Day_Addr',3,57
	._type	1507,'m','SwitchOn_Report',3,58
	._type	1507,'m','SwitchOff_Report',3,59
	._var	'O1ther_Meter_Parameter','E',1507
	._var	'Max_Triff_Current','E',3
	._var	'Active_power_Per_Mintue','E',7
	._var	'Temperature_Current','E',16
	._type	1510,'g','vatiryflag',0,1,3
	._type	1511,'g','falshDatalen',0,7,3
	._type	1509,'S','SHOW_POWEN_DATA_fLAG',1
	._type	1509,'m','vatiryflag',1510,0
	._type	1509,'m','falshDatalen',1511,1
	._type	1512,'Z',6,3
	._type	1513,'S','COM_SHOW_TABLE',3
	._type	1513,'m','address0',3,0
	._type	1513,'m','address1',18,1
	._type	1508,'S','Show_Powerdown_Data_Struct',10
	._type	1508,'m','Show_FlashData_flag',1509,0
	._type	1508,'m','showbuff',1512,1
	._type	1508,'m','Powerdown_show_table',1513,7
	._type	1514,'Z',99,1508
	._var	'Show_Powerdown_Cyc_Data','E',1514
	._type	1515,'Z',120,1508
	._var	'Show_Powerdown_Key_Data','E',1515
	._var	'Show_ID_vatiy','E',3
	._var	'Show_Powerdown_Net_Flag_Backup','E',1370
	._var	'Show_flash_poweron_vatiy','E',3
	._var	'show_which_now','E',3
	._type	1516,'v'
	._type	1517,'v'
	._type	1518,'x',1516,1
	._type	1518,'m','',0,1517
	._var	'Check_Max_Imbalance_Rate','F',1518
	._var	'LoadRecord','G',484,_LoadRecord
	._type	1519,'S','DATETIME',7
	._type	1519,'m','Year',3,0
	._type	1519,'m','Month',3,1
	._type	1519,'m','Day',3,2
	._type	1519,'m','Week',3,3
	._type	1519,'m','Hour',3,4
	._type	1519,'m','Minute',3,5
	._type	1519,'m','Second',3,6
	._var	'SoftDate','E',1519
	._var	'FlashEaseTimes','G',7,_FlashEaseTimes
	._var	'user_req_pnt','G',3,_user_req_pnt
	._type	1520,'v'
	._type	1521,'O',3
	._type	1522,'x',1520,1
	._type	1522,'m','rData',0,1521
	._var	'SendByte','F',1522
	._type	1523,'O',3
	._type	1524,'x',16,3
	._type	1524,'m','rStartAddr',0,18
	._type	1524,'m','rLength',0,18
	._type	1524,'m','rData',0,1523
	._var	'WriteBuffer','F',1524
	._type	1525,'v'
	._type	1526,'x',16,1
	._type	1526,'m','',0,1525
	._var	'SwitchPage','F',1526
	._type	1527,'v'
	._type	1528,'O',3
	._type	1529,'x',1527,3
	._type	1529,'m','rStartAddr',0,18
	._type	1529,'m','rLen',0,18
	._type	1529,'m','rData',0,1528
	._var	'ReadBuffer','F',1529
	._type	1530,'x',16,1
	._type	1530,'m','rPageAddress',0,18
	._var	'SaveBuffer','F',1530
	._type	1531,'x',16,1
	._type	1531,'m','rPageAddress',0,18
	._var	'LoadToBuffer','F',1531
	._type	1532,'O',312
	._type	1533,'x',16,1
	._type	1533,'m','rDate',0,1532
	._var	'SaveIndex','F',1533
	._type	1534,'O',3
	._type	1535,'x',3,3
	._type	1535,'m','FlashAddr',0,7
	._type	1535,'m','WriteBuff',0,1534
	._type	1535,'m','tlen',0,18
	._var	'Continuously_Program','F',1535
	._type	1536,'x',16,1
	._type	1536,'m','Faddr',0,7
	._var	'Check_Sector_Have_Erased','F',1536
	._type	1537,'v'
	._type	1538,'O',3
	._type	1539,'x',1537,3
	._type	1539,'m','FlashAddr',0,7
	._type	1539,'m','RcvBuff',0,1538
	._type	1539,'m','rlen',0,18
	._var	'FastRead_Data_Bytes','F',1539
	._type	1540,'O',3
	._type	1541,'x',3,5
	._type	1541,'m','Card_Addr',0,18
	._type	1541,'m','DataPointer',0,1540
	._type	1541,'m','Data_Length',0,18
	._type	1541,'m','DeviceName',0,3
	._type	1541,'m','OperationType',0,3
	._var	'Write_Read_FM24C256','F',1541
	._type	1542,'v'
	._type	1543,'v'
	._type	1544,'x',1542,1
	._type	1544,'m','',0,1543
	._var	'PowerOn_PCF8576','F',1544
	._type	1545,'v'
	._type	1546,'v'
	._type	1547,'x',1545,1
	._type	1547,'m','',0,1546
	._var	'PowerOff_PCF8576','F',1547
	._type	1548,'v'
	._type	1549,'x',3,1
	._type	1549,'m','',0,1548
	._var	'IIC_SOFT_RESET','F',1549
	._type	1550,'v'
	._type	1551,'v'
	._type	1552,'x',1550,1
	._type	1552,'m','',0,1551
	._var	'Check_IIC_State','F',1552
	._type	1553,'v'
	._type	1554,'x',1553,1
	._type	1554,'m','def',0,3
	._var	'ClockChipInit','F',1554
	._type	1555,'v'
	._type	1556,'O',3
	._type	1557,'x',1555,1
	._type	1557,'m','t',0,1556
	._var	'ClockChipRead','F',1557
	._type	1558,'v'
	._type	1559,'O',3
	._type	1560,'x',1558,1
	._type	1560,'m','t',0,1559
	._var	'ClockChipWrite','F',1560
	._type	1561,'v'
	._type	1562,'v'
	._type	1563,'x',1561,1
	._type	1563,'m','',0,1562
	._var	'ClockChipOpenSec','F',1563
	._type	1564,'v'
	._type	1565,'v'
	._type	1566,'x',1564,1
	._type	1566,'m','',0,1565
	._var	'ClockChipCloseSec','F',1566
	._type	1567,'v'
	._type	1568,'x',1567,1
	._type	1568,'m','number',0,16
	._var	'IIC_Delay','F',1568
	._type	1569,'Z',230,3
	._type	1570,'Z',3,1569
	._var	'CommB','E',1570
	._var	'ProgramEventFlag','E',3
	._var	'JustMeterDataFlag','E',268
	._var	'JustMeterDateFlag','E',311
	._var	'JustMeterFlag','E',3
	._type	1572,'g','firstreceivecomm',0,1,3
	._type	1573,'g','havebackframe',0,1,3
	._type	1574,'g','sendbackframe',0,1,3
	._type	1575,'g','readloadrecord',0,1,3
	._type	1576,'g','firstreadloadrecord',0,1,3
	._type	1577,'g','lastreadloadrecord',0,1,3
	._type	1578,'g','ZJ_Read_Big_Block',0,1,3
	._type	1579,'g','ZJ_Read_Lit_Block',0,1,3
	._type	1580,'g','ZJ_Read_Single',0,1,3
	._type	1581,'g','ZJ_zerodata',0,1,3
	._type	1582,'g','ZJ_overdata',0,1,3
	._type	1583,'g','ZJ_firstzjto645',0,1,3
	._type	1584,'g','BroadCasrAddress',0,1,3
	._type	1585,'O',3
	._type	1586,'Z',10,3
	._type	1571,'S','FindCommand_Result',47
	._type	1571,'m','firstreceivecomm',1572,0
	._type	1571,'m','havebackframe',1573,1
	._type	1571,'m','sendbackframe',1574,2
	._type	1571,'m','readloadrecord',1575,3
	._type	1571,'m','firstreadloadrecord',1576,4
	._type	1571,'m','lastreadloadrecord',1577,5
	._type	1571,'m','ZJ_Read_Big_Block',1578,6
	._type	1571,'m','ZJ_Read_Lit_Block',1579,7
	._type	1571,'m','ZJ_Read_Single',1580,8
	._type	1571,'m','ZJ_zerodata',1581,9
	._type	1571,'m','ZJ_overdata',1582,10
	._type	1571,'m','ZJ_firstzjto645',1583,11
	._type	1571,'m','BroadCasrAddress',1584,12
	._type	1571,'m','All_AA_Address',3,2
	._type	1571,'m','model',3,3
	._type	1571,'m','c',3,4
	._type	1571,'m','len',18,5
	._type	1571,'m','addr',3,7
	._type	1571,'m','id',438,8
	._type	1571,'m','dataaddr',1585,12
	._type	1571,'m','idt',438,14
	._type	1571,'m','lent',18,18
	._type	1571,'m','lena',18,20
	._type	1571,'m','ct',3,22
	._type	1571,'m','idd',438,23
	._type	1571,'m','ZJ_n',3,27
	._type	1571,'m','ZJ_len',3,28
	._type	1571,'m','uartx',3,29
	._type	1571,'m','sum',3,30
	._type	1571,'m','passerword',3,31
	._type	1571,'m','Frame_serial',3,32
	._type	1571,'m','Programer_code',7,33
	._type	1571,'m','command',1586,37
	._type	1587,'Z',4,1571
	._var	'cx','E',1587
	._type	1588,'Z',32,3
	._var	'Readdata_buff','E',1588
	._type	1589,'Z',3,20
	._var	'COMM_Curr','E',1589
	._type	1590,'Z',4,20
	._var	'COMM_Factor','E',1590
	._type	1591,'Z',4,20
	._var	'COMM_Active_power','E',1591
	._type	1592,'Z',4,20
	._var	'COMM_Reactive_power','E',1592
	._type	1593,'Z',4,20
	._var	'COMM_Visual_power','E',1593
	._type	1594,'Z',2,20
	._var	'COMM_Current_Demand','E',1594
	._type	1595,'Z',2,3
	._var	'Freeze_Flag_DayHour','E',1595
	._var	'Comm_DailyOrYear_Slot','E',3
	._type	1596,'Z',42,3
	._var	'Comm_Firrespon_SecDispos_Buff','E',1596
	._type	1597,'Z',3,3
	._var	'Comm_Firrespon_SecDispos_Uart','E',1597
	._var	'GPRS_Status','E',3
	._type	1598,'Z',2,18
	._var	'Voltage_ad_data','E',1598
	._var	'Displayfinish_flag','E',3
	._var	'FullScreenTime','E',18
	._var	'ad_Flag','E',3
	._var	'ad_finish_Flag','E',3
	._var	'meter_model_ok','E',7
	._var	'fix_ad_data','E',18
	._type	1599,'Z',2,7
	._type	1600,'Z',9,1599
	._var	'comm_plus_energy_01wh','E',1600
	._type	1601,'Z',2,7
	._type	1602,'Z',9,1601
	._var	'comm_nega_energy_01wh','E',1602
	._type	1603,'v'
	._type	1604,'x',1603,1
	._type	1604,'m','',0,3
	._var	'Init_Comm','F',1604
	._type	1605,'v'
	._type	1606,'x',1605,1
	._type	1606,'m','',0,3
	._var	'Interr_Comm_R','F',1606
	._type	1607,'v'
	._type	1608,'x',1607,1
	._type	1608,'m','',0,3
	._var	'Interr_Comm_W','F',1608
	._type	1609,'v'
	._type	1610,'x',1609,3
	._type	1610,'m','',0,3
	._type	1610,'m','',0,3
	._type	1610,'m','',0,3
	._var	'Communication','F',1610
	._type	1611,'x',3,2
	._type	1611,'m','',0,3
	._type	1611,'m','',0,3
	._var	'FindComCommand','F',1611
	._type	1612,'x',3,2
	._type	1612,'m','',0,3
	._type	1612,'m','',0,3
	._var	'AnswerComCommand','F',1612
	._type	1613,'O',3
	._type	1614,'O',3
	._type	1615,'x',16,6
	._type	1615,'m','',0,438
	._type	1615,'m','',0,1613
	._type	1615,'m','',0,18
	._type	1615,'m','',0,3
	._type	1615,'m','',0,1614
	._type	1615,'m','',0,3
	._var	'TransferData','F',1615
	._type	1616,'v'
	._type	1617,'x',7,1
	._type	1617,'m','',0,1616
	._var	'GetNowTime','F',1617
	._type	1618,'x',3,2
	._type	1618,'m','',0,7
	._type	1618,'m','',0,7
	._var	'GetTimeCount','F',1618
	._type	1619,'x',3,2
	._type	1619,'m','',0,3
	._type	1619,'m','',0,3
	._var	'F_Ar','F',1619
	._type	1620,'v'
	._type	1621,'x',1620,1
	._type	1621,'m','',0,3
	._var	'ReadData','F',1621
	._type	1622,'v'
	._type	1623,'v'
	._type	1624,'x',1622,1
	._type	1624,'m','',0,1623
	._var	'WriteData','F',1624
	._type	1625,'v'
	._type	1626,'v'
	._type	1627,'x',1625,1
	._type	1627,'m','',0,1626
	._var	'BroadcastJustTime','F',1627
	._type	1628,'v'
	._type	1629,'v'
	._type	1630,'x',1628,1
	._type	1630,'m','',0,1629
	._var	'WriteAddress','F',1630
	._type	1631,'v'
	._type	1632,'v'
	._type	1633,'x',1631,1
	._type	1633,'m','',0,1632
	._var	'WriteBaud','F',1633
	._type	1634,'v'
	._type	1635,'v'
	._type	1636,'x',1634,1
	._type	1636,'m','',0,1635
	._var	'WritePassword','F',1636
	._type	1637,'v'
	._type	1638,'v'
	._type	1639,'x',1637,1
	._type	1639,'m','',0,1638
	._var	'ClearDemand','F',1639
	._type	1640,'v'
	._type	1641,'x',3,1
	._type	1641,'m','',0,1640
	._var	'R_W_Data','F',1641
	._type	1642,'O',3
	._type	1643,'x',3,4
	._type	1643,'m','',0,18
	._type	1643,'m','',0,1642
	._type	1643,'m','',0,18
	._type	1643,'m','',0,3
	._var	'ReadLC256','F',1643
	._type	1644,'O',3
	._type	1645,'x',3,4
	._type	1645,'m','',0,18
	._type	1645,'m','',0,1644
	._type	1645,'m','',0,18
	._type	1645,'m','',0,3
	._var	'WriteLC256','F',1645
	._type	1646,'x',3,3
	._type	1646,'m','',0,3
	._type	1646,'m','',0,3
	._type	1646,'m','',0,3
	._var	'GetRecordAddr','F',1646
	._type	1647,'v'
	._type	1648,'x',1647,1
	._type	1648,'m','',0,18
	._var	'Delay','F',1648
	._type	1649,'x',3,2
	._type	1649,'m','',0,3
	._type	1649,'m','',0,3
	._var	'CalDay','F',1649
	._type	1650,'O',3
	._type	1651,'O',3
	._type	1652,'x',11,2
	._type	1652,'m','',0,1650
	._type	1652,'m','',0,1651
	._var	'ComTime','F',1652
	._type	1653,'x',3,2
	._type	1653,'m','',0,3
	._type	1653,'m','',0,3
	._var	'ClearDemandCommAndKey','F',1653
	._type	1654,'v'
	._type	1655,'x',1654,2
	._type	1655,'m','',0,3
	._type	1655,'m','',0,3
	._var	'Clear_PasswordErr','F',1655
	._type	1656,'v'
	._type	1657,'v'
	._type	1658,'x',1656,1
	._type	1658,'m','',0,1657
	._var	'CheckProgramKeyState','F',1658
	._type	1659,'v'
	._type	1660,'v'
	._type	1661,'x',1659,1
	._type	1661,'m','',0,1660
	._var	'IC_Set_Program','F',1661
	._type	1662,'O',3
	._type	1663,'O',3
	._type	1664,'x',16,2
	._type	1664,'m','',0,1662
	._type	1664,'m','',0,1663
	._var	'FreezeEvent_Energy','F',1664
	._type	1665,'v'
	._type	1666,'x',16,1
	._type	1666,'m','',0,1665
	._var	'Read_SystemTime_YMDH','F',1666
	._type	1667,'v'
	._type	1668,'x',16,1
	._type	1668,'m','',0,1667
	._var	'Read_SystemTime_HMS','F',1668
	._type	1669,'v'
	._type	1670,'x',16,1
	._type	1670,'m','',0,1669
	._var	'Set_SystemTime_YMDH','F',1670
	._type	1671,'v'
	._type	1672,'x',16,1
	._type	1672,'m','',0,1671
	._var	'Set_SystemTime_HMS','F',1672
	._type	1673,'v'
	._type	1674,'x',16,1
	._type	1674,'m','',0,1673
	._var	'Set_DemandPeriod','F',1674
	._type	1675,'v'
	._type	1676,'x',16,1
	._type	1676,'m','',0,1675
	._var	'Set_DemandSkipPeriod','F',1676
	._type	1677,'v'
	._type	1678,'x',16,1
	._type	1678,'m','',0,1677
	._var	'Set_Activem_Erengy_Mode','F',1678
	._type	1679,'v'
	._type	1680,'x',16,1
	._type	1680,'m','',0,1679
	._var	'Set_REActivem_Erengy_1_Mode','F',1680
	._type	1681,'v'
	._type	1682,'x',16,1
	._type	1682,'m','',0,1681
	._var	'Set_REActivem_Erengy_2_Mode','F',1682
	._type	1683,'v'
	._type	1684,'x',16,1
	._type	1684,'m','',0,1683
	._var	'Set_ActivePulseConst','F',1684
	._type	1685,'v'
	._type	1686,'x',16,1
	._type	1686,'m','',0,1685
	._var	'Set_Erengypoint','F',1686
	._type	1687,'v'
	._type	1688,'x',16,1
	._type	1688,'m','',0,1687
	._var	'Set_BILL_Day','F',1688
	._type	1689,'v'
	._type	1690,'x',16,1
	._type	1690,'m','',0,1689
	._var	'Set_SlotParemeter','F',1690
	._type	1691,'v'
	._type	1692,'x',16,1
	._type	1692,'m','',0,1691
	._var	'Set_YearSlot','F',1692
	._type	1693,'v'
	._type	1694,'x',16,1
	._type	1694,'m','',0,1693
	._var	'Set_ProgWeek','F',1694
	._type	1695,'v'
	._type	1696,'x',16,1
	._type	1696,'m','',0,1695
	._var	'Set_Holiday','F',1696
	._type	1697,'v'
	._type	1698,'x',16,1
	._type	1698,'m','',0,1697
	._var	'Set_DailySlot','F',1698
	._type	1699,'v'
	._type	1700,'x',16,1
	._type	1700,'m','',0,1699
	._var	'Set_LoadRecoedBeginTime','F',1700
	._type	1701,'v'
	._type	1702,'x',16,1
	._type	1702,'m','',0,1701
	._var	'Set_LoadRecoedPeriod','F',1702
	._type	1703,'v'
	._type	1704,'x',16,1
	._type	1704,'m','',0,1703
	._var	'Set_MeterMode','F',1704
	._type	1705,'v'
	._type	1706,'x',16,1
	._type	1706,'m','',0,1705
	._var	'Set_Meterlocktimes','F',1706
	._type	1707,'v'
	._type	1708,'x',16,1
	._type	1708,'m','',0,1707
	._var	'Set_OutputModel','F',1708
	._type	1709,'v'
	._type	1710,'x',16,1
	._type	1710,'m','',0,1709
	._var	'Exit_WorkRoomState','F',1710
	._type	1711,'v'
	._type	1712,'x',16,1
	._type	1712,'m','',0,1711
	._var	'Read_primary_energy','F',1712
	._type	1713,'v'
	._type	1714,'x',16,1
	._type	1714,'m','',0,1713
	._var	'Set_primary_energy','F',1714
	._type	1715,'v'
	._type	1716,'x',16,1
	._type	1716,'m','',0,1715
	._var	'Read_WorkRoomState','F',1716
	._type	1717,'v'
	._type	1718,'x',16,1
	._type	1718,'m','',0,1717
	._var	'Read_Freeze_Bit_0_data','F',1718
	._type	1719,'v'
	._type	1720,'x',16,1
	._type	1720,'m','',0,1719
	._var	'Read_Freeze_Bit_1_data','F',1720
	._type	1721,'v'
	._type	1722,'x',16,1
	._type	1722,'m','',0,1721
	._var	'Read_Freeze_Bit_2_data','F',1722
	._type	1723,'v'
	._type	1724,'x',16,1
	._type	1724,'m','',0,1723
	._var	'Read_Freeze_Bit_3_data','F',1724
	._type	1725,'v'
	._type	1726,'x',16,1
	._type	1726,'m','',0,1725
	._var	'Read_Freeze_Bit_4_data','F',1726
	._type	1727,'v'
	._type	1728,'x',16,1
	._type	1728,'m','',0,1727
	._var	'Read_Freeze_Bit_5_data','F',1728
	._type	1729,'v'
	._type	1730,'x',16,1
	._type	1730,'m','',0,1729
	._var	'Read_Freeze_Bit_6_data','F',1730
	._type	1731,'v'
	._type	1732,'x',16,1
	._type	1732,'m','',0,1731
	._var	'Read_Freeze_Bit_7_data','F',1732
	._type	1733,'v'
	._type	1734,'x',16,1
	._type	1734,'m','',0,1733
	._var	'Read_Freeze_Block_data','F',1734
	._type	1735,'v'
	._type	1736,'x',16,1
	._type	1736,'m','',0,1735
	._var	'Read_Meter_lock_times','F',1736
	._type	1737,'x',16,1
	._type	1737,'m','trans_format',0,3
	._var	'Check_Parameter_Len_IS_ok','F',1737
	._type	1738,'v'
	._type	1739,'x',16,1
	._type	1739,'m','',0,1738
	._var	'Pre_No_use_leaf_data','F',1739
	._type	1740,'v'
	._type	1741,'x',16,1
	._type	1741,'m','',0,1740
	._var	'Set_Display_Number','F',1741
	._type	1742,'v'
	._type	1743,'x',16,1
	._type	1743,'m','',0,1742
	._var	'Set_Commrate','F',1743
	._type	1744,'v'
	._type	1745,'x',16,1
	._type	1745,'m','',0,1744
	._var	'Read_Freeze_Date','F',1745
	._type	1746,'v'
	._type	1747,'x',16,1
	._type	1747,'m','',0,1746
	._var	'Set_CycleDisplayTime','F',1747
	._type	1748,'x',16,0
	._var	'Read_Far_IR_Commate','F',1748
	._type	1749,'v'
	._type	1750,'x',16,1
	._type	1750,'m','',0,1749
	._var	'Set_CriticalVoltage','F',1750
	._type	1751,'v'
	._type	1752,'x',16,1
	._type	1752,'m','',0,1751
	._var	'Set_CommAddr','F',1752
	._type	1753,'v'
	._type	1754,'x',16,1
	._type	1754,'m','',0,1753
	._var	'Set_Show_USER_Code','F',1754
	._type	1755,'v'
	._type	1756,'x',16,1
	._type	1756,'m','',0,1755
	._var	'Read_Sign_Instance_Variable','F',1756
	._type	1757,'v'
	._type	1758,'x',16,1
	._type	1758,'m','',0,1757
	._var	'Read_Meter_Temperature','F',1758
	._type	1759,'v'
	._type	1760,'x',16,1
	._type	1760,'m','',0,1759
	._var	'Read_YearSlot_Table','F',1760
	._type	1761,'v'
	._type	1762,'x',16,1
	._type	1762,'m','',0,1761
	._var	'Read_DailySlot_Table','F',1762
	._type	1763,'v'
	._type	1764,'x',16,1
	._type	1764,'m','',0,1763
	._var	'Comm_Initialize_FLASH','F',1764
	._type	1765,'v'
	._type	1766,'x',16,1
	._type	1766,'m','',0,1765
	._var	'Read_Last_loss_voltage_start_time','F',1766
	._type	1767,'v'
	._type	1768,'x',16,1
	._type	1768,'m','',0,1767
	._var	'Read_Last_loss_voltage_end_time','F',1768
	._type	1769,'v'
	._type	1770,'x',16,1
	._type	1770,'m','',0,1769
	._var	'Set_Freeze_Period_Begin_time','F',1770
	._type	1771,'v'
	._type	1772,'x',16,1
	._type	1772,'m','',0,1771
	._var	'Set_Freeze_Period','F',1772
	._type	1773,'v'
	._type	1774,'x',16,1
	._type	1774,'m','',0,1773
	._var	'Set_TriffSwitchDate','F',1774
	._type	1775,'v'
	._type	1776,'x',16,1
	._type	1776,'m','',0,1775
	._var	'Set_Cycle_Key_Display','F',1776
	._type	1777,'v'
	._type	1778,'x',16,1
	._type	1778,'m','',0,1777
	._var	'Read_Meter_FILEDATE_VI','F',1778
	._type	1779,'O',3
	._var	'CommBP','E',1779
	._type	1780,'O',1571
	._var	'CurrPC','E',1780
	._type	1781,'Z',-1,3
	._var	'WriteDateBuff','E',1781
	._type	1782,'v'
	._type	1783,'x',16,1
	._type	1783,'m','',0,1782
	._var	'Set_ShowNoKeyRetTime','F',1783
	._type	1784,'O',3
	._type	1785,'x',3,1
	._type	1785,'m','',0,1784
	._var	'CheckPasswordRight','F',1785
	._type	1786,'v'
	._type	1787,'x',1786,1
	._type	1787,'m','',0,3
	._var	'CheckPasswoerErr','F',1787
	._type	1788,'v'
	._type	1789,'x',1788,1
	._type	1789,'m','',0,3
	._var	'AppointTrasfPortBuff','F',1789
	._type	1790,'O',3
	._type	1791,'x',18,2
	._type	1791,'m','ptr',0,1790
	._type	1791,'m','len',0,3
	._var	'Crc16l','F',1791
	._type	1792,'v'
	._type	1793,'x',1792,2
	._type	1793,'m','Which',0,3
	._type	1793,'m','flag',0,3
	._var	'Set_which_Responsion_Flag','F',1793
	._type	1794,'v'
	._type	1795,'x',16,1
	._type	1795,'m','',0,1794
	._var	'Set_JFPG_Triff','F',1795
	._type	1796,'v'
	._type	1797,'x',1796,1
	._type	1797,'m','rom_addr',0,18
	._var	'Set_Meter_para_Deal','F',1797
	._type	1798,'v'
	._type	1799,'x',16,1
	._type	1799,'m','',0,1798
	._var	'Read_Display_Number','F',1799
	._type	1800,'v'
	._type	1801,'x',16,1
	._type	1801,'m','',0,1800
	._var	'Read_LostVoltEnergy','F',1801
	._type	1802,'v'
	._type	1803,'x',16,1
	._type	1803,'m','',0,1802
	._var	'Read_LostVolt_AllEnergy','F',1803
	._type	1804,'v'
	._type	1805,'v'
	._type	1806,'x',1804,1
	._type	1806,'m','',0,1805
	._var	'RTC_Init','F',1806
	._type	1807,'v'
	._type	1808,'v'
	._type	1809,'x',1807,1
	._type	1809,'m','',0,1808
	._var	'PowerOn_FullScreen_TimeDetection','F',1809
	._type	1810,'v'
	._type	1811,'x',16,1
	._type	1811,'m','',0,1810
	._var	'ReadClockBatteryVoltage','F',1811
	._type	1812,'v'
	._type	1813,'x',16,1
	._type	1813,'m','',0,1812
	._var	'ReadDisplayBatteryVoltage','F',1813
	._type	1814,'v'
	._type	1815,'x',16,1
	._type	1815,'m','',0,1814
	._var	'ReadEventReportInfo','F',1815
	._type	1816,'v'
	._type	1817,'x',16,1
	._type	1817,'m','',0,1816
	._var	'GetEventReportMode','F',1817
	._type	1818,'v'
	._type	1819,'x',16,1
	._type	1819,'m','',0,1818
	._var	'SetEventReportMode','F',1819
	._type	1820,'v'
	._type	1821,'x',16,1
	._type	1821,'m','',0,1820
	._var	'SetPowerOnFullScreenTime','F',1821
	._type	1822,'v'
	._type	1823,'x',16,1
	._type	1823,'m','',0,1822
	._var	'Set_SystemTime_YMDHHMS','F',1823
	._type	1824,'v'
	._type	1825,'x',16,1
	._type	1825,'m','',0,1824
	._var	'GetMeterSoftIdNumber','F',1825
	._type	1826,'v'
	._type	1827,'x',16,1
	._type	1827,'m','',0,1826
	._var	'SetMeterSoftIdNumber','F',1827
	._type	1828,'v'
	._type	1829,'x',16,1
	._type	1829,'m','',0,1828
	._var	'GetNowMonthComActiveEnergy','F',1829
	._type	1830,'v'
	._type	1831,'x',16,1
	._type	1831,'m','',0,1830
	._var	'GetLastMonthComActiveEnergy','F',1831
	._type	1832,'v'
	._type	1833,'x',16,1
	._type	1833,'m','',0,1832
	._var	'Set_Freeze_Day','F',1833
	._type	1834,'v'
	._type	1835,'x',16,1
	._type	1835,'m','',0,1834
	._var	'ReadEnergy01Wh','F',1835
	._type	1836,'v'
	._type	1837,'x',16,1
	._type	1837,'m','',0,1836
	._var	'ResetEventReportInfo','F',1837
	._type	1838,'v'
	._type	1841,'g','Switch_err',0,1,3
	._type	1842,'g','ESAM_err',0,1,3
	._type	1843,'g','Eeprom_init_err',0,1,3
	._type	1844,'g','Clock_Battery_Volt_low',0,1,3
	._type	1845,'g','Code_err',0,1,3
	._type	1846,'g','Memorizer_err',0,1,3
	._type	1847,'g','',0,1,3
	._type	1848,'g','Clock_err',0,1,3
	._type	1849,'g','LowPower_Battery_Volt_low',0,1,3
	._type	1850,'g','Overdraft',0,1,3
	._type	1851,'g','Open_Meter_Cover',0,1,3
	._type	1852,'g','Open_Rail_Cover',0,1,3
	._type	1853,'g','ConstantMagnet_event',0,1,3
	._type	1854,'g','PowerAbnormal_event',0,1,3
	._type	1855,'g','Switch_off',0,1,3
	._type	1856,'g','Switch_on',0,1,3
	._type	1857,'g','LostVolt_A',0,1,3
	._type	1858,'g','LowVolt_A',0,1,3
	._type	1859,'g','OverVolt_A',0,1,3
	._type	1860,'g','LossCurr_A',0,1,3
	._type	1861,'g','OverCurr_A',0,1,3
	._type	1862,'g','UpLoad_A',0,1,3
	._type	1863,'g','PowerReserve_A',0,1,3
	._type	1864,'g','BreakPhase_A',0,1,3
	._type	1865,'g','BreakCurr_A',0,1,3
	._type	1866,'g','',0,1,3
	._type	1867,'g','',0,1,3
	._type	1868,'g','',0,1,3
	._type	1869,'g','',0,1,3
	._type	1870,'g','',0,1,3
	._type	1871,'g','',0,1,3
	._type	1872,'g','',0,1,3
	._type	1873,'g','LostVolt_B',0,1,3
	._type	1874,'g','LowVolt_B',0,1,3
	._type	1875,'g','OverVolt_B',0,1,3
	._type	1876,'g','LossCurr_B',0,1,3
	._type	1877,'g','OverCurr_B',0,1,3
	._type	1878,'g','UpLoad_B',0,1,3
	._type	1879,'g','PowerReserve_B',0,1,3
	._type	1880,'g','BreakPhase_B',0,1,3
	._type	1881,'g','BreakCurr_B',0,1,3
	._type	1882,'g','',0,1,3
	._type	1883,'g','',0,1,3
	._type	1884,'g','',0,1,3
	._type	1885,'g','',0,1,3
	._type	1886,'g','',0,1,3
	._type	1887,'g','',0,1,3
	._type	1888,'g','',0,1,3
	._type	1889,'g','LostVolt_C',0,1,3
	._type	1890,'g','LowVolt_C',0,1,3
	._type	1891,'g','OverVolt_C',0,1,3
	._type	1892,'g','LossCurr_C',0,1,3
	._type	1893,'g','OverCurr_C',0,1,3
	._type	1894,'g','UpLoad_C',0,1,3
	._type	1895,'g','PowerReserve_C',0,1,3
	._type	1896,'g','BreakPhase_C',0,1,3
	._type	1897,'g','BreakCurr_C',0,1,3
	._type	1898,'g','',0,1,3
	._type	1899,'g','',0,1,3
	._type	1900,'g','',0,1,3
	._type	1901,'g','',0,1,3
	._type	1902,'g','',0,1,3
	._type	1903,'g','',0,1,3
	._type	1904,'g','',0,1,3
	._type	1905,'g','VoltReverse',0,1,3
	._type	1906,'g','CurrReverse',0,1,3
	._type	1907,'g','VoltImbalance',0,1,3
	._type	1908,'g','CurrImbalance',0,1,3
	._type	1909,'g','auxiliaryPower_event',0,1,3
	._type	1910,'g','PowerDown',0,1,3
	._type	1911,'g','OverDemand',0,1,3
	._type	1912,'g','Factor_Low',0,1,3
	._type	1913,'g','CurrCriticalImbalance',0,1,3
	._type	1914,'g','TotalPowerReverse',0,1,3
	._type	1915,'g','AllLostVoltage',0,1,3
	._type	1916,'g','',0,1,3
	._type	1917,'g','',0,1,3
	._type	1918,'g','',0,1,3
	._type	1919,'g','',0,1,3
	._type	1920,'g','',0,1,3
	._type	1921,'g','Program_event',0,1,3
	._type	1922,'g','Meter_clear',0,1,3
	._type	1923,'g','Demand_clear',0,1,3
	._type	1924,'g','Event_clear',0,1,3
	._type	1925,'g','AdjustTime_event',0,1,3
	._type	1926,'g','ProgDailySlot',0,1,3
	._type	1927,'g','ProgYearSlot',0,1,3
	._type	1928,'g','ProgWeek',0,1,3
	._type	1929,'g','ProgHoliday',0,1,3
	._type	1930,'g','ProgAEMode',0,1,3
	._type	1931,'g','ProgNEMode1',0,1,3
	._type	1932,'g','ProgNEMode2',0,1,3
	._type	1933,'g','ProgBillDay',0,1,3
	._type	1934,'g','ProgTriffPrice',0,1,3
	._type	1935,'g','ProgStepPrice',0,1,3
	._type	1936,'g','PSWUpdate',0,1,3
	._type	1840,'S','',12
	._type	1840,'m','Switch_err',1841,0
	._type	1840,'m','ESAM_err',1842,1
	._type	1840,'m','Eeprom_init_err',1843,2
	._type	1840,'m','Clock_Battery_Volt_low',1844,3
	._type	1840,'m','Code_err',1845,4
	._type	1840,'m','Memorizer_err',1846,5
	._type	1840,'m','',1847,6
	._type	1840,'m','Clock_err',1848,7
	._type	1840,'m','LowPower_Battery_Volt_low',1849,8
	._type	1840,'m','Overdraft',1850,9
	._type	1840,'m','Open_Meter_Cover',1851,10
	._type	1840,'m','Open_Rail_Cover',1852,11
	._type	1840,'m','ConstantMagnet_event',1853,12
	._type	1840,'m','PowerAbnormal_event',1854,13
	._type	1840,'m','Switch_off',1855,14
	._type	1840,'m','Switch_on',1856,15
	._type	1840,'m','LostVolt_A',1857,16
	._type	1840,'m','LowVolt_A',1858,17
	._type	1840,'m','OverVolt_A',1859,18
	._type	1840,'m','LossCurr_A',1860,19
	._type	1840,'m','OverCurr_A',1861,20
	._type	1840,'m','UpLoad_A',1862,21
	._type	1840,'m','PowerReserve_A',1863,22
	._type	1840,'m','BreakPhase_A',1864,23
	._type	1840,'m','BreakCurr_A',1865,24
	._type	1840,'m','',1866,25
	._type	1840,'m','',1867,26
	._type	1840,'m','',1868,27
	._type	1840,'m','',1869,28
	._type	1840,'m','',1870,29
	._type	1840,'m','',1871,30
	._type	1840,'m','',1872,31
	._type	1840,'m','LostVolt_B',1873,32
	._type	1840,'m','LowVolt_B',1874,33
	._type	1840,'m','OverVolt_B',1875,34
	._type	1840,'m','LossCurr_B',1876,35
	._type	1840,'m','OverCurr_B',1877,36
	._type	1840,'m','UpLoad_B',1878,37
	._type	1840,'m','PowerReserve_B',1879,38
	._type	1840,'m','BreakPhase_B',1880,39
	._type	1840,'m','BreakCurr_B',1881,40
	._type	1840,'m','',1882,41
	._type	1840,'m','',1883,42
	._type	1840,'m','',1884,43
	._type	1840,'m','',1885,44
	._type	1840,'m','',1886,45
	._type	1840,'m','',1887,46
	._type	1840,'m','',1888,47
	._type	1840,'m','LostVolt_C',1889,48
	._type	1840,'m','LowVolt_C',1890,49
	._type	1840,'m','OverVolt_C',1891,50
	._type	1840,'m','LossCurr_C',1892,51
	._type	1840,'m','OverCurr_C',1893,52
	._type	1840,'m','UpLoad_C',1894,53
	._type	1840,'m','PowerReserve_C',1895,54
	._type	1840,'m','BreakPhase_C',1896,55
	._type	1840,'m','BreakCurr_C',1897,56
	._type	1840,'m','',1898,57
	._type	1840,'m','',1899,58
	._type	1840,'m','',1900,59
	._type	1840,'m','',1901,60
	._type	1840,'m','',1902,61
	._type	1840,'m','',1903,62
	._type	1840,'m','',1904,63
	._type	1840,'m','VoltReverse',1905,64
	._type	1840,'m','CurrReverse',1906,65
	._type	1840,'m','VoltImbalance',1907,66
	._type	1840,'m','CurrImbalance',1908,67
	._type	1840,'m','auxiliaryPower_event',1909,68
	._type	1840,'m','PowerDown',1910,69
	._type	1840,'m','OverDemand',1911,70
	._type	1840,'m','Factor_Low',1912,71
	._type	1840,'m','CurrCriticalImbalance',1913,72
	._type	1840,'m','TotalPowerReverse',1914,73
	._type	1840,'m','AllLostVoltage',1915,74
	._type	1840,'m','',1916,75
	._type	1840,'m','',1917,76
	._type	1840,'m','',1918,77
	._type	1840,'m','',1919,78
	._type	1840,'m','',1920,79
	._type	1840,'m','Program_event',1921,80
	._type	1840,'m','Meter_clear',1922,81
	._type	1840,'m','Demand_clear',1923,82
	._type	1840,'m','Event_clear',1924,83
	._type	1840,'m','AdjustTime_event',1925,84
	._type	1840,'m','ProgDailySlot',1926,85
	._type	1840,'m','ProgYearSlot',1927,86
	._type	1840,'m','ProgWeek',1928,87
	._type	1840,'m','ProgHoliday',1929,88
	._type	1840,'m','ProgAEMode',1930,89
	._type	1840,'m','ProgNEMode1',1931,90
	._type	1840,'m','ProgNEMode2',1932,91
	._type	1840,'m','ProgBillDay',1933,92
	._type	1840,'m','ProgTriffPrice',1934,93
	._type	1840,'m','ProgStepPrice',1935,94
	._type	1840,'m','PSWUpdate',1936,95
	._type	1937,'Z',12,3
	._type	1839,'U','EVENT_REPORT_STATUS',12
	._type	1839,'m','bit',1840,0
	._type	1839,'m','byte',1937,0
	._type	1938,'x',1838,1
	._type	1938,'m','EventReportStatus',0,1839
	._var	'Clear_EventReportStatus_And_Times','F',1938
	._type	1939,'v'
	._type	1940,'x',16,1
	._type	1940,'m','',0,1939
	._var	'Set_ResetReportTime','F',1940
	._type	1941,'O',3
	._type	1942,'x',16,4
	._type	1942,'m','id',0,438
	._type	1942,'m','rBuffer',0,1941
	._type	1942,'m','data_len',0,3
	._type	1942,'m','mode',0,3
	._var	'Set_Read_Block_Para','F',1942
	._type	1943,'S','ITERATE_TREE_FLAG',13
	._type	1943,'m','num',18,0
	._type	1943,'m','last_num',18,2
	._type	1943,'m','flag',268,4
	._type	1943,'m','File_name',18,5
	._type	1943,'m','Set_Prarmeter_flag',3,7
	._type	1943,'m','Show_bit_flag',3,8
	._type	1943,'m','Back_Flame_Serial',18,9
	._type	1943,'m','last_num_save',18,11
	._type	1944,'Z',4,1943
	._var	'Iterate_Tree_Flag','E',1944
	._type	1945,'S','COMM_STAUT',2
	._type	1945,'m','password_level',3,0
	._type	1945,'m','meter_staut',3,1
	._var	'Comm_Staut','E',1945
	._var	'Leaf_num_now','E',18
	._var	'Read_Com_ID','E',438
	._type	1946,'O',3
	._type	1947,'O',3
	._type	1948,'x',16,8
	._type	1948,'m','id',0,438
	._type	1948,'m','P',0,1946
	._type	1948,'m','L',0,18
	._type	1948,'m','formatdata',0,3
	._type	1948,'m','format',0,1947
	._type	1948,'m','mode',0,3
	._type	1948,'m','data_len',0,3
	._type	1948,'m','uartx',0,3
	._var	'TransferData_New','F',1948
	._type	1949,'O',3
	._type	1950,'O',3
	._type	1951,'x',3,7
	._type	1951,'m','startaddr',0,1949
	._type	1951,'m','getbuff',0,1950
	._type	1951,'m','math_mode',0,3
	._type	1951,'m','format',0,3
	._type	1951,'m','Ass_num',0,3
	._type	1951,'m','Ass_addr',0,3
	._type	1951,'m','file_name',0,18
	._var	'math_Add','F',1951
	._type	1952,'O',3
	._type	1953,'O',3
	._type	1954,'x',3,7
	._type	1954,'m','startaddr',0,1952
	._type	1954,'m','getbuff',0,1953
	._type	1954,'m','math_mode',0,3
	._type	1954,'m','format',0,3
	._type	1954,'m','Ass_num',0,3
	._type	1954,'m','Ass_addr',0,3
	._type	1954,'m','file_name',0,18
	._var	'math_Demand','F',1954
	._type	1955,'O',3
	._type	1956,'x',16,2
	._type	1956,'m','buff_t',0,1955
	._type	1956,'m','len',0,3
	._var	'Check_Data_valid','F',1956
	._var	'TRAFF_RATE','E',3
	._type	1959,'Z',6,7
	._type	1960,'Z',6,7
	._type	1958,'S','DEMAND_AREA',52
	._type	1958,'m','energy_l',1959,0
	._type	1958,'m','energy_h',1960,24
	._type	1958,'m','time',7,48
	._type	1961,'Z',60,1958
	._type	1962,'Z',2,3
	._type	1963,'Z',2,3
	._type	1957,'S','DEMAND_DATA_NEW',3125
	._type	1957,'m','Demand_Area',1961,0
	._type	1957,'m','Head',1962,3120
	._type	1957,'m','Rail',1963,3122
	._type	1957,'m','CheckSum',3,3124
	._var	'Demand_Data_New','E',1957
	._type	1965,'Z',4,7
	._type	1964,'S','DEMAND_CONTROL',22
	._type	1964,'m','LastTriff',3,0
	._type	1964,'m','TriffCounter',3,1
	._type	1964,'m','Pointer',3,2
	._type	1964,'m','ClockAdjusted',3,3
	._type	1964,'m','TriffPointer',3,4
	._type	1964,'m','TriffRest',1965,5
	._type	1964,'m','HaveRest',3,21
	._var	'GDemandControl','E',1964
	._type	1966,'Z',9,7
	._type	1967,'Z',8,1966
	._var	'Last_Average_Value','E',1967
	._type	1968,'Z',2,20
	._var	'Current_Demand','E',1968
	._var	'demand_start','E',3
	._var	'demand_init','E',3
	._type	1969,'x',16,1
	._type	1969,'m','mode',0,3
	._var	'ClearDemandArea','F',1969
	._type	1970,'v'
	._type	1971,'v'
	._type	1972,'x',1970,1
	._type	1972,'m','',0,1971
	._var	'Demand_New_Init','F',1972
	._type	1973,'v'
	._type	1974,'v'
	._type	1975,'x',1973,1
	._type	1975,'m','',0,1974
	._var	'Demand_New_Main','F',1975
	._type	1976,'v'
	._type	1977,'v'
	._type	1978,'x',1976,1
	._type	1978,'m','',0,1977
	._var	'Demand_Accumulator','F',1978
	._var	'DemandputoutNum','E',3
	._var	'DemandOutPutflagdata','E',3
	._type	1979,'v'
	._type	1980,'v'
	._type	1981,'x',1979,1
	._type	1981,'m','',0,1980
	._var	'Demand_Triff_Change','F',1981
	._type	1982,'x',3,1
	._type	1982,'m','format',0,3
	._var	'sizeof_format','F',1982
	._type	1983,'O',7
	._type	1984,'x',3,2
	._type	1984,'m','date',0,312
	._type	1984,'m','dest_data',0,1983
	._var	'TimeToLong','F',1984
	._type	1985,'O',3
	._type	1986,'O',3
	._type	1987,'x',3,8
	._type	1987,'m','src_data',0,1985
	._type	1987,'m','dest_data',0,1986
	._type	1987,'m','in_format',0,3
	._type	1987,'m','out_format',0,3
	._type	1987,'m','in_unit',0,3
	._type	1987,'m','out_unit',0,3
	._type	1987,'m','in_exp',0,19
	._type	1987,'m','out_exp',0,19
	._var	'data_change','F',1987
	._type	1988,'O',3
	._type	1989,'x',7,1
	._type	1989,'m','TimePtr',0,1988
	._var	'TimeIndex','F',1989
	._type	1990,'x',3,1
	._type	1990,'m','year',0,3
	._var	'IsLeapYear','F',1990
	._type	1991,'v'
	._type	1992,'O',3
	._type	1993,'x',1991,1
	._type	1993,'m','Addr',0,1992
	._var	'CalWeek','F',1993
	._type	1994,'Z',-1,18
	._var	'Not_Rong_Year','E',1994
	._type	1995,'Z',-1,18
	._var	'Rong_Year','E',1995
	._var	'OLD_TRAFF_RATE','E',3
	._var	'ErrEnergyNumber','E',3
	._var	'WriteEE_Or_F','E',3
	._type	1997,'Z',9,7
	._type	1998,'Z',9,7
	._type	1999,'Z',9,7
	._type	2000,'Z',4,1999
	._type	1996,'S','ENERGY_BACK',216
	._type	1996,'m','Plus_Active',1997,0
	._type	1996,'m','Nega_Active',1998,36
	._type	1996,'m','Quad_Reactive',2000,72
	._var	'energy_back','E',1996
	._type	2001,'Z',8,3
	._var	'ClockBatteryClear_Flag','E',2001
	._var	'ClockBatteryClearCounter','E',3
	._var	'TempClockBatteryClearCounter','E',3
	._var	'Light_Back_Up_Flag','E',3
	._var	'Event_Report_flag','E',3
	._var	'open_cover_reported','E',3
	._type	2002,'Z',16,3
	._var	'RamData_Valid_flag','E',2002
	._var	'Event_Report_Status','E',1839
	._type	2003,'S','EVENT_REPORT_STATUS_TIMES',96
	._type	2003,'m','Switch_err_times',3,0
	._type	2003,'m','ESAM_err_times',3,1
	._type	2003,'m','Eeprom_init_err_times',3,2
	._type	2003,'m','Clock_Battery_Volt_low_times',3,3
	._type	2003,'m','Code_err_times',3,4
	._type	2003,'m','Memorizer_err_times',3,5
	._type	2003,'m','NO_Use0',3,6
	._type	2003,'m','Clock_err_times',3,7
	._type	2003,'m','LowPower_Battery_Volt_low_times',3,8
	._type	2003,'m','Overdraft_times',3,9
	._type	2003,'m','Open_Meter_Cover_times',3,10
	._type	2003,'m','Open_Rail_Cover_times',3,11
	._type	2003,'m','ConstantMagnet_event_times',3,12
	._type	2003,'m','PowerAbnormal_event_times',3,13
	._type	2003,'m','Switch_off_times',3,14
	._type	2003,'m','Switch_on_times',3,15
	._type	2003,'m','LostVolt_A_times',3,16
	._type	2003,'m','LowVolt_A_times',3,17
	._type	2003,'m','OverVolt_A_times',3,18
	._type	2003,'m','LossCurr_A_times',3,19
	._type	2003,'m','OverCurr_A_times',3,20
	._type	2003,'m','UpLoad_A_event_times',3,21
	._type	2003,'m','PowerReserve_A_times',3,22
	._type	2003,'m','BreakPhase_A_event_times',3,23
	._type	2003,'m','BreakCurr_A_times',3,24
	._type	2003,'m','NO_Use1',3,25
	._type	2003,'m','NO_Use2',3,26
	._type	2003,'m','NO_Use3',3,27
	._type	2003,'m','NO_Use4',3,28
	._type	2003,'m','NO_Use5',3,29
	._type	2003,'m','NO_Use6',3,30
	._type	2003,'m','NO_Use7',3,31
	._type	2003,'m','LostVolt_B_times',3,32
	._type	2003,'m','LowVolt_B_times',3,33
	._type	2003,'m','OverVolt_B_times',3,34
	._type	2003,'m','LossCurr_B_times',3,35
	._type	2003,'m','OverCurr_B_times',3,36
	._type	2003,'m','UpLoad_B_event_times',3,37
	._type	2003,'m','PowerReserve_B_times',3,38
	._type	2003,'m','BreakPhase_B_event_times',3,39
	._type	2003,'m','BreakCurr_B_times',3,40
	._type	2003,'m','NO_Use8',3,41
	._type	2003,'m','NO_Use9',3,42
	._type	2003,'m','NO_Use10',3,43
	._type	2003,'m','NO_Use11',3,44
	._type	2003,'m','NO_Use12',3,45
	._type	2003,'m','NO_Use13',3,46
	._type	2003,'m','NO_Use14',3,47
	._type	2003,'m','LostVolt_C_times',3,48
	._type	2003,'m','LowVolt_C_times',3,49
	._type	2003,'m','OverVolt_C_times',3,50
	._type	2003,'m','LossCurr_C_times',3,51
	._type	2003,'m','OverCurr_C_times',3,52
	._type	2003,'m','UpLoad_C_event_times',3,53
	._type	2003,'m','PowerReserve_C_times',3,54
	._type	2003,'m','BreakPhase_C_event_times',3,55
	._type	2003,'m','BreakCurr_C_times',3,56
	._type	2003,'m','NO_Use15',3,57
	._type	2003,'m','NO_Use16',3,58
	._type	2003,'m','NO_Use17',3,59
	._type	2003,'m','NO_Use18',3,60
	._type	2003,'m','NO_Use19',3,61
	._type	2003,'m','NO_Use20',3,62
	._type	2003,'m','NO_Use21',3,63
	._type	2003,'m','VoltReverse_times',3,64
	._type	2003,'m','CurrReverse_event_times',3,65
	._type	2003,'m','VoltImbalance_times',3,66
	._type	2003,'m','CurrImbalance_times',3,67
	._type	2003,'m','auxiliaryPower_event_times',3,68
	._type	2003,'m','PowerDown_event_times',3,69
	._type	2003,'m','OverDemand_times',3,70
	._type	2003,'m','Factor_Low_times',3,71
	._type	2003,'m','CurrCriticalImbalance_times',3,72
	._type	2003,'m','TotalPowerReverse_times',3,73
	._type	2003,'m','AllLostVoltage_times',3,74
	._type	2003,'m','NO_Use22',3,75
	._type	2003,'m','NO_Use23',3,76
	._type	2003,'m','NO_Use24',3,77
	._type	2003,'m','NO_Use25',3,78
	._type	2003,'m','NO_Use26',3,79
	._type	2003,'m','Program_event_times',3,80
	._type	2003,'m','Meter_clear_times',3,81
	._type	2003,'m','Demand_clear_times',3,82
	._type	2003,'m','Event_clear_times',3,83
	._type	2003,'m','AdjustTime_event_times',3,84
	._type	2003,'m','ProgDailySlot_times',3,85
	._type	2003,'m','ProgYearSlot_times',3,86
	._type	2003,'m','ProgWeek_times',3,87
	._type	2003,'m','ProgHoliday_times',3,88
	._type	2003,'m','ProgAEMode_times',3,89
	._type	2003,'m','ProgNEMode1_times',3,90
	._type	2003,'m','ProgNEMode2_times',3,91
	._type	2003,'m','ProgBillDay_times',3,92
	._type	2003,'m','ProgTriffPrice_times',3,93
	._type	2003,'m','ProgStepPrice_times',3,94
	._type	2003,'m','PSWUpdate_times',3,95
	._var	'Event_Report_Status_Times','E',2003
	._type	2006,'g','PowerAbnormal_event',0,1,3
	._type	2007,'g','Meter_clear',0,1,3
	._type	2008,'g','Demand_clear',0,1,3
	._type	2009,'g','Event_clear',0,1,3
	._type	2010,'g','AdjustTime_event',0,1,3
	._type	2011,'g','ProgDailySlot',0,1,3
	._type	2012,'g','ProgYearSlot',0,1,3
	._type	2013,'g','ProgWeek',0,1,3
	._type	2014,'g','ProgHoliday',0,1,3
	._type	2015,'g','ProgAEMode',0,1,3
	._type	2016,'g','ProgNEMode1',0,1,3
	._type	2017,'g','ProgNEMode2',0,1,3
	._type	2018,'g','ProgBillDay',0,1,3
	._type	2019,'g','ProgTriffPrice',0,1,3
	._type	2020,'g','ProgStepPrice',0,1,3
	._type	2021,'g','PSWUpdate',0,1,3
	._type	2022,'g','auxiliaryPower_event',0,1,3
	._type	2023,'g','Eeprom_init_err',0,1,3
	._type	2024,'g','Memorizer_err',0,1,3
	._type	2025,'g','powertreverse',0,1,3
	._type	2026,'g','',0,1,3
	._type	2027,'g','',0,1,3
	._type	2028,'g','',0,1,3
	._type	2029,'g','',0,1,3
	._type	2030,'g','Overdraft',0,1,3
	._type	2031,'g','Switch_on',0,1,3
	._type	2032,'g','ESAM_err',0,1,3
	._type	2033,'g','Switch_err',0,1,3
	._type	2034,'g','Clock_err',0,1,3
	._type	2035,'g','Clock_Battery_Volt_low',0,1,3
	._type	2036,'g','LowPower_Battery_Volt_low',0,1,3
	._type	2037,'g','Switch_off',0,1,3
	._type	2038,'g','',0,1,3
	._type	2039,'g','',0,1,3
	._type	2040,'g','',0,1,3
	._type	2041,'g','',0,1,3
	._type	2042,'g','',0,1,3
	._type	2043,'g','',0,1,3
	._type	2044,'g','',0,1,3
	._type	2045,'g','',0,1,3
	._type	2005,'S','',5
	._type	2005,'m','PowerAbnormal_event',2006,0
	._type	2005,'m','Meter_clear',2007,1
	._type	2005,'m','Demand_clear',2008,2
	._type	2005,'m','Event_clear',2009,3
	._type	2005,'m','AdjustTime_event',2010,4
	._type	2005,'m','ProgDailySlot',2011,5
	._type	2005,'m','ProgYearSlot',2012,6
	._type	2005,'m','ProgWeek',2013,7
	._type	2005,'m','ProgHoliday',2014,8
	._type	2005,'m','ProgAEMode',2015,9
	._type	2005,'m','ProgNEMode1',2016,10
	._type	2005,'m','ProgNEMode2',2017,11
	._type	2005,'m','ProgBillDay',2018,12
	._type	2005,'m','ProgTriffPrice',2019,13
	._type	2005,'m','ProgStepPrice',2020,14
	._type	2005,'m','PSWUpdate',2021,15
	._type	2005,'m','auxiliaryPower_event',2022,16
	._type	2005,'m','Eeprom_init_err',2023,17
	._type	2005,'m','Memorizer_err',2024,18
	._type	2005,'m','powertreverse',2025,19
	._type	2005,'m','',2026,20
	._type	2005,'m','',2027,21
	._type	2005,'m','',2028,22
	._type	2005,'m','',2029,23
	._type	2005,'m','Overdraft',2030,24
	._type	2005,'m','Switch_on',2031,25
	._type	2005,'m','ESAM_err',2032,26
	._type	2005,'m','Switch_err',2033,27
	._type	2005,'m','Clock_err',2034,28
	._type	2005,'m','Clock_Battery_Volt_low',2035,29
	._type	2005,'m','LowPower_Battery_Volt_low',2036,30
	._type	2005,'m','Switch_off',2037,31
	._type	2005,'m','',2038,32
	._type	2005,'m','',2039,33
	._type	2005,'m','',2040,34
	._type	2005,'m','',2041,35
	._type	2005,'m','',2042,36
	._type	2005,'m','',2043,37
	._type	2005,'m','',2044,38
	._type	2005,'m','',2045,39
	._type	2046,'Z',5,3
	._type	2004,'U','EVENTSTATUS_FLAG',5
	._type	2004,'m','bit',2005,0
	._type	2004,'m','byte',2046,0
	._var	'EventStatus_flag','E',2004
	._var	'Event_Report_Status_Backup','E',1839
	._var	'Event_Report_Status_communication','E',1839
	._var	'Event_Report_Iterate_flag','E',3
	._var	'powerup_init_time','E',18
	._type	2047,'v'
	._type	2048,'v'
	._type	2049,'x',2047,1
	._type	2049,'m','',0,2048
	._var	'PowerUpProcese','F',2049
	._type	2050,'v'
	._type	2051,'v'
	._type	2052,'x',2050,1
	._type	2052,'m','',0,2051
	._var	'FeedWatchdog','F',2052
	._type	2053,'v'
	._type	2054,'v'
	._type	2055,'x',2053,1
	._type	2055,'m','',0,2054
	._var	'CheckPowerDown','F',2055
	._type	2056,'v'
	._type	2057,'v'
	._type	2058,'x',2056,1
	._type	2058,'m','',0,2057
	._var	'Measure','F',2058
	._type	2059,'v'
	._type	2060,'v'
	._type	2061,'x',2059,1
	._type	2061,'m','',0,2060
	._var	'OpenCoverCheck','F',2061
	._type	2062,'v'
	._type	2063,'v'
	._type	2064,'x',2062,1
	._type	2064,'m','',0,2063
	._var	'ReadRTC','F',2064
	._type	2065,'v'
	._type	2066,'v'
	._type	2067,'x',2065,1
	._type	2067,'m','',0,2066
	._var	'BackupDataToEeprom','F',2067
	._type	2068,'v'
	._type	2069,'v'
	._type	2070,'x',2068,1
	._type	2070,'m','',0,2069
	._var	'FindTriff','F',2070
	._type	2071,'v'
	._type	2072,'x',3,1
	._type	2072,'m','',0,2071
	._var	'BackUpEnergyToRam','F',2072
	._type	2073,'v'
	._type	2074,'x',3,1
	._type	2074,'m','',0,2073
	._var	'CheckRamTime','F',2074
	._type	2075,'v'
	._type	2076,'v'
	._type	2077,'x',2075,1
	._type	2077,'m','',0,2076
	._var	'Monitor_Program','F',2077
	._type	2078,'v'
	._type	2079,'v'
	._type	2080,'x',2078,1
	._type	2080,'m','',0,2079
	._var	'Light_Back_Led','F',2080
	._type	2081,'v'
	._type	2082,'v'
	._type	2083,'x',2081,1
	._type	2083,'m','',0,2082
	._var	'Close_Back_Light','F',2083
	._type	2084,'v'
	._type	2085,'x',2084,2
	._type	2085,'m','kind',0,3
	._type	2085,'m','type',0,3
	._var	'CheckChange','F',2085
	._type	2086,'v'
	._type	2087,'v'
	._type	2088,'x',2086,1
	._type	2088,'m','',0,2087
	._var	'CheckState','F',2088
	._type	2089,'v'
	._type	2090,'x',2089,2
	._type	2090,'m','',0,3
	._type	2090,'m','',0,3
	._var	'FreezeData_All','F',2090
	._type	2091,'v'
	._type	2092,'x',20,1
	._type	2092,'m','',0,2091
	._var	'Cal_EnergyLimit','F',2092
	._type	2093,'v'
	._type	2094,'v'
	._type	2095,'x',2093,1
	._type	2095,'m','',0,2094
	._var	'Bill_New','F',2095
	._type	2096,'O',3
	._type	2097,'x',3,2
	._type	2097,'m','date',0,2096
	._type	2097,'m','number',0,3
	._var	'Check_Billdate_Validity','F',2097
	._type	2098,'v'
	._type	2099,'v'
	._type	2100,'x',2098,1
	._type	2100,'m','',0,2099
	._var	'RailEnergyValidity','F',2100
	._type	2101,'v'
	._type	2102,'v'
	._type	2103,'x',2101,1
	._type	2103,'m','',0,2102
	._var	'CheckState_New645','F',2103
	._type	2104,'v'
	._type	2105,'v'
	._type	2106,'x',2104,1
	._type	2106,'m','',0,2105
	._var	'PowerUpLossTotalVoltage','F',2106
	._type	2107,'v'
	._type	2108,'v'
	._type	2109,'x',2107,1
	._type	2109,'m','',0,2108
	._var	'Meter_Para_Check','F',2109
	._type	2110,'v'
	._type	2111,'v'
	._type	2112,'x',2110,1
	._type	2112,'m','',0,2111
	._var	'Check_If_Clear_all','F',2112
	._type	2113,'v'
	._type	2114,'v'
	._type	2115,'x',2113,1
	._type	2115,'m','',0,2114
	._var	'ClearClockBatteryTime','F',2115
	._type	2116,'v'
	._type	2117,'x',3,1
	._type	2117,'m','',0,2116
	._var	'IsChangeBattery','F',2117
	._type	2118,'v'
	._type	2119,'x',3,1
	._type	2119,'m','',0,2118
	._var	'LastMouthDayNumber','F',2119
	._type	2120,'v'
	._type	2121,'x',3,1
	._type	2121,'m','',0,2120
	._var	'ISAutoBillDay','F',2121
	._type	2122,'O',3
	._type	2123,'x',18,2
	._type	2123,'m','startaddr',0,2122
	._type	2123,'m','len',0,18
	._var	'CRC','F',2123
	._type	2124,'v'
	._type	2125,'v'
	._type	2126,'x',2124,1
	._type	2126,'m','',0,2125
	._var	'Meter_Staut_Check_And_Count','F',2126
	._type	2127,'v'
	._type	2128,'x',2127,1
	._type	2128,'m','kind',0,3
	._var	'Event_Report_Status_Chk','F',2128
	._type	2129,'v'
	._type	2130,'O',1839
	._type	2131,'x',2129,1
	._type	2131,'m','EventReportStatus',0,2130
	._var	'Get_Event_Report_Status','F',2131
	._type	2132,'v'
	._type	2133,'v'
	._type	2134,'x',2132,1
	._type	2134,'m','',0,2133
	._var	'Clear_ALLEventReportInfo_NO_ACK','F',2134
	._type	2135,'v'
	._type	2136,'x',2135,3
	._type	2136,'m','Nbyte',0,3
	._type	2136,'m','n',0,3
	._type	2136,'m','State',0,3
	._var	'EventReportState_Expand','F',2136
	._type	2137,'v'
	._type	2138,'v'
	._type	2139,'x',2137,1
	._type	2139,'m','',0,2138
	._var	'ESAM_ErrReport','F',2139
	._type	2140,'v'
	._type	2141,'v'
	._type	2142,'x',2140,1
	._type	2142,'m','',0,2141
	._var	'SwitchOn_Report','F',2142
	._type	2143,'v'
	._type	2144,'v'
	._type	2145,'x',2143,1
	._type	2145,'m','',0,2144
	._var	'SwitchOff_Report','F',2145
	._type	2146,'v'
	._type	2147,'v'
	._type	2148,'x',2146,1
	._type	2148,'m','',0,2147
	._var	'Overdraft_Report','F',2148
	._type	2149,'v'
	._type	2150,'v'
	._type	2151,'x',2149,1
	._type	2151,'m','',0,2150
	._var	'IniRam','F',2151
	._type	2152,'O',3
	._type	2153,'O',3
	._type	2154,'x',3,2
	._type	2154,'m','ram1',0,2152
	._type	2154,'m','ram2',0,2153
	._var	'CheckEnergyRom1AndRom2','F',2154
	._type	2155,'O',3
	._type	2156,'O',3
	._type	2157,'x',3,5
	._type	2157,'m','scr_addr',0,2155
	._type	2157,'m','number',0,3
	._type	2157,'m','des_addr',0,2156
	._type	2157,'m','range',0,7
	._type	2157,'m','comflag',0,3
	._var	'checkEnergyRight','F',2157
	._type	2158,'v'
	._type	2159,'v'
	._type	2160,'x',2158,1
	._type	2160,'m','',0,2159
	._var	'Write_TO_Cal_PowerDown_Energy_add','F',2160
	._type	2161,'v'
	._type	2162,'v'
	._type	2163,'x',2161,1
	._type	2163,'m','',0,2162
	._var	'SetDefault','F',2163
	._type	2164,'v'
	._type	2165,'O',3
	._type	2166,'x',2164,2
	._type	2166,'m','',0,3
	._type	2166,'m','',0,2165
	._var	'Retort_New','F',2166
	._type	2167,'O',1462
	._type	2168,'x',3,2
	._type	2168,'m','scr_addr',0,2167
	._type	2168,'m','which',0,3
	._var	'TotalEnergyRight','F',2168
	._type	2169,'O',1462
	._type	2170,'x',3,1
	._type	2170,'m','scr_addr',0,2169
	._var	'ALL_TotalEnergyRight','F',2170
	._type	2171,'v'
	._type	2172,'x',3,1
	._type	2172,'m','',0,2171
	._var	'EnergyAutoRectifyLevel1','F',2172
	._type	2173,'v'
	._type	2174,'x',3,1
	._type	2174,'m','',0,2173
	._var	'EnergyAutoRectifyLevel2','F',2174
	._type	2175,'v'
	._type	2176,'v'
	._type	2177,'x',2175,1
	._type	2177,'m','',0,2176
	._var	'Powerdown_to_ThisMonth','F',2177
	._type	2178,'O',1443
	._type	2179,'x',3,1
	._type	2179,'m','ram',0,2178
	._var	'CheckEnergyPowerEnergy','F',2179
	._type	2180,'v'
	._type	2181,'v'
	._type	2182,'x',2180,1
	._type	2182,'m','',0,2181
	._var	'ReadMeterPara','F',2182
	._type	2183,'x',3,1
	._type	2183,'m','type',0,3
	._var	'IsNormalReset','F',2183
	._type	2184,'v'
	._type	2185,'x',3,1
	._type	2185,'m','',0,2184
	._var	'IsHaveSaveData','F',2185
	._type	2186,'v'
	._type	2187,'v'
	._type	2188,'x',2186,1
	._type	2188,'m','',0,2187
	._var	'Clear_Savedata_flag','F',2188
	._type	2189,'v'
	._type	2190,'x',3,1
	._type	2190,'m','',0,2189
	._var	'ReadEepromEnergy','F',2190
	._type	2191,'O',3
	._type	2192,'x',3,4
	._type	2192,'m','Card_Addr',0,18
	._type	2192,'m','DataPointer',0,2191
	._type	2192,'m','Data_Length',0,18
	._type	2192,'m','DeviceName',0,3
	._var	'ReadBlock','F',2192
	._type	2193,'v'
	._type	2194,'x',3,1
	._type	2194,'m','',0,2193
	._var	'IsNormalResetWrite','F',2194
	._type	2195,'v'
	._type	2196,'v'
	._type	2197,'x',2195,1
	._type	2197,'m','',0,2196
	._var	'Check_New','F',2197
	._type	2198,'v'
	._type	2199,'v'
	._type	2200,'x',2198,1
	._type	2200,'m','',0,2199
	._var	'Para_Process_main','F',2200
	._type	2201,'v'
	._type	2202,'x',3,1
	._type	2202,'m','',0,2201
	._var	'ReadEeprom','F',2202
	._type	2203,'v'
	._type	2204,'v'
	._type	2205,'x',2203,1
	._type	2205,'m','',0,2204
	._var	'Para_Process_run','F',2205
	._type	2206,'Z',5,741
	._var	'Parameter_flag','E',2206
	._var	'para_err_times','E',18
	._type	2207,'O',3
	._type	2208,'O',3
	._type	2209,'x',3,3
	._type	2209,'m','',0,2207
	._type	2209,'m','',0,2208
	._type	2209,'m','',0,3
	._var	'My_Memcmp','F',2209
	._type	2210,'v'
	._type	2211,'O',3
	._type	2212,'x',2210,2
	._type	2212,'m','src_data',0,3
	._type	2212,'m','dest_data',0,2211
	._var	'Byte2BCD','F',2212
	._type	2213,'O',18
	._type	2214,'O',312
	._type	2215,'x',16,3
	._type	2215,'m','rPage',0,2213
	._type	2215,'m','rDate',0,2214
	._type	2215,'m','sort',0,3
	._var	'Find_Data_Record','F',2215
	._type	2216,'O',18
	._type	2217,'x',3,2
	._type	2217,'m','num',0,16
	._type	2217,'m','rPage',0,2216
	._var	'Add_Addr','F',2217
	._type	2218,'O',18
	._type	2219,'x',16,3
	._type	2219,'m','Page',0,18
	._type	2219,'m','rPage',0,2218
	._type	2219,'m','sort',0,3
	._var	'Get_SortAddr','F',2219
	._type	2220,'O',18
	._type	2221,'x',16,3
	._type	2221,'m','Page',0,18
	._type	2221,'m','rPage',0,2220
	._type	2221,'m','sort',0,3
	._var	'Get_SortAddr1','F',2221
	._type	2222,'O',18
	._type	2223,'x',16,2
	._type	2223,'m','Page',0,18
	._type	2223,'m','rPage',0,2222
	._var	'Get_TotalAddr','F',2223
	._type	2224,'O',18
	._type	2225,'x',3,3
	._type	2225,'m','Page',0,18
	._type	2225,'m','rPage',0,2224
	._type	2225,'m','sort',0,3
	._var	'Page_equal','F',2225
	._type	2226,'O',18
	._type	2227,'x',3,2
	._type	2227,'m','nPage',0,18
	._type	2227,'m','rPage',0,2226
	._var	'Cover_Addr_Find','F',2227
	._type	2228,'v'
	._type	2229,'O',3
	._type	2230,'O',3
	._type	2231,'x',2228,3
	._type	2231,'m','to',0,2229
	._type	2231,'m','from',0,2230
	._type	2231,'m','len',0,3
	._var	'My_memcpyRev','F',2231
	._type	2232,'Z',512,3
	._var	'Card_WR_Buff','E',2232
	._type	2234,'Z',4,7
	._type	2235,'Z',4,7
	._type	2236,'Z',4,3
	._type	2237,'Z',4,3
	._type	2238,'Z',4,20
	._type	2239,'Z',4,20
	._type	2233,'S','MINUTE_POWER_DATA',72
	._type	2233,'m','Active_power_sum',2234,0
	._type	2233,'m','Reactive_power_sum',2235,16
	._type	2233,'m','Active_power_num',2236,32
	._type	2233,'m','Reactive_power_num',2237,36
	._type	2233,'m','Active_power_last_data',2238,40
	._type	2233,'m','Reactive_power_last_data',2239,56
	._var	'Minute_Power_Data','G',2233,_Minute_Power_Data
	._type	2240,'Z',3,3
	._var	'Read_Count','G',2240,_Read_Count
	._type	2241,'Z',528,3
	._var	'Fs_Buff','G',2241,_Fs_Buff
	._var	'Dat_Num','G',3,_Dat_Num
	._var	'Set_LoadRecoed_Btime','G',312,_Set_LoadRecoed_Btime
	._type	2242,'Z',6,3
	._var	'First_Sort','G',2242,_First_Sort
	._type	2245,'g','ChipEraseErr',0,1,3
	._type	2246,'g','SectorEraseErr',0,1,3
	._type	2247,'g','WritePageErr',0,1,3
	._type	2248,'g','WriteEnableErr',0,1,3
	._type	2249,'g','WriteDisableErr',0,1,3
	._type	2250,'g','',0,1,3
	._type	2251,'g','',0,1,3
	._type	2252,'g','',0,1,3
	._type	2244,'S','Flash_Err_Status_Un',1
	._type	2244,'m','ChipEraseErr',2245,0
	._type	2244,'m','SectorEraseErr',2246,1
	._type	2244,'m','WritePageErr',2247,2
	._type	2244,'m','WriteEnableErr',2248,3
	._type	2244,'m','WriteDisableErr',2249,4
	._type	2244,'m','',2250,5
	._type	2244,'m','',2251,6
	._type	2244,'m','',2252,7
	._type	2243,'U','FLASH_ERR_STATUS_FLAG',1
	._type	2243,'m','Flash_Err_Status_str',2244,0
	._type	2243,'m','Flash_Err_Status',3,0
	._var	'FlashErrStatus','G',2243,_FlashErrStatus
	._type	2253,'Z',8,3
	._var	'BIT_UNC','G',2253,_BIT_UNC
	._type	2254,'Z',12,18
	._var	'day_num','G',2254,_day_num
	._type	2255,'Z',6,3
	._var	'Clase_Length','G',2255,_Clase_Length
	._type	2256,'Z',12,3
	._var	'DaysOfMonth','E',2256
	._var	'remain_skip_pnt','G',18,_remain_skip_pnt
	._var	'sum_done_pnt','G',18,_sum_done_pnt
	._var	'next_record_block','G',18,_next_record_block
	._var	'fst_not_rd_blk','G',18,_fst_not_rd_blk
	._type	2257,'Z',9,3
	._var	'sort_base_type','G',2257,_sort_base_type
	._var	'last_frm_len','G',3,_last_frm_len
	._var	'sort','S',3,_sort
	._var	'per_len','S',3,_per_len
	._var	'period','S',18,_period
	._type	2258,'Z',16,3
	._var	'lst_pnt_data','G',2258,_lst_pnt_data
	._var	'lst_record_tm','G',312,_lst_record_tm
	._var	'l_lst_record','G',7,_l_lst_record
	._var	'cur_hour_empty','G',3,_cur_hour_empty
	._var	'rd_ld_time','G',7,_rd_ld_time
;#################################
;#################################
;#################################
	._inspect	'F', 't', "BCD2Byte", 'G', 695
	._inspect	'F', 't', "OB_H", 'G', 696
	._inspect	'F', 't', "OH_B", 'G', 697
	._inspect	'F', 't', "CheckTime", 'G', 699
	._inspect	'F', 't', "CheckBCD", 'G', 700
	._inspect	'F', 't', "CheckBCD_NByte", 'G', 702
	._inspect	'F', 't', "ABS", 'G', 703
	._inspect	'F', 't', "ten_seq", 'G', 704
	._inspect	'F', 't', "HexToBcd", 'G', 708
	._inspect	'F', 't', "BcdToHex", 'G', 712
	._inspect	'F', 't', "FormatBCD", 'G', 715
	._inspect	'F', 't', "CompareBytes", 'G', 718
	._inspect	'F', 't', "HexToACK", 'G', 722
	._inspect	'F', 't', "ACKToHex", 'G', 726
	._inspect	'F', 't', "search_unit", 'G', 727
	._inspect	'F', 't', "HexToBcdnByte", 'G', 731
	._inspect	'F', 't', "BcdToHexnByte", 'G', 735
	._inspect	'F', 't', "memcpy", 'G', 739
	._inspect	'F', 't', "format_data", 'G', 740
	._inspect	'V', 't', "pm0_addr", 'G', 741
	._inspect	'V', 't', "pm1_addr", 'G', 741
	._inspect	'V', 't', "cm0_addr", 'G', 741
	._inspect	'V', 't', "cm1_addr", 'G', 741
	._inspect	'V', 't', "csr_addr", 'G', 741
	._inspect	'V', 't', "prcr_addr", 'G', 741
	._inspect	'V', 't', "dbr_addr", 'G', 741
	._inspect	'V', 't', "cm2_addr", 'G', 741
	._inspect	'V', 't', "prg2c_addr", 'G', 741
	._inspect	'V', 't', "pclkr_addr", 'G', 741
	._inspect	'V', 't', "cpsrf_addr", 'G', 741
	._inspect	'V', 't', "rstfr_addr", 'G', 741
	._inspect	'V', 't', "vcr1_addr", 'G', 741
	._inspect	'V', 't', "vcr2_addr", 'G', 741
	._inspect	'V', 't', "cse_addr", 'G', 741
	._inspect	'V', 't', "plc0_addr", 'G', 741
	._inspect	'V', 't', "pm2_addr", 'G', 741
	._inspect	'V', 't', "vwce_addr", 'G', 741
	._inspect	'V', 't', "vd1ls_addr", 'G', 741
	._inspect	'V', 't', "vw0c_addr", 'G', 741
	._inspect	'V', 't', "vw1c_addr", 'G', 741
	._inspect	'V', 't', "vw2c_addr", 'G', 741
	._inspect	'V', 't', "int7ic_addr", 'G', 741
	._inspect	'V', 't', "int6ic_addr", 'G', 741
	._inspect	'V', 't', "int3ic_addr", 'G', 741
	._inspect	'V', 't', "tb5ic_addr", 'G', 741
	._inspect	'V', 't', "tb4ic_addr", 'G', 741
	._inspect	'V', 't', "u1bcnic_addr", 'G', 741
	._inspect	'V', 't', "tb3ic_addr", 'G', 741
	._inspect	'V', 't', "u0bcnic_addr", 'G', 741
	._inspect	'V', 't', "s4ic_addr", 'G', 741
	._inspect	'V', 't', "int5ic_addr", 'G', 741
	._inspect	'V', 't', "s3ic_addr", 'G', 741
	._inspect	'V', 't', "int4ic_addr", 'G', 741
	._inspect	'V', 't', "bcnic_addr", 'G', 741
	._inspect	'V', 't', "dm0ic_addr", 'G', 741
	._inspect	'V', 't', "dm1ic_addr", 'G', 741
	._inspect	'V', 't', "kupic_addr", 'G', 741
	._inspect	'V', 't', "adic_addr", 'G', 741
	._inspect	'V', 't', "s2tic_addr", 'G', 741
	._inspect	'V', 't', "s2ric_addr", 'G', 741
	._inspect	'V', 't', "s0tic_addr", 'G', 741
	._inspect	'V', 't', "s0ric_addr", 'G', 741
	._inspect	'V', 't', "s1tic_addr", 'G', 741
	._inspect	'V', 't', "s1ric_addr", 'G', 741
	._inspect	'V', 't', "ta0ic_addr", 'G', 741
	._inspect	'V', 't', "ta1ic_addr", 'G', 741
	._inspect	'V', 't', "ta2ic_addr", 'G', 741
	._inspect	'V', 't', "ta3ic_addr", 'G', 741
	._inspect	'V', 't', "ta4ic_addr", 'G', 741
	._inspect	'V', 't', "tb0ic_addr", 'G', 741
	._inspect	'V', 't', "tb1ic_addr", 'G', 741
	._inspect	'V', 't', "tb2ic_addr", 'G', 741
	._inspect	'V', 't', "int0ic_addr", 'G', 741
	._inspect	'V', 't', "int1ic_addr", 'G', 741
	._inspect	'V', 't', "int2ic_addr", 'G', 741
	._inspect	'V', 't', "dm2ic_addr", 'G', 741
	._inspect	'V', 't', "dm3ic_addr", 'G', 741
	._inspect	'V', 't', "u5bcnic_addr", 'G', 741
	._inspect	'V', 't', "cec1ic_addr", 'G', 741
	._inspect	'V', 't', "s5tic_addr", 'G', 741
	._inspect	'V', 't', "cec2ic_addr", 'G', 741
	._inspect	'V', 't', "s5ric_addr", 'G', 741
	._inspect	'V', 't', "u6bcnic_addr", 'G', 741
	._inspect	'V', 't', "rtctic_addr", 'G', 741
	._inspect	'V', 't', "s6tic_addr", 'G', 741
	._inspect	'V', 't', "rtccic_addr", 'G', 741
	._inspect	'V', 't', "s6ric_addr", 'G', 741
	._inspect	'V', 't', "u7bcnic_addr", 'G', 741
	._inspect	'V', 't', "pmc0ic_addr", 'G', 741
	._inspect	'V', 't', "s7tic_addr", 'G', 741
	._inspect	'V', 't', "pmc1ic_addr", 'G', 741
	._inspect	'V', 't', "s7ric_addr", 'G', 741
	._inspect	'V', 't', "iicic_addr", 'G', 741
	._inspect	'V', 't', "scldaic_addr", 'G', 741
	._inspect	'V', 't', "sar0_addr", 'G', 751
	._inspect	'V', 't', "dar0_addr", 'G', 751
	._inspect	'V', 't', "tcr0_addr", 'G', 786
	._inspect	'V', 't', "dm0con_addr", 'G', 741
	._inspect	'V', 't', "sar1_addr", 'G', 751
	._inspect	'V', 't', "dar1_addr", 'G', 751
	._inspect	'V', 't', "tcr1_addr", 'G', 786
	._inspect	'V', 't', "dm1con_addr", 'G', 741
	._inspect	'V', 't', "sar2_addr", 'G', 751
	._inspect	'V', 't', "dar2_addr", 'G', 751
	._inspect	'V', 't', "tcr2_addr", 'G', 786
	._inspect	'V', 't', "dm2con_addr", 'G', 741
	._inspect	'V', 't', "sar3_addr", 'G', 751
	._inspect	'V', 't', "dar3_addr", 'G', 751
	._inspect	'V', 't', "tcr3_addr", 'G', 786
	._inspect	'V', 't', "dm3con_addr", 'G', 741
	._inspect	'V', 't', "tb01_addr", 'G', 786
	._inspect	'V', 't', "tb11_addr", 'G', 786
	._inspect	'V', 't', "tb21_addr", 'G', 786
	._inspect	'V', 't', "ppwfs1_addr", 'G', 741
	._inspect	'V', 't', "tbcs0_addr", 'G', 741
	._inspect	'V', 't', "tbcs1_addr", 'G', 741
	._inspect	'V', 't', "tacs0_addr", 'G', 741
	._inspect	'V', 't', "tacs1_addr", 'G', 741
	._inspect	'V', 't', "tacs2_addr", 'G', 741
	._inspect	'V', 't', "pwmfs_addr", 'G', 741
	._inspect	'V', 't', "tapofs_addr", 'G', 741
	._inspect	'V', 't', "taow_addr", 'G', 741
	._inspect	'V', 't', "tprc_addr", 'G', 741
	._inspect	'V', 't', "tb31_addr", 'G', 786
	._inspect	'V', 't', "tb41_addr", 'G', 786
	._inspect	'V', 't', "tb51_addr", 'G', 786
	._inspect	'V', 't', "ppwfs2_addr", 'G', 741
	._inspect	'V', 't', "tbcs2_addr", 'G', 741
	._inspect	'V', 't', "tbcs3_addr", 'G', 741
	._inspect	'V', 't', "pmc0con0_addr", 'G', 741
	._inspect	'V', 't', "pmc0con1_addr", 'G', 741
	._inspect	'V', 't', "pmc0con2_addr", 'G', 741
	._inspect	'V', 't', "pmc0con3_addr", 'G', 741
	._inspect	'V', 't', "pmc0sts_addr", 'G', 741
	._inspect	'V', 't', "pmc0int_addr", 'G', 741
	._inspect	'V', 't', "pmc0cpc_addr", 'G', 741
	._inspect	'V', 't', "pmc0cpd_addr", 'G', 741
	._inspect	'V', 't', "pmc1con0_addr", 'G', 741
	._inspect	'V', 't', "pmc1con1_addr", 'G', 741
	._inspect	'V', 't', "pmc1con2_addr", 'G', 741
	._inspect	'V', 't', "pmc1con3_addr", 'G', 741
	._inspect	'V', 't', "pmc1sts_addr", 'G', 741
	._inspect	'V', 't', "pmc1int_addr", 'G', 741
	._inspect	'V', 't', "ifsr3a_addr", 'G', 741
	._inspect	'V', 't', "ifsr2a_addr", 'G', 741
	._inspect	'V', 't', "ifsr_addr", 'G', 741
	._inspect	'V', 't', "aier_addr", 'G', 741
	._inspect	'V', 't', "aier2_addr", 'G', 741
	._inspect	'V', 't', "rmad0_addr", 'G', 751
	._inspect	'V', 't', "rmad1_addr", 'G', 751
	._inspect	'V', 't', "rmad2_addr", 'G', 751
	._inspect	'V', 't', "rmad3_addr", 'G', 751
	._inspect	'V', 't', "fmr0_addr", 'G', 741
	._inspect	'V', 't', "fmr1_addr", 'G', 741
	._inspect	'V', 't', "fmr2_addr", 'G', 741
	._inspect	'V', 't', "fmr6_addr", 'G', 741
	._inspect	'V', 't', "u0smr4_addr", 'G', 741
	._inspect	'V', 't', "u0smr3_addr", 'G', 741
	._inspect	'V', 't', "u0smr2_addr", 'G', 741
	._inspect	'V', 't', "u0smr_addr", 'G', 741
	._inspect	'V', 't', "u0mr_addr", 'G', 741
	._inspect	'V', 't', "u0brg_addr", 'G', 741
	._inspect	'V', 't', "u0tb_addr", 'G', 786
	._inspect	'V', 't', "u0c0_addr", 'G', 741
	._inspect	'V', 't', "u0c1_addr", 'G', 741
	._inspect	'V', 't', "u0rb_addr", 'G', 786
	._inspect	'V', 't', "ucon_addr", 'G', 741
	._inspect	'V', 't', "u1smr4_addr", 'G', 741
	._inspect	'V', 't', "u1smr3_addr", 'G', 741
	._inspect	'V', 't', "u1smr2_addr", 'G', 741
	._inspect	'V', 't', "u1smr_addr", 'G', 741
	._inspect	'V', 't', "u1mr_addr", 'G', 741
	._inspect	'V', 't', "u1brg_addr", 'G', 741
	._inspect	'V', 't', "u1tb_addr", 'G', 786
	._inspect	'V', 't', "u1c0_addr", 'G', 741
	._inspect	'V', 't', "u1c1_addr", 'G', 741
	._inspect	'V', 't', "u1rb_addr", 'G', 786
	._inspect	'V', 't', "u2smr4_addr", 'G', 741
	._inspect	'V', 't', "u2smr3_addr", 'G', 741
	._inspect	'V', 't', "u2smr2_addr", 'G', 741
	._inspect	'V', 't', "u2smr_addr", 'G', 741
	._inspect	'V', 't', "u2mr_addr", 'G', 741
	._inspect	'V', 't', "u2brg_addr", 'G', 741
	._inspect	'V', 't', "u2tb_addr", 'G', 786
	._inspect	'V', 't', "u2c0_addr", 'G', 741
	._inspect	'V', 't', "u2c1_addr", 'G', 741
	._inspect	'V', 't', "u2rb_addr", 'G', 786
	._inspect	'V', 't', "s3trr_addr", 'G', 741
	._inspect	'V', 't', "s3c_addr", 'G', 741
	._inspect	'V', 't', "s3brg_addr", 'G', 741
	._inspect	'V', 't', "s4trr_addr", 'G', 741
	._inspect	'V', 't', "s4c_addr", 'G', 741
	._inspect	'V', 't', "s4brg_addr", 'G', 741
	._inspect	'V', 't', "s34c2_addr", 'G', 741
	._inspect	'V', 't', "u5smr4_addr", 'G', 741
	._inspect	'V', 't', "u5smr3_addr", 'G', 741
	._inspect	'V', 't', "u5smr2_addr", 'G', 741
	._inspect	'V', 't', "u5smr_addr", 'G', 741
	._inspect	'V', 't', "u5mr_addr", 'G', 741
	._inspect	'V', 't', "u5brg_addr", 'G', 741
	._inspect	'V', 't', "u5tb_addr", 'G', 786
	._inspect	'V', 't', "u5c0_addr", 'G', 741
	._inspect	'V', 't', "u5c1_addr", 'G', 741
	._inspect	'V', 't', "u5rb_addr", 'G', 786
	._inspect	'V', 't', "u6smr4_addr", 'G', 741
	._inspect	'V', 't', "u6smr3_addr", 'G', 741
	._inspect	'V', 't', "u6smr2_addr", 'G', 741
	._inspect	'V', 't', "u6smr_addr", 'G', 741
	._inspect	'V', 't', "u6mr_addr", 'G', 741
	._inspect	'V', 't', "u6brg_addr", 'G', 741
	._inspect	'V', 't', "u6tb_addr", 'G', 786
	._inspect	'V', 't', "u6c0_addr", 'G', 741
	._inspect	'V', 't', "u6c1_addr", 'G', 741
	._inspect	'V', 't', "u6rb_addr", 'G', 786
	._inspect	'V', 't', "u7smr4_addr", 'G', 741
	._inspect	'V', 't', "u7smr3_addr", 'G', 741
	._inspect	'V', 't', "u7smr2_addr", 'G', 741
	._inspect	'V', 't', "u7smr_addr", 'G', 741
	._inspect	'V', 't', "u7mr_addr", 'G', 741
	._inspect	'V', 't', "u7brg_addr", 'G', 741
	._inspect	'V', 't', "u7tb_addr", 'G', 786
	._inspect	'V', 't', "u7c0_addr", 'G', 741
	._inspect	'V', 't', "u7c1_addr", 'G', 741
	._inspect	'V', 't', "u7rb_addr", 'G', 786
	._inspect	'V', 't', "s00_addr", 'G', 741
	._inspect	'V', 't', "s0d0_addr", 'G', 741
	._inspect	'V', 't', "s1d0_addr", 'G', 741
	._inspect	'V', 't', "s20_addr", 'G', 741
	._inspect	'V', 't', "s2d0_addr", 'G', 741
	._inspect	'V', 't', "s3d0_addr", 'G', 741
	._inspect	'V', 't', "s4d0_addr", 'G', 741
	._inspect	'V', 't', "s10_addr", 'G', 741
	._inspect	'V', 't', "s11_addr", 'G', 741
	._inspect	'V', 't', "s0d1_addr", 'G', 741
	._inspect	'V', 't', "s0d2_addr", 'G', 741
	._inspect	'V', 't', "tbsr_addr", 'G', 741
	._inspect	'V', 't', "ta11_addr", 'G', 786
	._inspect	'V', 't', "ta21_addr", 'G', 786
	._inspect	'V', 't', "ta41_addr", 'G', 786
	._inspect	'V', 't', "invc0_addr", 'G', 741
	._inspect	'V', 't', "invc1_addr", 'G', 741
	._inspect	'V', 't', "idb0_addr", 'G', 741
	._inspect	'V', 't', "idb1_addr", 'G', 741
	._inspect	'V', 't', "dtt_addr", 'G', 741
	._inspect	'V', 't', "ictb2_addr", 'G', 741
	._inspect	'V', 't', "pdrf_addr", 'G', 741
	._inspect	'V', 't', "tb3_addr", 'G', 786
	._inspect	'V', 't', "tb4_addr", 'G', 786
	._inspect	'V', 't', "tb5_addr", 'G', 786
	._inspect	'V', 't', "pfcr_addr", 'G', 741
	._inspect	'V', 't', "tb3mr_addr", 'G', 741
	._inspect	'V', 't', "tb4mr_addr", 'G', 741
	._inspect	'V', 't', "tb5mr_addr", 'G', 741
	._inspect	'V', 't', "tabsr_addr", 'G', 741
	._inspect	'V', 't', "onsf_addr", 'G', 741
	._inspect	'V', 't', "trgsr_addr", 'G', 741
	._inspect	'V', 't', "udf_addr", 'G', 741
	._inspect	'V', 't', "ta0_addr", 'G', 786
	._inspect	'V', 't', "ta1_addr", 'G', 786
	._inspect	'V', 't', "ta2_addr", 'G', 786
	._inspect	'V', 't', "ta3_addr", 'G', 786
	._inspect	'V', 't', "ta4_addr", 'G', 786
	._inspect	'V', 't', "tb0_addr", 'G', 786
	._inspect	'V', 't', "tb1_addr", 'G', 786
	._inspect	'V', 't', "tb2_addr", 'G', 786
	._inspect	'V', 't', "ta0mr_addr", 'G', 741
	._inspect	'V', 't', "ta1mr_addr", 'G', 741
	._inspect	'V', 't', "ta2mr_addr", 'G', 741
	._inspect	'V', 't', "ta3mr_addr", 'G', 741
	._inspect	'V', 't', "ta4mr_addr", 'G', 741
	._inspect	'V', 't', "tb0mr_addr", 'G', 741
	._inspect	'V', 't', "tb1mr_addr", 'G', 741
	._inspect	'V', 't', "tb2mr_addr", 'G', 741
	._inspect	'V', 't', "tb2sc_addr", 'G', 741
	._inspect	'V', 't', "rtcsec_addr", 'G', 741
	._inspect	'V', 't', "rtcmin_addr", 'G', 741
	._inspect	'V', 't', "rtchr_addr", 'G', 741
	._inspect	'V', 't', "rtcwk_addr", 'G', 741
	._inspect	'V', 't', "rtccr1_addr", 'G', 741
	._inspect	'V', 't', "rtccr2_addr", 'G', 741
	._inspect	'V', 't', "rtccsr_addr", 'G', 741
	._inspect	'V', 't', "rtccsec_addr", 'G', 741
	._inspect	'V', 't', "rtccmin_addr", 'G', 741
	._inspect	'V', 't', "rtcchr_addr", 'G', 741
	._inspect	'V', 't', "cecc1_addr", 'G', 741
	._inspect	'V', 't', "cecc2_addr", 'G', 741
	._inspect	'V', 't', "cecc3_addr", 'G', 741
	._inspect	'V', 't', "cecc4_addr", 'G', 741
	._inspect	'V', 't', "cecflg_addr", 'G', 741
	._inspect	'V', 't', "cisel_addr", 'G', 741
	._inspect	'V', 't', "cctb1_addr", 'G', 741
	._inspect	'V', 't', "cctb2_addr", 'G', 741
	._inspect	'V', 't', "ccrb1_addr", 'G', 741
	._inspect	'V', 't', "ccrb2_addr", 'G', 741
	._inspect	'V', 't', "cradri1_addr", 'G', 741
	._inspect	'V', 't', "cradri2_addr", 'G', 741
	._inspect	'V', 't', "pur0_addr", 'G', 741
	._inspect	'V', 't', "pur1_addr", 'G', 741
	._inspect	'V', 't', "pur2_addr", 'G', 741
	._inspect	'V', 't', "pcr_addr", 'G', 741
	._inspect	'V', 't', "nmidf_addr", 'G', 741
	._inspect	'V', 't', "pwmcon0_addr", 'G', 741
	._inspect	'V', 't', "pwmpre0_addr", 'G', 741
	._inspect	'V', 't', "pwmreg0_addr", 'G', 741
	._inspect	'V', 't', "pwmpre1_addr", 'G', 741
	._inspect	'V', 't', "pwmreg1_addr", 'G', 741
	._inspect	'V', 't', "pwmcon1_addr", 'G', 741
	._inspect	'V', 't', "cspr_addr", 'G', 741
	._inspect	'V', 't', "wdtr_addr", 'G', 741
	._inspect	'V', 't', "wdts_addr", 'G', 741
	._inspect	'V', 't', "wdc_addr", 'G', 741
	._inspect	'V', 't', "dm2sl_addr", 'G', 741
	._inspect	'V', 't', "dm3sl_addr", 'G', 741
	._inspect	'V', 't', "dm0sl_addr", 'G', 741
	._inspect	'V', 't', "dm1sl_addr", 'G', 741
	._inspect	'V', 't', "ainrst_addr", 'G', 741
	._inspect	'V', 't', "crcsar_addr", 'G', 786
	._inspect	'V', 't', "crcmr_addr", 'G', 741
	._inspect	'V', 't', "crcd_addr", 'G', 786
	._inspect	'V', 't', "crcin_addr", 'G', 741
	._inspect	'V', 't', "ad0_addr", 'G', 786
	._inspect	'V', 't', "ad1_addr", 'G', 786
	._inspect	'V', 't', "ad2_addr", 'G', 786
	._inspect	'V', 't', "ad3_addr", 'G', 786
	._inspect	'V', 't', "ad4_addr", 'G', 786
	._inspect	'V', 't', "ad5_addr", 'G', 786
	._inspect	'V', 't', "ad6_addr", 'G', 786
	._inspect	'V', 't', "ad7_addr", 'G', 786
	._inspect	'V', 't', "adcon2_addr", 'G', 741
	._inspect	'V', 't', "adcon0_addr", 'G', 741
	._inspect	'V', 't', "adcon1_addr", 'G', 741
	._inspect	'V', 't', "da0_addr", 'G', 741
	._inspect	'V', 't', "da1_addr", 'G', 741
	._inspect	'V', 't', "dacon_addr", 'G', 741
	._inspect	'V', 't', "p0_addr", 'G', 741
	._inspect	'V', 't', "p1_addr", 'G', 741
	._inspect	'V', 't', "pd0_addr", 'G', 741
	._inspect	'V', 't', "pd1_addr", 'G', 741
	._inspect	'V', 't', "p2_addr", 'G', 741
	._inspect	'V', 't', "p3_addr", 'G', 741
	._inspect	'V', 't', "pd2_addr", 'G', 741
	._inspect	'V', 't', "pd3_addr", 'G', 741
	._inspect	'V', 't', "p4_addr", 'G', 741
	._inspect	'V', 't', "p5_addr", 'G', 741
	._inspect	'V', 't', "pd4_addr", 'G', 741
	._inspect	'V', 't', "pd5_addr", 'G', 741
	._inspect	'V', 't', "p6_addr", 'G', 741
	._inspect	'V', 't', "p7_addr", 'G', 741
	._inspect	'V', 't', "pd6_addr", 'G', 741
	._inspect	'V', 't', "pd7_addr", 'G', 741
	._inspect	'V', 't', "p8_addr", 'G', 741
	._inspect	'V', 't', "p9_addr", 'G', 741
	._inspect	'V', 't', "pd8_addr", 'G', 741
	._inspect	'V', 't', "pd9_addr", 'G', 741
	._inspect	'V', 't', "p10_addr", 'G', 741
	._inspect	'V', 't', "pd10_addr", 'G', 741
	._inspect	'V', 't', "pmc0hdpmin_addr", 'G', 786
	._inspect	'V', 't', "pmc0hdpmax_addr", 'G', 786
	._inspect	'V', 't', "pmc0d0pmin_addr", 'G', 741
	._inspect	'V', 't', "pmc0d0pmax_addr", 'G', 741
	._inspect	'V', 't', "pmc0d1pmin_addr", 'G', 741
	._inspect	'V', 't', "pmc0d1pmax_addr", 'G', 741
	._inspect	'V', 't', "pmc0tim_addr", 'G', 786
	._inspect	'V', 't', "pmc0bc_addr", 'G', 786
	._inspect	'V', 't', "pmc0dat0_addr", 'G', 741
	._inspect	'V', 't', "pmc0dat1_addr", 'G', 741
	._inspect	'V', 't', "pmc0dat2_addr", 'G', 741
	._inspect	'V', 't', "pmc0dat3_addr", 'G', 741
	._inspect	'V', 't', "pmc0dat4_addr", 'G', 741
	._inspect	'V', 't', "pmc0dat5_addr", 'G', 741
	._inspect	'V', 't', "pmc0rbit_addr", 'G', 741
	._inspect	'V', 't', "pmc1hdpmin_addr", 'G', 786
	._inspect	'V', 't', "pmc1hdpmax_addr", 'G', 786
	._inspect	'V', 't', "pmc1d0pmin_addr", 'G', 741
	._inspect	'V', 't', "pmc1d0pmax_addr", 'G', 741
	._inspect	'V', 't', "pmc1d1pmin_addr", 'G', 741
	._inspect	'V', 't', "pmc1d1pmax_addr", 'G', 741
	._inspect	'V', 't', "pmc1tim_addr", 'G', 786
	._inspect	'V', 't', "pmc1bc_addr", 'G', 786
	._inspect	'V', 't', "TSave_General_Event", 'O', 807
	._inspect	'V', 't', "TSpec_Event", 'O', 811
	._inspect	'V', 't', "TGeneral_Event", 'O', 814
	._inspect	'V', 't', "Clear_Demand_Mode", 'G', 3
	._inspect	'V', 't', "EventEnergyValid_Flag", 'G', 3
	._inspect	'V', 't', "Event_AmpHour", 'G', 816
	._inspect	'V', 't', "EventCriticalVoltage_Flag", 'G', 3
	._inspect	'V', 't', "TempEventData", 'G', 817
	._inspect	'V', 't', "lostvoltenergyall", 'G', 818
	._inspect	'V', 't', "lostvoltenergy", 'G', 819
	._inspect	'F', 't', "EventTimeAdd", 'G', 822
	._inspect	'F', 't', "New2007_Event", 'G', 825
	._inspect	'F', 't', "EventRecordAdjustEnergy", 'G', 828
	._inspect	'F', 't', "EventData_PowerDown_Save", 'G', 831
	._inspect	'F', 't', "EventData_PowerOn_Check", 'G', 833
	._inspect	'F', 't', "EventRecord_Poweron_Check", 'G', 835
	._inspect	'F', 't', "PowerDownEvent_OnCheck", 'G', 838
	._inspect	'F', 't', "ProgrammeEvent", 'G', 839
	._inspect	'F', 't', "ClearMeterRecord", 'G', 840
	._inspect	'F', 't', "VoltStatSetDefault", 'G', 843
	._inspect	'F', 't', "VoltStatInit", 'G', 846
	._inspect	'F', 't', "VoltStatisticCheck", 'G', 849
	._inspect	'F', 't', "OverDemandEvent", 'G', 852
	._inspect	'F', 't', "AdjustTimeRecord", 'G', 853
	._inspect	'F', 't', "ClearDemandRecord", 'G', 854
	._inspect	'F', 't', "ProgWeekRecord", 'G', 855
	._inspect	'F', 't', "ProgAEModeRecord", 'G', 856
	._inspect	'F', 't', "ProgNEMode1Record", 'G', 857
	._inspect	'F', 't', "ProgNEMode2Record", 'G', 858
	._inspect	'F', 't', "ProgBillDayRecord", 'G', 860
	._inspect	'F', 't', "ProgYearSlotRecord", 'G', 861
	._inspect	'F', 't', "ProgDailySlotRecord", 'G', 862
	._inspect	'F', 't', "ClearNewEventRecord", 'G', 863
	._inspect	'F', 't', "PrepVoltStatReadData", 'G', 865
	._inspect	'F', 't', "ResetCpuEvent_OnCheck", 'G', 868
	._inspect	'F', 't', "RunClockErrorRecord", 'G', 871
	._inspect	'F', 't', "PowerUpClockErrorRecord", 'G', 874
	._inspect	'F', 't', "EepromErrorRecord", 'G', 877
	._inspect	'F', 't', "EnergyPassZeroRecord", 'G', 880
	._inspect	'F', 't', "SetPrimaryRecord", 'G', 883
	._inspect	'F', 't', "EepromEventSetDefault", 'G', 886
	._inspect	'F', 't', "EMeterPowerdownRecord", 'G', 889
	._inspect	'F', 't', "ClearEventRecord", 'G', 890
	._inspect	'F', 't', "ProgAEMode_NEMode1_NEMode2_Record", 'G', 891
	._inspect	'F', 't', "OpenBoxCoverEvent_Check", 'G', 894
	._inspect	'F', 't', "EventFlagPowerOnInit", 'G', 897
	._inspect	'F', 't', "ProgrammeEventEnd_Check_Payment", 'G', 900
	._inspect	'F', 't', "ProgrammeEventEnd_Check", 'G', 903
	._inspect	'F', 't', "VoltStatisticFunc", 'G', 906
	._inspect	'F', 't', "AdjustMeterRecord", 'G', 909
	._inspect	'F', 't', "PrepNewFirstEventData", 'G', 910
	._inspect	'F', 't', "Save_EventTimesANDPointer_4byte", 'G', 913
	._inspect	'F', 't', "Prepare_For_EventLastTime", 'G', 916
	._inspect	'F', 't', "Refresh_EventData", 'G', 918
	._inspect	'F', 't', "Refresh_AddTime", 'G', 919
	._inspect	'F', 't', "ClearEventDate_BatteryPowerOn", 'G', 922
	._inspect	'F', 't', "PrepLostVoltEnergyData", 'G', 923
	._inspect	'F', 't', "PowerAbnormalEventCheck", 'G', 926
	._inspect	'F', 't', "ClockBatteryDisplayBattery_Event", 'G', 929
	._inspect	'F', 't', "PdOpenCoverCheckInit", 'G', 931
	._inspect	'F', 't', "PdOpenCoverCheck", 'G', 934
	._inspect	'F', 't', "PdOpenCoverCheckPowerUpDeal", 'G', 937
	._inspect	'F', 't', "ClearEventAll", 'G', 940
	._inspect	'F', 't', "ClearEventCommDeal", 'G', 942
	._inspect	'F', 't', "ClearEventDataPowerOn", 'G', 945
	._inspect	'F', 't', "ClearEvent_EventBegin", 'G', 948
	._inspect	'V', 't', "VoltCheck_N", 'G', 950
	._inspect	'V', 't', "VoltStat", 'G', 958
	._inspect	'V', 't', "Clearevent_ID", 'G', 959
	._inspect	'V', 't', "pdopencovercheckdata", 'G', 961
	._inspect	'V', 't', "eventstatusinfo", 'G', 962
	._inspect	'F', 't', "Save_EventReportTimes", 'G', 964
	._inspect	'V', 't', "Freq", 'G', 965
	._inspect	'V', 't', "Volt", 'G', 966
	._inspect	'V', 't', "Voltc", 'G', 967
	._inspect	'V', 't', "Curr", 'G', 968
	._inspect	'V', 't', "Factor", 'G', 969
	._inspect	'V', 't', "Active_power", 'G', 970
	._inspect	'V', 't', "Reactive_power", 'G', 971
	._inspect	'V', 't', "Active_energy_per_sec", 'G', 7
	._inspect	'V', 't', "Reactive_energy_per_sec", 'G', 7
	._inspect	'V', 't', "Visual_power", 'G', 972
	._inspect	'V', 't', "Reactive_phase", 'G', 973
	._inspect	'V', 't', "Phase_Angle", 'G', 974
	._inspect	'V', 't', "N_Current", 'G', 7
	._inspect	'V', 't', "Meter_States", 'G', 975
	._inspect	'V', 't', "NEW645Meter_States", 'G', 1105
	._inspect	'V', 't', "Meter_Parameter", 'G', 1232
	._inspect	'V', 't', "Event_Power_Net_Flag", 'G', 1370
	._inspect	'V', 't', "Event_Power_Net_Pointer", 'G', 1437
	._inspect	'V', 't', "Event_Meter_Pro_Pointer", 'G', 1438
	._inspect	'V', 't', "Event_Power_Net_Times", 'G', 1439
	._inspect	'V', 't', "Event_Meter_Pro_Times", 'G', 1440
	._inspect	'V', 't', "Event_Power_Net_Timeticks", 'G', 1441
	._inspect	'V', 't', "Powerdown_Save_Data", 'G', 1442
	._inspect	'V', 't', "energy_rail", 'G', 1454
	._inspect	'V', 't', "This_Month_Data", 'G', 1461
	._inspect	'V', 't', "Other_Data", 'G', 1482
	._inspect	'V', 't', "CurrentImbalance_Energy", 'G', 1487
	._inspect	'V', 't', "Co", 'G', 1488
	._inspect	'V', 't', "WriteWhitchEeprom", 'G', 1505
	._inspect	'V', 't', "Cal_PowerDown_Energy_add", 'G', 1443
	._inspect	'V', 't', "TimeChontrolFlag", 'G', 268
	._inspect	'V', 't', "ProgramRunPhaseFlag", 'G', 268
	._inspect	'V', 't', "WriteTimeFlag", 'G', 268
	._inspect	'V', 't', "Event_Time_Flag", 'G', 268
	._inspect	'V', 't', "Alarm_Map_Flag", 'G', 1506
	._inspect	'V', 't', "MainSoftDate", 'G', 311
	._inspect	'V', 't', "MainRamDate1", 'G', 311
	._inspect	'V', 't', "MainRamDate2", 'G', 311
	._inspect	'V', 't', "O1ther_Meter_Parameter", 'G', 1507
	._inspect	'V', 't', "Max_Triff_Current", 'G', 3
	._inspect	'V', 't', "Active_power_Per_Mintue", 'G', 7
	._inspect	'V', 't', "Temperature_Current", 'G', 16
	._inspect	'V', 't', "Show_Powerdown_Cyc_Data", 'G', 1514
	._inspect	'V', 't', "Show_Powerdown_Key_Data", 'G', 1515
	._inspect	'V', 't', "Show_ID_vatiy", 'G', 3
	._inspect	'V', 't', "Show_Powerdown_Net_Flag_Backup", 'G', 1370
	._inspect	'V', 't', "Show_flash_poweron_vatiy", 'G', 3
	._inspect	'V', 't', "show_which_now", 'G', 3
	._inspect	'F', 't', "Check_Max_Imbalance_Rate", 'G', 1518
	._inspect	'V', 't', "LoadRecord", 'G', 484
	._inspect	'V', 't', "SoftDate", 'G', 1519
	._inspect	'V', 't', "FlashEaseTimes", 'G', 7
	._inspect	'V', 't', "user_req_pnt", 'G', 3
	._inspect	'F', 't', "SendByte", 'G', 1522
	._inspect	'F', 't', "WriteBuffer", 'G', 1524
	._inspect	'F', 't', "SwitchPage", 'G', 1526
	._inspect	'F', 't', "ReadBuffer", 'G', 1529
	._inspect	'F', 't', "SaveBuffer", 'G', 1530
	._inspect	'F', 't', "LoadToBuffer", 'G', 1531
	._inspect	'F', 't', "SaveIndex", 'G', 1533
	._inspect	'F', 't', "Continuously_Program", 'G', 1535
	._inspect	'F', 't', "Check_Sector_Have_Erased", 'G', 1536
	._inspect	'F', 't', "FastRead_Data_Bytes", 'G', 1539
	._inspect	'F', 't', "Write_Read_FM24C256", 'G', 1541
	._inspect	'F', 't', "PowerOn_PCF8576", 'G', 1544
	._inspect	'F', 't', "PowerOff_PCF8576", 'G', 1547
	._inspect	'F', 't', "IIC_SOFT_RESET", 'G', 1549
	._inspect	'F', 't', "Check_IIC_State", 'G', 1552
	._inspect	'F', 't', "ClockChipInit", 'G', 1554
	._inspect	'F', 't', "ClockChipRead", 'G', 1557
	._inspect	'F', 't', "ClockChipWrite", 'G', 1560
	._inspect	'F', 't', "ClockChipOpenSec", 'G', 1563
	._inspect	'F', 't', "ClockChipCloseSec", 'G', 1566
	._inspect	'F', 't', "IIC_Delay", 'G', 1568
	._inspect	'V', 't', "CommB", 'G', 1570
	._inspect	'V', 't', "ProgramEventFlag", 'G', 3
	._inspect	'V', 't', "JustMeterDataFlag", 'G', 268
	._inspect	'V', 't', "JustMeterDateFlag", 'G', 311
	._inspect	'V', 't', "JustMeterFlag", 'G', 3
	._inspect	'V', 't', "cx", 'G', 1587
	._inspect	'V', 't', "Readdata_buff", 'G', 1588
	._inspect	'V', 't', "COMM_Curr", 'G', 1589
	._inspect	'V', 't', "COMM_Factor", 'G', 1590
	._inspect	'V', 't', "COMM_Active_power", 'G', 1591
	._inspect	'V', 't', "COMM_Reactive_power", 'G', 1592
	._inspect	'V', 't', "COMM_Visual_power", 'G', 1593
	._inspect	'V', 't', "COMM_Current_Demand", 'G', 1594
	._inspect	'V', 't', "Freeze_Flag_DayHour", 'G', 1595
	._inspect	'V', 't', "Comm_DailyOrYear_Slot", 'G', 3
	._inspect	'V', 't', "Comm_Firrespon_SecDispos_Buff", 'G', 1596
	._inspect	'V', 't', "Comm_Firrespon_SecDispos_Uart", 'G', 1597
	._inspect	'V', 't', "GPRS_Status", 'G', 3
	._inspect	'V', 't', "Voltage_ad_data", 'G', 1598
	._inspect	'V', 't', "Displayfinish_flag", 'G', 3
	._inspect	'V', 't', "FullScreenTime", 'G', 18
	._inspect	'V', 't', "ad_Flag", 'G', 3
	._inspect	'V', 't', "ad_finish_Flag", 'G', 3
	._inspect	'V', 't', "meter_model_ok", 'G', 7
	._inspect	'V', 't', "fix_ad_data", 'G', 18
	._inspect	'V', 't', "comm_plus_energy_01wh", 'G', 1600
	._inspect	'V', 't', "comm_nega_energy_01wh", 'G', 1602
	._inspect	'F', 't', "Init_Comm", 'G', 1604
	._inspect	'F', 't', "Interr_Comm_R", 'G', 1606
	._inspect	'F', 't', "Interr_Comm_W", 'G', 1608
	._inspect	'F', 't', "Communication", 'G', 1610
	._inspect	'F', 't', "FindComCommand", 'G', 1611
	._inspect	'F', 't', "AnswerComCommand", 'G', 1612
	._inspect	'F', 't', "TransferData", 'G', 1615
	._inspect	'F', 't', "GetNowTime", 'G', 1617
	._inspect	'F', 't', "GetTimeCount", 'G', 1618
	._inspect	'F', 't', "F_Ar", 'G', 1619
	._inspect	'F', 't', "ReadData", 'G', 1621
	._inspect	'F', 't', "WriteData", 'G', 1624
	._inspect	'F', 't', "BroadcastJustTime", 'G', 1627
	._inspect	'F', 't', "WriteAddress", 'G', 1630
	._inspect	'F', 't', "WriteBaud", 'G', 1633
	._inspect	'F', 't', "WritePassword", 'G', 1636
	._inspect	'F', 't', "ClearDemand", 'G', 1639
	._inspect	'F', 't', "R_W_Data", 'G', 1641
	._inspect	'F', 't', "ReadLC256", 'G', 1643
	._inspect	'F', 't', "WriteLC256", 'G', 1645
	._inspect	'F', 't', "GetRecordAddr", 'G', 1646
	._inspect	'F', 't', "Delay", 'G', 1648
	._inspect	'F', 't', "CalDay", 'G', 1649
	._inspect	'F', 't', "ComTime", 'G', 1652
	._inspect	'F', 't', "ClearDemandCommAndKey", 'G', 1653
	._inspect	'F', 't', "Clear_PasswordErr", 'G', 1655
	._inspect	'F', 't', "CheckProgramKeyState", 'G', 1658
	._inspect	'F', 't', "IC_Set_Program", 'G', 1661
	._inspect	'F', 't', "FreezeEvent_Energy", 'G', 1664
	._inspect	'F', 't', "Read_SystemTime_YMDH", 'G', 1666
	._inspect	'F', 't', "Read_SystemTime_HMS", 'G', 1668
	._inspect	'F', 't', "Set_SystemTime_YMDH", 'G', 1670
	._inspect	'F', 't', "Set_SystemTime_HMS", 'G', 1672
	._inspect	'F', 't', "Set_DemandPeriod", 'G', 1674
	._inspect	'F', 't', "Set_DemandSkipPeriod", 'G', 1676
	._inspect	'F', 't', "Set_Activem_Erengy_Mode", 'G', 1678
	._inspect	'F', 't', "Set_REActivem_Erengy_1_Mode", 'G', 1680
	._inspect	'F', 't', "Set_REActivem_Erengy_2_Mode", 'G', 1682
	._inspect	'F', 't', "Set_ActivePulseConst", 'G', 1684
	._inspect	'F', 't', "Set_Erengypoint", 'G', 1686
	._inspect	'F', 't', "Set_BILL_Day", 'G', 1688
	._inspect	'F', 't', "Set_SlotParemeter", 'G', 1690
	._inspect	'F', 't', "Set_YearSlot", 'G', 1692
	._inspect	'F', 't', "Set_ProgWeek", 'G', 1694
	._inspect	'F', 't', "Set_Holiday", 'G', 1696
	._inspect	'F', 't', "Set_DailySlot", 'G', 1698
	._inspect	'F', 't', "Set_LoadRecoedBeginTime", 'G', 1700
	._inspect	'F', 't', "Set_LoadRecoedPeriod", 'G', 1702
	._inspect	'F', 't', "Set_MeterMode", 'G', 1704
	._inspect	'F', 't', "Set_Meterlocktimes", 'G', 1706
	._inspect	'F', 't', "Set_OutputModel", 'G', 1708
	._inspect	'F', 't', "Exit_WorkRoomState", 'G', 1710
	._inspect	'F', 't', "Read_primary_energy", 'G', 1712
	._inspect	'F', 't', "Set_primary_energy", 'G', 1714
	._inspect	'F', 't', "Read_WorkRoomState", 'G', 1716
	._inspect	'F', 't', "Read_Freeze_Bit_0_data", 'G', 1718
	._inspect	'F', 't', "Read_Freeze_Bit_1_data", 'G', 1720
	._inspect	'F', 't', "Read_Freeze_Bit_2_data", 'G', 1722
	._inspect	'F', 't', "Read_Freeze_Bit_3_data", 'G', 1724
	._inspect	'F', 't', "Read_Freeze_Bit_4_data", 'G', 1726
	._inspect	'F', 't', "Read_Freeze_Bit_5_data", 'G', 1728
	._inspect	'F', 't', "Read_Freeze_Bit_6_data", 'G', 1730
	._inspect	'F', 't', "Read_Freeze_Bit_7_data", 'G', 1732
	._inspect	'F', 't', "Read_Freeze_Block_data", 'G', 1734
	._inspect	'F', 't', "Read_Meter_lock_times", 'G', 1736
	._inspect	'F', 't', "Check_Parameter_Len_IS_ok", 'G', 1737
	._inspect	'F', 't', "Pre_No_use_leaf_data", 'G', 1739
	._inspect	'F', 't', "Set_Display_Number", 'G', 1741
	._inspect	'F', 't', "Set_Commrate", 'G', 1743
	._inspect	'F', 't', "Read_Freeze_Date", 'G', 1745
	._inspect	'F', 't', "Set_CycleDisplayTime", 'G', 1747
	._inspect	'F', 't', "Read_Far_IR_Commate", 'G', 1748
	._inspect	'F', 't', "Set_CriticalVoltage", 'G', 1750
	._inspect	'F', 't', "Set_CommAddr", 'G', 1752
	._inspect	'F', 't', "Set_Show_USER_Code", 'G', 1754
	._inspect	'F', 't', "Read_Sign_Instance_Variable", 'G', 1756
	._inspect	'F', 't', "Read_Meter_Temperature", 'G', 1758
	._inspect	'F', 't', "Read_YearSlot_Table", 'G', 1760
	._inspect	'F', 't', "Read_DailySlot_Table", 'G', 1762
	._inspect	'F', 't', "Comm_Initialize_FLASH", 'G', 1764
	._inspect	'F', 't', "Read_Last_loss_voltage_start_time", 'G', 1766
	._inspect	'F', 't', "Read_Last_loss_voltage_end_time", 'G', 1768
	._inspect	'F', 't', "Set_Freeze_Period_Begin_time", 'G', 1770
	._inspect	'F', 't', "Set_Freeze_Period", 'G', 1772
	._inspect	'F', 't', "Set_TriffSwitchDate", 'G', 1774
	._inspect	'F', 't', "Set_Cycle_Key_Display", 'G', 1776
	._inspect	'F', 't', "Read_Meter_FILEDATE_VI", 'G', 1778
	._inspect	'V', 't', "CommBP", 'G', 1779
	._inspect	'V', 't', "CurrPC", 'G', 1780
	._inspect	'V', 't', "WriteDateBuff", 'G', 1781
	._inspect	'F', 't', "Set_ShowNoKeyRetTime", 'G', 1783
	._inspect	'F', 't', "CheckPasswordRight", 'G', 1785
	._inspect	'F', 't', "CheckPasswoerErr", 'G', 1787
	._inspect	'F', 't', "AppointTrasfPortBuff", 'G', 1789
	._inspect	'F', 't', "Crc16l", 'G', 1791
	._inspect	'F', 't', "Set_which_Responsion_Flag", 'G', 1793
	._inspect	'F', 't', "Set_JFPG_Triff", 'G', 1795
	._inspect	'F', 't', "Set_Meter_para_Deal", 'G', 1797
	._inspect	'F', 't', "Read_Display_Number", 'G', 1799
	._inspect	'F', 't', "Read_LostVoltEnergy", 'G', 1801
	._inspect	'F', 't', "Read_LostVolt_AllEnergy", 'G', 1803
	._inspect	'F', 't', "RTC_Init", 'G', 1806
	._inspect	'F', 't', "PowerOn_FullScreen_TimeDetection", 'G', 1809
	._inspect	'F', 't', "ReadClockBatteryVoltage", 'G', 1811
	._inspect	'F', 't', "ReadDisplayBatteryVoltage", 'G', 1813
	._inspect	'F', 't', "ReadEventReportInfo", 'G', 1815
	._inspect	'F', 't', "GetEventReportMode", 'G', 1817
	._inspect	'F', 't', "SetEventReportMode", 'G', 1819
	._inspect	'F', 't', "SetPowerOnFullScreenTime", 'G', 1821
	._inspect	'F', 't', "Set_SystemTime_YMDHHMS", 'G', 1823
	._inspect	'F', 't', "GetMeterSoftIdNumber", 'G', 1825
	._inspect	'F', 't', "SetMeterSoftIdNumber", 'G', 1827
	._inspect	'F', 't', "GetNowMonthComActiveEnergy", 'G', 1829
	._inspect	'F', 't', "GetLastMonthComActiveEnergy", 'G', 1831
	._inspect	'F', 't', "Set_Freeze_Day", 'G', 1833
	._inspect	'F', 't', "ReadEnergy01Wh", 'G', 1835
	._inspect	'F', 't', "ResetEventReportInfo", 'G', 1837
	._inspect	'F', 't', "Clear_EventReportStatus_And_Times", 'G', 1938
	._inspect	'F', 't', "Set_ResetReportTime", 'G', 1940
	._inspect	'F', 't', "Set_Read_Block_Para", 'G', 1942
	._inspect	'V', 't', "Iterate_Tree_Flag", 'G', 1944
	._inspect	'V', 't', "Comm_Staut", 'G', 1945
	._inspect	'V', 't', "Leaf_num_now", 'G', 18
	._inspect	'V', 't', "Read_Com_ID", 'G', 438
	._inspect	'F', 't', "TransferData_New", 'G', 1948
	._inspect	'F', 't', "math_Add", 'G', 1951
	._inspect	'F', 't', "math_Demand", 'G', 1954
	._inspect	'F', 't', "Check_Data_valid", 'G', 1956
	._inspect	'V', 't', "TRAFF_RATE", 'G', 3
	._inspect	'V', 't', "Demand_Data_New", 'G', 1957
	._inspect	'V', 't', "GDemandControl", 'G', 1964
	._inspect	'V', 't', "Last_Average_Value", 'G', 1967
	._inspect	'V', 't', "Current_Demand", 'G', 1968
	._inspect	'V', 't', "demand_start", 'G', 3
	._inspect	'V', 't', "demand_init", 'G', 3
	._inspect	'F', 't', "ClearDemandArea", 'G', 1969
	._inspect	'F', 't', "Demand_New_Init", 'G', 1972
	._inspect	'F', 't', "Demand_New_Main", 'G', 1975
	._inspect	'F', 't', "Demand_Accumulator", 'G', 1978
	._inspect	'V', 't', "DemandputoutNum", 'G', 3
	._inspect	'V', 't', "DemandOutPutflagdata", 'G', 3
	._inspect	'F', 't', "Demand_Triff_Change", 'G', 1981
	._inspect	'F', 't', "sizeof_format", 'G', 1982
	._inspect	'F', 't', "TimeToLong", 'G', 1984
	._inspect	'F', 't', "data_change", 'G', 1987
	._inspect	'F', 't', "TimeIndex", 'G', 1989
	._inspect	'F', 't', "IsLeapYear", 'G', 1990
	._inspect	'F', 't', "CalWeek", 'G', 1993
	._inspect	'V', 't', "Not_Rong_Year", 'G', 1994
	._inspect	'V', 't', "Rong_Year", 'G', 1995
	._inspect	'V', 't', "OLD_TRAFF_RATE", 'G', 3
	._inspect	'V', 't', "ErrEnergyNumber", 'G', 3
	._inspect	'V', 't', "WriteEE_Or_F", 'G', 3
	._inspect	'V', 't', "energy_back", 'G', 1996
	._inspect	'V', 't', "ClockBatteryClear_Flag", 'G', 2001
	._inspect	'V', 't', "ClockBatteryClearCounter", 'G', 3
	._inspect	'V', 't', "TempClockBatteryClearCounter", 'G', 3
	._inspect	'V', 't', "Light_Back_Up_Flag", 'G', 3
	._inspect	'V', 't', "Event_Report_flag", 'G', 3
	._inspect	'V', 't', "open_cover_reported", 'G', 3
	._inspect	'V', 't', "RamData_Valid_flag", 'G', 2002
	._inspect	'V', 't', "Event_Report_Status", 'G', 1839
	._inspect	'V', 't', "Event_Report_Status_Times", 'G', 2003
	._inspect	'V', 't', "EventStatus_flag", 'G', 2004
	._inspect	'V', 't', "Event_Report_Status_Backup", 'G', 1839
	._inspect	'V', 't', "Event_Report_Status_communication", 'G', 1839
	._inspect	'V', 't', "Event_Report_Iterate_flag", 'G', 3
	._inspect	'V', 't', "powerup_init_time", 'G', 18
	._inspect	'F', 't', "PowerUpProcese", 'G', 2049
	._inspect	'F', 't', "FeedWatchdog", 'G', 2052
	._inspect	'F', 't', "CheckPowerDown", 'G', 2055
	._inspect	'F', 't', "Measure", 'G', 2058
	._inspect	'F', 't', "OpenCoverCheck", 'G', 2061
	._inspect	'F', 't', "ReadRTC", 'G', 2064
	._inspect	'F', 't', "BackupDataToEeprom", 'G', 2067
	._inspect	'F', 't', "FindTriff", 'G', 2070
	._inspect	'F', 't', "BackUpEnergyToRam", 'G', 2072
	._inspect	'F', 't', "CheckRamTime", 'G', 2074
	._inspect	'F', 't', "Monitor_Program", 'G', 2077
	._inspect	'F', 't', "Light_Back_Led", 'G', 2080
	._inspect	'F', 't', "Close_Back_Light", 'G', 2083
	._inspect	'F', 't', "CheckChange", 'G', 2085
	._inspect	'F', 't', "CheckState", 'G', 2088
	._inspect	'F', 't', "FreezeData_All", 'G', 2090
	._inspect	'F', 't', "Cal_EnergyLimit", 'G', 2092
	._inspect	'F', 't', "Bill_New", 'G', 2095
	._inspect	'F', 't', "Check_Billdate_Validity", 'G', 2097
	._inspect	'F', 't', "RailEnergyValidity", 'G', 2100
	._inspect	'F', 't', "CheckState_New645", 'G', 2103
	._inspect	'F', 't', "PowerUpLossTotalVoltage", 'G', 2106
	._inspect	'F', 't', "Meter_Para_Check", 'G', 2109
	._inspect	'F', 't', "Check_If_Clear_all", 'G', 2112
	._inspect	'F', 't', "ClearClockBatteryTime", 'G', 2115
	._inspect	'F', 't', "IsChangeBattery", 'G', 2117
	._inspect	'F', 't', "LastMouthDayNumber", 'G', 2119
	._inspect	'F', 't', "ISAutoBillDay", 'G', 2121
	._inspect	'F', 't', "CRC", 'G', 2123
	._inspect	'F', 't', "Meter_Staut_Check_And_Count", 'G', 2126
	._inspect	'F', 't', "Event_Report_Status_Chk", 'G', 2128
	._inspect	'F', 't', "Get_Event_Report_Status", 'G', 2131
	._inspect	'F', 't', "Clear_ALLEventReportInfo_NO_ACK", 'G', 2134
	._inspect	'F', 't', "EventReportState_Expand", 'G', 2136
	._inspect	'F', 't', "ESAM_ErrReport", 'G', 2139
	._inspect	'F', 't', "SwitchOn_Report", 'G', 2142
	._inspect	'F', 't', "SwitchOff_Report", 'G', 2145
	._inspect	'F', 't', "Overdraft_Report", 'G', 2148
	._inspect	'F', 't', "IniRam", 'G', 2151
	._inspect	'F', 't', "CheckEnergyRom1AndRom2", 'G', 2154
	._inspect	'F', 't', "checkEnergyRight", 'G', 2157
	._inspect	'F', 't', "Write_TO_Cal_PowerDown_Energy_add", 'G', 2160
	._inspect	'F', 't', "SetDefault", 'G', 2163
	._inspect	'F', 't', "Retort_New", 'G', 2166
	._inspect	'F', 't', "TotalEnergyRight", 'G', 2168
	._inspect	'F', 't', "ALL_TotalEnergyRight", 'G', 2170
	._inspect	'F', 't', "EnergyAutoRectifyLevel1", 'G', 2172
	._inspect	'F', 't', "EnergyAutoRectifyLevel2", 'G', 2174
	._inspect	'F', 't', "Powerdown_to_ThisMonth", 'G', 2177
	._inspect	'F', 't', "CheckEnergyPowerEnergy", 'G', 2179
	._inspect	'F', 't', "ReadMeterPara", 'G', 2182
	._inspect	'F', 't', "IsNormalReset", 'G', 2183
	._inspect	'F', 't', "IsHaveSaveData", 'G', 2185
	._inspect	'F', 't', "Clear_Savedata_flag", 'G', 2188
	._inspect	'F', 't', "ReadEepromEnergy", 'G', 2190
	._inspect	'F', 't', "ReadBlock", 'G', 2192
	._inspect	'F', 't', "IsNormalResetWrite", 'G', 2194
	._inspect	'F', 't', "Check_New", 'G', 2197
	._inspect	'F', 't', "Para_Process_main", 'G', 2200
	._inspect	'F', 't', "ReadEeprom", 'G', 2202
	._inspect	'F', 't', "Para_Process_run", 'G', 2205
	._inspect	'V', 't', "Parameter_flag", 'G', 2206
	._inspect	'V', 't', "para_err_times", 'G', 18
	._inspect	'F', 't', "My_Memcmp", 'G', 2209
	._inspect	'F', 't', "Byte2BCD", 'G', 2212
	._inspect	'F', 't', "Find_Data_Record", 'G', 2215
	._inspect	'F', 't', "Add_Addr", 'G', 2217
	._inspect	'F', 't', "Get_SortAddr", 'G', 2219
	._inspect	'F', 't', "Get_SortAddr1", 'G', 2221
	._inspect	'F', 't', "Get_TotalAddr", 'G', 2223
	._inspect	'F', 't', "Page_equal", 'G', 2225
	._inspect	'F', 't', "Cover_Addr_Find", 'G', 2227
	._inspect	'F', 't', "My_memcpyRev", 'G', 2231
	._inspect	'V', 't', "Card_WR_Buff", 'G', 2232
	._inspect	'V', 't', "Minute_Power_Data", 'G', 2233
	._inspect	'V', 't', "Read_Count", 'G', 2240
	._inspect	'V', 't', "Fs_Buff", 'G', 2241
	._inspect	'V', 't', "Dat_Num", 'G', 3
	._inspect	'V', 't', "Set_LoadRecoed_Btime", 'G', 312
	._inspect	'V', 't', "First_Sort", 'G', 2242
	._inspect	'V', 't', "FlashErrStatus", 'G', 2243
	._inspect	'V', 't', "BIT_UNC", 'G', 2253
	._inspect	'V', 't', "day_num", 'G', 2254
	._inspect	'V', 't', "Clase_Length", 'G', 2255
	._inspect	'V', 't', "DaysOfMonth", 'G', 2256
	._inspect	'V', 't', "remain_skip_pnt", 'G', 18
	._inspect	'V', 't', "sum_done_pnt", 'G', 18
	._inspect	'V', 't', "next_record_block", 'G', 18
	._inspect	'V', 't', "fst_not_rd_blk", 'G', 18
	._inspect	'V', 't', "sort_base_type", 'G', 2257
	._inspect	'V', 't', "last_frm_len", 'G', 3
	._inspect	'V', 't', "sort", 'S', 3
	._inspect	'V', 't', "per_len", 'S', 3
	._inspect	'V', 't', "period", 'S', 18
	._inspect	'V', 't', "lst_pnt_data", 'G', 2258
	._inspect	'V', 't', "lst_record_tm", 'G', 312
	._inspect	'V', 't', "l_lst_record", 'G', 7
	._inspect	'V', 't', "cur_hour_empty", 'G', 3
	._inspect	'V', 't', "rd_ld_time", 'G', 7

	.glb	__i4div
	.glb	__i4divU
	.END

;## Compile End Time Fri Apr 22 17:17:46 2016


